// Code generated by go-swagger; DO NOT EDIT.

package models_cloudbreak

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// StorageLocationResponse storage location response
// swagger:model StorageLocationResponse

type StorageLocationResponse struct {

	// property file
	// Required: true
	PropertyFile *string `json:"propertyFile"`

	// property name
	// Required: true
	PropertyName *string `json:"propertyName"`

	// value
	// Required: true
	Value *string `json:"value"`
}

/* polymorph StorageLocationResponse propertyFile false */

/* polymorph StorageLocationResponse propertyName false */

/* polymorph StorageLocationResponse value false */

// Validate validates this storage location response
func (m *StorageLocationResponse) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validatePropertyFile(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := m.validatePropertyName(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := m.validateValue(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *StorageLocationResponse) validatePropertyFile(formats strfmt.Registry) error {

	if err := validate.Required("propertyFile", "body", m.PropertyFile); err != nil {
		return err
	}

	return nil
}

func (m *StorageLocationResponse) validatePropertyName(formats strfmt.Registry) error {

	if err := validate.Required("propertyName", "body", m.PropertyName); err != nil {
		return err
	}

	return nil
}

func (m *StorageLocationResponse) validateValue(formats strfmt.Registry) error {

	if err := validate.Required("value", "body", m.Value); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *StorageLocationResponse) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *StorageLocationResponse) UnmarshalBinary(b []byte) error {
	var res StorageLocationResponse
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
