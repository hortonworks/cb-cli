// Code generated by go-swagger; DO NOT EDIT.

package models_cloudbreak

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"strconv"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// ClusterViewResponse cluster view response
// swagger:model ClusterViewResponse

type ClusterViewResponse struct {

	// public ambari ip of the stack
	AmbariServerIP string `json:"ambariServerIp,omitempty"`

	// blueprint for the cluster
	Blueprint *BlueprintViewResponse `json:"blueprint,omitempty"`

	// description of the resource
	// Max Length: 1000
	// Min Length: 0
	Description *string `json:"description,omitempty"`

	// collection of hostgroups
	// Unique: true
	HostGroups []*HostGroupViewResponse `json:"hostGroups"`

	// id of the resource
	ID int64 `json:"id,omitempty"`

	// name of the resource
	// Required: true
	// Max Length: 100
	// Min Length: 5
	// Pattern: (^[a-z][-a-z0-9]*[a-z0-9]$)
	Name *string `json:"name"`

	// tells wether the cluster is secured or not
	Secure *bool `json:"secure,omitempty"`

	// shared service for a specific stack
	SharedServiceResponse *SharedServiceResponse `json:"sharedServiceResponse,omitempty"`

	// status of the cluster
	Status string `json:"status,omitempty"`
}

/* polymorph ClusterViewResponse ambariServerIp false */

/* polymorph ClusterViewResponse blueprint false */

/* polymorph ClusterViewResponse description false */

/* polymorph ClusterViewResponse hostGroups false */

/* polymorph ClusterViewResponse id false */

/* polymorph ClusterViewResponse name false */

/* polymorph ClusterViewResponse secure false */

/* polymorph ClusterViewResponse sharedServiceResponse false */

/* polymorph ClusterViewResponse status false */

// Validate validates this cluster view response
func (m *ClusterViewResponse) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateBlueprint(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := m.validateDescription(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := m.validateHostGroups(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := m.validateName(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := m.validateSharedServiceResponse(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := m.validateStatus(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *ClusterViewResponse) validateBlueprint(formats strfmt.Registry) error {

	if swag.IsZero(m.Blueprint) { // not required
		return nil
	}

	if m.Blueprint != nil {

		if err := m.Blueprint.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("blueprint")
			}
			return err
		}
	}

	return nil
}

func (m *ClusterViewResponse) validateDescription(formats strfmt.Registry) error {

	if swag.IsZero(m.Description) { // not required
		return nil
	}

	if err := validate.MinLength("description", "body", string(*m.Description), 0); err != nil {
		return err
	}

	if err := validate.MaxLength("description", "body", string(*m.Description), 1000); err != nil {
		return err
	}

	return nil
}

func (m *ClusterViewResponse) validateHostGroups(formats strfmt.Registry) error {

	if swag.IsZero(m.HostGroups) { // not required
		return nil
	}

	if err := validate.UniqueItems("hostGroups", "body", m.HostGroups); err != nil {
		return err
	}

	for i := 0; i < len(m.HostGroups); i++ {

		if swag.IsZero(m.HostGroups[i]) { // not required
			continue
		}

		if m.HostGroups[i] != nil {

			if err := m.HostGroups[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("hostGroups" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

func (m *ClusterViewResponse) validateName(formats strfmt.Registry) error {

	if err := validate.Required("name", "body", m.Name); err != nil {
		return err
	}

	if err := validate.MinLength("name", "body", string(*m.Name), 5); err != nil {
		return err
	}

	if err := validate.MaxLength("name", "body", string(*m.Name), 100); err != nil {
		return err
	}

	if err := validate.Pattern("name", "body", string(*m.Name), `(^[a-z][-a-z0-9]*[a-z0-9]$)`); err != nil {
		return err
	}

	return nil
}

func (m *ClusterViewResponse) validateSharedServiceResponse(formats strfmt.Registry) error {

	if swag.IsZero(m.SharedServiceResponse) { // not required
		return nil
	}

	if m.SharedServiceResponse != nil {

		if err := m.SharedServiceResponse.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("sharedServiceResponse")
			}
			return err
		}
	}

	return nil
}

var clusterViewResponseTypeStatusPropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["REQUESTED","CREATE_IN_PROGRESS","AVAILABLE","UPDATE_IN_PROGRESS","UPDATE_REQUESTED","UPDATE_FAILED","CREATE_FAILED","ENABLE_SECURITY_FAILED","PRE_DELETE_IN_PROGRESS","DELETE_IN_PROGRESS","DELETE_FAILED","DELETE_COMPLETED","STOPPED","STOP_REQUESTED","START_REQUESTED","STOP_IN_PROGRESS","START_IN_PROGRESS","START_FAILED","STOP_FAILED","WAIT_FOR_SYNC"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		clusterViewResponseTypeStatusPropEnum = append(clusterViewResponseTypeStatusPropEnum, v)
	}
}

const (
	// ClusterViewResponseStatusREQUESTED captures enum value "REQUESTED"
	ClusterViewResponseStatusREQUESTED string = "REQUESTED"
	// ClusterViewResponseStatusCREATEINPROGRESS captures enum value "CREATE_IN_PROGRESS"
	ClusterViewResponseStatusCREATEINPROGRESS string = "CREATE_IN_PROGRESS"
	// ClusterViewResponseStatusAVAILABLE captures enum value "AVAILABLE"
	ClusterViewResponseStatusAVAILABLE string = "AVAILABLE"
	// ClusterViewResponseStatusUPDATEINPROGRESS captures enum value "UPDATE_IN_PROGRESS"
	ClusterViewResponseStatusUPDATEINPROGRESS string = "UPDATE_IN_PROGRESS"
	// ClusterViewResponseStatusUPDATEREQUESTED captures enum value "UPDATE_REQUESTED"
	ClusterViewResponseStatusUPDATEREQUESTED string = "UPDATE_REQUESTED"
	// ClusterViewResponseStatusUPDATEFAILED captures enum value "UPDATE_FAILED"
	ClusterViewResponseStatusUPDATEFAILED string = "UPDATE_FAILED"
	// ClusterViewResponseStatusCREATEFAILED captures enum value "CREATE_FAILED"
	ClusterViewResponseStatusCREATEFAILED string = "CREATE_FAILED"
	// ClusterViewResponseStatusENABLESECURITYFAILED captures enum value "ENABLE_SECURITY_FAILED"
	ClusterViewResponseStatusENABLESECURITYFAILED string = "ENABLE_SECURITY_FAILED"
	// ClusterViewResponseStatusPREDELETEINPROGRESS captures enum value "PRE_DELETE_IN_PROGRESS"
	ClusterViewResponseStatusPREDELETEINPROGRESS string = "PRE_DELETE_IN_PROGRESS"
	// ClusterViewResponseStatusDELETEINPROGRESS captures enum value "DELETE_IN_PROGRESS"
	ClusterViewResponseStatusDELETEINPROGRESS string = "DELETE_IN_PROGRESS"
	// ClusterViewResponseStatusDELETEFAILED captures enum value "DELETE_FAILED"
	ClusterViewResponseStatusDELETEFAILED string = "DELETE_FAILED"
	// ClusterViewResponseStatusDELETECOMPLETED captures enum value "DELETE_COMPLETED"
	ClusterViewResponseStatusDELETECOMPLETED string = "DELETE_COMPLETED"
	// ClusterViewResponseStatusSTOPPED captures enum value "STOPPED"
	ClusterViewResponseStatusSTOPPED string = "STOPPED"
	// ClusterViewResponseStatusSTOPREQUESTED captures enum value "STOP_REQUESTED"
	ClusterViewResponseStatusSTOPREQUESTED string = "STOP_REQUESTED"
	// ClusterViewResponseStatusSTARTREQUESTED captures enum value "START_REQUESTED"
	ClusterViewResponseStatusSTARTREQUESTED string = "START_REQUESTED"
	// ClusterViewResponseStatusSTOPINPROGRESS captures enum value "STOP_IN_PROGRESS"
	ClusterViewResponseStatusSTOPINPROGRESS string = "STOP_IN_PROGRESS"
	// ClusterViewResponseStatusSTARTINPROGRESS captures enum value "START_IN_PROGRESS"
	ClusterViewResponseStatusSTARTINPROGRESS string = "START_IN_PROGRESS"
	// ClusterViewResponseStatusSTARTFAILED captures enum value "START_FAILED"
	ClusterViewResponseStatusSTARTFAILED string = "START_FAILED"
	// ClusterViewResponseStatusSTOPFAILED captures enum value "STOP_FAILED"
	ClusterViewResponseStatusSTOPFAILED string = "STOP_FAILED"
	// ClusterViewResponseStatusWAITFORSYNC captures enum value "WAIT_FOR_SYNC"
	ClusterViewResponseStatusWAITFORSYNC string = "WAIT_FOR_SYNC"
)

// prop value enum
func (m *ClusterViewResponse) validateStatusEnum(path, location string, value string) error {
	if err := validate.Enum(path, location, value, clusterViewResponseTypeStatusPropEnum); err != nil {
		return err
	}
	return nil
}

func (m *ClusterViewResponse) validateStatus(formats strfmt.Registry) error {

	if swag.IsZero(m.Status) { // not required
		return nil
	}

	// value enum
	if err := m.validateStatusEnum("status", "body", m.Status); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *ClusterViewResponse) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *ClusterViewResponse) UnmarshalBinary(b []byte) error {
	var res ClusterViewResponse
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
