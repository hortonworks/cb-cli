// Code generated by go-swagger; DO NOT EDIT.

package models_cloudbreak

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"strconv"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// ConfigsRequest configs request
// swagger:model ConfigsRequest

type ConfigsRequest struct {

	// request object
	// Required: true
	// Unique: true
	Requests []*BlueprintParameter `json:"requests"`
}

/* polymorph ConfigsRequest requests false */

// Validate validates this configs request
func (m *ConfigsRequest) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateRequests(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *ConfigsRequest) validateRequests(formats strfmt.Registry) error {

	if err := validate.Required("requests", "body", m.Requests); err != nil {
		return err
	}

	if err := validate.UniqueItems("requests", "body", m.Requests); err != nil {
		return err
	}

	for i := 0; i < len(m.Requests); i++ {

		if swag.IsZero(m.Requests[i]) { // not required
			continue
		}

		if m.Requests[i] != nil {

			if err := m.Requests[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("requests" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// MarshalBinary interface implementation
func (m *ConfigsRequest) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *ConfigsRequest) UnmarshalBinary(b []byte) error {
	var res ConfigsRequest
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
