package models_cloudbreak

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-swagger/go-swagger/strfmt"

	"github.com/go-swagger/go-swagger/errors"
	"github.com/go-swagger/go-swagger/httpkit/validate"
)

/*AmbariRepoDetailsJSON ambari repo details json

swagger:model AmbariRepoDetailsJson
*/
type AmbariRepoDetailsJSON struct {

	/* url of the Ambari repository

	Required: true
	*/
	BaseURL string `json:"baseUrl"`

	/* gpg key of the Ambari repository

	Required: true
	*/
	GpgKeyURL string `json:"gpgKeyUrl"`

	/* version of the Ambari

	Required: true
	*/
	Version string `json:"version"`
}

// Validate validates this ambari repo details json
func (m *AmbariRepoDetailsJSON) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateBaseURL(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := m.validateGpgKeyURL(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := m.validateVersion(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *AmbariRepoDetailsJSON) validateBaseURL(formats strfmt.Registry) error {

	if err := validate.RequiredString("baseUrl", "body", string(m.BaseURL)); err != nil {
		return err
	}

	return nil
}

func (m *AmbariRepoDetailsJSON) validateGpgKeyURL(formats strfmt.Registry) error {

	if err := validate.RequiredString("gpgKeyUrl", "body", string(m.GpgKeyURL)); err != nil {
		return err
	}

	return nil
}

func (m *AmbariRepoDetailsJSON) validateVersion(formats strfmt.Registry) error {

	if err := validate.RequiredString("version", "body", string(m.Version)); err != nil {
		return err
	}

	return nil
}
