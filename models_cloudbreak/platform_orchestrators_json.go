package models_cloudbreak

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-swagger/go-swagger/strfmt"
	"github.com/go-swagger/go-swagger/swag"

	"github.com/go-swagger/go-swagger/errors"
	"github.com/go-swagger/go-swagger/httpkit/validate"
)

/*PlatformOrchestratorsJSON platform orchestrators json

swagger:model PlatformOrchestratorsJson
*/
type PlatformOrchestratorsJSON struct {

	/* default orchestrators
	 */
	Defaults map[string]string `json:"defaults,omitempty"`

	/* orchestrators
	 */
	Orchestrators map[string][]string `json:"orchestrators,omitempty"`
}

// Validate validates this platform orchestrators json
func (m *PlatformOrchestratorsJSON) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateDefaults(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := m.validateOrchestrators(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *PlatformOrchestratorsJSON) validateDefaults(formats strfmt.Registry) error {

	if swag.IsZero(m.Defaults) { // not required
		return nil
	}

	if err := validate.Required("defaults", "body", m.Defaults); err != nil {
		return err
	}

	return nil
}

func (m *PlatformOrchestratorsJSON) validateOrchestrators(formats strfmt.Registry) error {

	if swag.IsZero(m.Orchestrators) { // not required
		return nil
	}

	if err := validate.Required("orchestrators", "body", m.Orchestrators); err != nil {
		return err
	}

	return nil
}
