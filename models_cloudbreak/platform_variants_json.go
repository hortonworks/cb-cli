package models_cloudbreak

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-swagger/go-swagger/strfmt"
	"github.com/go-swagger/go-swagger/swag"

	"github.com/go-swagger/go-swagger/errors"
	"github.com/go-swagger/go-swagger/httpkit/validate"
)

/*PlatformVariantsJSON platform variants json

swagger:model PlatformVariantsJson
*/
type PlatformVariantsJSON struct {

	/* default variants
	 */
	DefaultVariants map[string]string `json:"defaultVariants,omitempty"`

	/* platform variants
	 */
	PlatformToVariants map[string][]string `json:"platformToVariants,omitempty"`
}

// Validate validates this platform variants json
func (m *PlatformVariantsJSON) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateDefaultVariants(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := m.validatePlatformToVariants(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *PlatformVariantsJSON) validateDefaultVariants(formats strfmt.Registry) error {

	if swag.IsZero(m.DefaultVariants) { // not required
		return nil
	}

	if err := validate.Required("defaultVariants", "body", m.DefaultVariants); err != nil {
		return err
	}

	return nil
}

func (m *PlatformVariantsJSON) validatePlatformToVariants(formats strfmt.Registry) error {

	if swag.IsZero(m.PlatformToVariants) { // not required
		return nil
	}

	if err := validate.Required("platformToVariants", "body", m.PlatformToVariants); err != nil {
		return err
	}

	return nil
}
