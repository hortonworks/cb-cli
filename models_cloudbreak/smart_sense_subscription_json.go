package models_cloudbreak

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-swagger/go-swagger/strfmt"

	"github.com/go-swagger/go-swagger/errors"
	"github.com/go-swagger/go-swagger/httpkit/validate"
)

/*SmartSenseSubscriptionJSON smart sense subscription json

swagger:model SmartSenseSubscriptionJson
*/
type SmartSenseSubscriptionJSON struct {

	/* account id of the resource owner that is provided by OAuth provider

	Read Only: true
	*/
	Account *string `json:"account,omitempty"`

	/* id of the resource

	Read Only: true
	*/
	ID *int64 `json:"id,omitempty"`

	/* id of the resource owner that is provided by OAuth provider

	Read Only: true
	*/
	Owner *string `json:"owner,omitempty"`

	/* resource is visible in account

	Read Only: true
	*/
	PublicInAccount *bool `json:"publicInAccount,omitempty"`

	/* Identifier of SmartSense subscription.

	Required: true
	Pattern: ^([A-Z]{1}-[0-9]{8}-[A-Z]{1}-[0-9]{8}$)
	*/
	SubscriptionID string `json:"subscriptionId"`
}

// Validate validates this smart sense subscription json
func (m *SmartSenseSubscriptionJSON) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateSubscriptionID(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *SmartSenseSubscriptionJSON) validateSubscriptionID(formats strfmt.Registry) error {

	if err := validate.RequiredString("subscriptionId", "body", string(m.SubscriptionID)); err != nil {
		return err
	}

	if err := validate.Pattern("subscriptionId", "body", string(m.SubscriptionID), `^([A-Z]{1}-[0-9]{8}-[A-Z]{1}-[0-9]{8}$)`); err != nil {
		return err
	}

	return nil
}
