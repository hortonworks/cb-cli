// Code generated by go-swagger; DO NOT EDIT.

package models_cloudbreak

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"strconv"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
)

// SecurityGroupDetails security group details
// swagger:model SecurityGroupDetails

type SecurityGroupDetails struct {

	// description
	Description string `json:"description,omitempty"`

	// id
	ID int64 `json:"id,omitempty"`

	// name
	Name string `json:"name,omitempty"`

	// security group Id
	SecurityGroupID string `json:"securityGroupId,omitempty"`

	// security rules
	SecurityRules []*SecurityRuleDetails `json:"securityRules"`
}

/* polymorph SecurityGroupDetails description false */

/* polymorph SecurityGroupDetails id false */

/* polymorph SecurityGroupDetails name false */

/* polymorph SecurityGroupDetails securityGroupId false */

/* polymorph SecurityGroupDetails securityRules false */

// Validate validates this security group details
func (m *SecurityGroupDetails) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateSecurityRules(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *SecurityGroupDetails) validateSecurityRules(formats strfmt.Registry) error {

	if swag.IsZero(m.SecurityRules) { // not required
		return nil
	}

	for i := 0; i < len(m.SecurityRules); i++ {

		if swag.IsZero(m.SecurityRules[i]) { // not required
			continue
		}

		if m.SecurityRules[i] != nil {

			if err := m.SecurityRules[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("securityRules" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// MarshalBinary interface implementation
func (m *SecurityGroupDetails) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *SecurityGroupDetails) UnmarshalBinary(b []byte) error {
	var res SecurityGroupDetails
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
