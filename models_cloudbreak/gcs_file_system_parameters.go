// Code generated by go-swagger; DO NOT EDIT.

package models_cloudbreak

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// GcsFileSystemParameters gcs file system parameters
// swagger:model GcsFileSystemParameters

type GcsFileSystemParameters struct {

	// as map
	AsMap map[string]string `json:"asMap,omitempty"`

	// default bucket name
	DefaultBucketName string `json:"defaultBucketName,omitempty"`

	// project Id
	ProjectID string `json:"projectId,omitempty"`

	// service account email
	ServiceAccountEmail string `json:"serviceAccountEmail,omitempty"`

	// type
	Type string `json:"type,omitempty"`
}

/* polymorph GcsFileSystemParameters asMap false */

/* polymorph GcsFileSystemParameters defaultBucketName false */

/* polymorph GcsFileSystemParameters projectId false */

/* polymorph GcsFileSystemParameters serviceAccountEmail false */

/* polymorph GcsFileSystemParameters type false */

// Validate validates this gcs file system parameters
func (m *GcsFileSystemParameters) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateType(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

var gcsFileSystemParametersTypeTypePropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["WASB_INTEGRATED","GCS","WASB","ADLS","S3"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		gcsFileSystemParametersTypeTypePropEnum = append(gcsFileSystemParametersTypeTypePropEnum, v)
	}
}

const (
	// GcsFileSystemParametersTypeWASBINTEGRATED captures enum value "WASB_INTEGRATED"
	GcsFileSystemParametersTypeWASBINTEGRATED string = "WASB_INTEGRATED"
	// GcsFileSystemParametersTypeGCS captures enum value "GCS"
	GcsFileSystemParametersTypeGCS string = "GCS"
	// GcsFileSystemParametersTypeWASB captures enum value "WASB"
	GcsFileSystemParametersTypeWASB string = "WASB"
	// GcsFileSystemParametersTypeADLS captures enum value "ADLS"
	GcsFileSystemParametersTypeADLS string = "ADLS"
	// GcsFileSystemParametersTypeS3 captures enum value "S3"
	GcsFileSystemParametersTypeS3 string = "S3"
)

// prop value enum
func (m *GcsFileSystemParameters) validateTypeEnum(path, location string, value string) error {
	if err := validate.Enum(path, location, value, gcsFileSystemParametersTypeTypePropEnum); err != nil {
		return err
	}
	return nil
}

func (m *GcsFileSystemParameters) validateType(formats strfmt.Registry) error {

	if swag.IsZero(m.Type) { // not required
		return nil
	}

	// value enum
	if err := m.validateTypeEnum("type", "body", m.Type); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *GcsFileSystemParameters) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *GcsFileSystemParameters) UnmarshalBinary(b []byte) error {
	var res GcsFileSystemParameters
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
