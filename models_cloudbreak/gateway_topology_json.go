// Code generated by go-swagger; DO NOT EDIT.

package models_cloudbreak

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
)

// GatewayTopologyJSON gateway topology Json
// swagger:model GatewayTopologyJson

type GatewayTopologyJSON struct {

	// exposed Knox services - those services that should be accessible through Knox gateway.
	ExposedServices []string `json:"exposedServices"`

	// Knox topology name
	TopologyName string `json:"topologyName,omitempty"`
}

/* polymorph GatewayTopologyJson exposedServices false */

/* polymorph GatewayTopologyJson topologyName false */

// Validate validates this gateway topology Json
func (m *GatewayTopologyJSON) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateExposedServices(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *GatewayTopologyJSON) validateExposedServices(formats strfmt.Registry) error {

	if swag.IsZero(m.ExposedServices) { // not required
		return nil
	}

	return nil
}

// MarshalBinary interface implementation
func (m *GatewayTopologyJSON) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *GatewayTopologyJSON) UnmarshalBinary(b []byte) error {
	var res GatewayTopologyJSON
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
