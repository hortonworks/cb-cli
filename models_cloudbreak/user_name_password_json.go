package models_cloudbreak

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-swagger/go-swagger/strfmt"

	"github.com/go-swagger/go-swagger/errors"
	"github.com/go-swagger/go-swagger/httpkit/validate"
)

/*UserNamePasswordJSON user name password json

swagger:model UserNamePasswordJson
*/
type UserNamePasswordJSON struct {

	/* old password in ambari

	Required: true
	*/
	OldPassword string `json:"oldPassword"`

	/* new password in ambari

	Required: true
	*/
	Password string `json:"password"`

	/* new user name in ambari

	Required: true
	*/
	UserName string `json:"userName"`
}

// Validate validates this user name password json
func (m *UserNamePasswordJSON) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateOldPassword(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := m.validatePassword(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := m.validateUserName(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *UserNamePasswordJSON) validateOldPassword(formats strfmt.Registry) error {

	if err := validate.RequiredString("oldPassword", "body", string(m.OldPassword)); err != nil {
		return err
	}

	return nil
}

func (m *UserNamePasswordJSON) validatePassword(formats strfmt.Registry) error {

	if err := validate.RequiredString("password", "body", string(m.Password)); err != nil {
		return err
	}

	return nil
}

func (m *UserNamePasswordJSON) validateUserName(formats strfmt.Registry) error {

	if err := validate.RequiredString("userName", "body", string(m.UserName)); err != nil {
		return err
	}

	return nil
}
