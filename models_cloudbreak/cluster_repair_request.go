package models_cloudbreak

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"strconv"

	strfmt "github.com/go-swagger/go-swagger/strfmt"

	"github.com/go-swagger/go-swagger/errors"
	"github.com/go-swagger/go-swagger/httpkit/validate"
)

/*ClusterRepairRequest cluster repair request

swagger:model ClusterRepairRequest
*/
type ClusterRepairRequest struct {

	/* List of hostgroups where the failed nodes will be repaired

	Required: true
	*/
	HostGroups []string `json:"hostGroups"`

	/* If true, the failed nodes will only be removed, otherwise the failed nodes will be removed and new nodes will be started.
	 */
	RemoveOnly *bool `json:"removeOnly,omitempty"`
}

// Validate validates this cluster repair request
func (m *ClusterRepairRequest) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateHostGroups(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *ClusterRepairRequest) validateHostGroups(formats strfmt.Registry) error {

	if err := validate.Required("hostGroups", "body", m.HostGroups); err != nil {
		return err
	}

	for i := 0; i < len(m.HostGroups); i++ {

		if err := validate.RequiredString("hostGroups"+"."+strconv.Itoa(i), "body", string(m.HostGroups[i])); err != nil {
			return err
		}

	}

	return nil
}
