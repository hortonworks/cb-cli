// Code generated by go-swagger; DO NOT EDIT.

package models_cloudbreak

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"strconv"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// BlueprintResponse blueprint response
// swagger:model BlueprintResponse

type BlueprintResponse struct {

	// ambari blueprint JSON, set this or the url field
	AmbariBlueprint string `json:"ambariBlueprint,omitempty"`

	// gathered from blueprintName field from the blueprint JSON
	BlueprintName string `json:"blueprintName,omitempty"`

	// description of the resource
	// Max Length: 1000
	// Min Length: 0
	Description *string `json:"description,omitempty"`

	// number of host groups
	HostGroupCount int32 `json:"hostGroupCount,omitempty"`

	// id of the resource
	ID int64 `json:"id,omitempty"`

	// input parameters of the blueprint
	// Unique: true
	Inputs []*BlueprintParameter `json:"inputs"`

	// name of the resource
	// Required: true
	Name *string `json:"name"`

	// resource is visible in account
	Public *bool `json:"public,omitempty"`

	// status of the blueprint
	Status string `json:"status,omitempty"`
}

/* polymorph BlueprintResponse ambariBlueprint false */

/* polymorph BlueprintResponse blueprintName false */

/* polymorph BlueprintResponse description false */

/* polymorph BlueprintResponse hostGroupCount false */

/* polymorph BlueprintResponse id false */

/* polymorph BlueprintResponse inputs false */

/* polymorph BlueprintResponse name false */

/* polymorph BlueprintResponse public false */

/* polymorph BlueprintResponse status false */

// Validate validates this blueprint response
func (m *BlueprintResponse) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateDescription(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := m.validateInputs(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := m.validateName(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := m.validateStatus(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *BlueprintResponse) validateDescription(formats strfmt.Registry) error {

	if swag.IsZero(m.Description) { // not required
		return nil
	}

	if err := validate.MinLength("description", "body", string(*m.Description), 0); err != nil {
		return err
	}

	if err := validate.MaxLength("description", "body", string(*m.Description), 1000); err != nil {
		return err
	}

	return nil
}

func (m *BlueprintResponse) validateInputs(formats strfmt.Registry) error {

	if swag.IsZero(m.Inputs) { // not required
		return nil
	}

	if err := validate.UniqueItems("inputs", "body", m.Inputs); err != nil {
		return err
	}

	for i := 0; i < len(m.Inputs); i++ {

		if swag.IsZero(m.Inputs[i]) { // not required
			continue
		}

		if m.Inputs[i] != nil {

			if err := m.Inputs[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("inputs" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

func (m *BlueprintResponse) validateName(formats strfmt.Registry) error {

	if err := validate.Required("name", "body", m.Name); err != nil {
		return err
	}

	return nil
}

var blueprintResponseTypeStatusPropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["DEFAULT","DEFAULT_DELETED","USER_MANAGED"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		blueprintResponseTypeStatusPropEnum = append(blueprintResponseTypeStatusPropEnum, v)
	}
}

const (
	// BlueprintResponseStatusDEFAULT captures enum value "DEFAULT"
	BlueprintResponseStatusDEFAULT string = "DEFAULT"
	// BlueprintResponseStatusDEFAULTDELETED captures enum value "DEFAULT_DELETED"
	BlueprintResponseStatusDEFAULTDELETED string = "DEFAULT_DELETED"
	// BlueprintResponseStatusUSERMANAGED captures enum value "USER_MANAGED"
	BlueprintResponseStatusUSERMANAGED string = "USER_MANAGED"
)

// prop value enum
func (m *BlueprintResponse) validateStatusEnum(path, location string, value string) error {
	if err := validate.Enum(path, location, value, blueprintResponseTypeStatusPropEnum); err != nil {
		return err
	}
	return nil
}

func (m *BlueprintResponse) validateStatus(formats strfmt.Registry) error {

	if swag.IsZero(m.Status) { // not required
		return nil
	}

	// value enum
	if err := m.validateStatusEnum("status", "body", m.Status); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *BlueprintResponse) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *BlueprintResponse) UnmarshalBinary(b []byte) error {
	var res BlueprintResponse
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
