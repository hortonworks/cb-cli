package models_cloudbreak

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-swagger/go-swagger/strfmt"
	"github.com/go-swagger/go-swagger/swag"

	"github.com/go-swagger/go-swagger/errors"
	"github.com/go-swagger/go-swagger/httpkit/validate"
)

/*PlatformVirtualMachinesJSON platform virtual machines json

swagger:model PlatformVirtualMachinesJson
*/
type PlatformVirtualMachinesJSON struct {

	/* default virtual machines
	 */
	DefaultVirtualMachines map[string]string `json:"defaultVirtualMachines,omitempty"`

	/* default virtual machines per zones
	 */
	DefaultVMTypePerZones map[string]map[string]string `json:"defaultVmTypePerZones,omitempty"`

	/* virtual machines
	 */
	VirtualMachines map[string][]*VMTypeJSON `json:"virtualMachines,omitempty"`

	/* virtual machines per zones
	 */
	VMTypesPerZones map[string]map[string][]*VMTypeJSON `json:"vmTypesPerZones,omitempty"`
}

// Validate validates this platform virtual machines json
func (m *PlatformVirtualMachinesJSON) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateDefaultVirtualMachines(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := m.validateDefaultVMTypePerZones(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := m.validateVirtualMachines(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := m.validateVMTypesPerZones(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *PlatformVirtualMachinesJSON) validateDefaultVirtualMachines(formats strfmt.Registry) error {

	if swag.IsZero(m.DefaultVirtualMachines) { // not required
		return nil
	}

	if err := validate.Required("defaultVirtualMachines", "body", m.DefaultVirtualMachines); err != nil {
		return err
	}

	return nil
}

func (m *PlatformVirtualMachinesJSON) validateDefaultVMTypePerZones(formats strfmt.Registry) error {

	if swag.IsZero(m.DefaultVMTypePerZones) { // not required
		return nil
	}

	if swag.IsZero(m.DefaultVMTypePerZones) { // not required
		return nil
	}

	return nil
}

func (m *PlatformVirtualMachinesJSON) validateVirtualMachines(formats strfmt.Registry) error {

	if swag.IsZero(m.VirtualMachines) { // not required
		return nil
	}

	if err := validate.Required("virtualMachines", "body", m.VirtualMachines); err != nil {
		return err
	}

	return nil
}

func (m *PlatformVirtualMachinesJSON) validateVMTypesPerZones(formats strfmt.Registry) error {

	if swag.IsZero(m.VMTypesPerZones) { // not required
		return nil
	}

	if swag.IsZero(m.VMTypesPerZones) { // not required
		return nil
	}

	return nil
}
