// Code generated by go-swagger; DO NOT EDIT.

package models_cloudbreak

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
)

// FlexUsageComponentInstanceJSON flex usage component instance Json
// swagger:model FlexUsageComponentInstanceJson

type FlexUsageComponentInstanceJSON struct {

	// creation time
	CreationTime string `json:"creationTime,omitempty"`

	// flex subscription Id
	FlexSubscriptionID string `json:"flexSubscriptionId,omitempty"`

	// guid
	GUID string `json:"guid,omitempty"`

	// peak usage
	PeakUsage int32 `json:"peakUsage,omitempty"`

	// provider
	Provider string `json:"provider,omitempty"`

	// region
	Region string `json:"region,omitempty"`

	// usage date
	UsageDate string `json:"usageDate,omitempty"`
}

/* polymorph FlexUsageComponentInstanceJson creationTime false */

/* polymorph FlexUsageComponentInstanceJson flexSubscriptionId false */

/* polymorph FlexUsageComponentInstanceJson guid false */

/* polymorph FlexUsageComponentInstanceJson peakUsage false */

/* polymorph FlexUsageComponentInstanceJson provider false */

/* polymorph FlexUsageComponentInstanceJson region false */

/* polymorph FlexUsageComponentInstanceJson usageDate false */

// Validate validates this flex usage component instance Json
func (m *FlexUsageComponentInstanceJSON) Validate(formats strfmt.Registry) error {
	var res []error

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// MarshalBinary interface implementation
func (m *FlexUsageComponentInstanceJSON) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *FlexUsageComponentInstanceJSON) UnmarshalBinary(b []byte) error {
	var res FlexUsageComponentInstanceJSON
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
