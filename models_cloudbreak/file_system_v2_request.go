// Code generated by go-swagger; DO NOT EDIT.

package models_cloudbreak

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
)

// FileSystemV2Request file system v2 request
// swagger:model FileSystemV2Request

type FileSystemV2Request struct {

	// adls
	Adls *AdlsFileSystemParameters `json:"adls,omitempty"`

	// description
	Description string `json:"description,omitempty"`

	// gcs
	Gcs *GcsFileSystemParameters `json:"gcs,omitempty"`

	// s3
	S3 *S3FileSystemParameters `json:"s3,omitempty"`

	// wasb
	Wasb *WasbFileSystemParameters `json:"wasb,omitempty"`
}

/* polymorph FileSystemV2Request adls false */

/* polymorph FileSystemV2Request description false */

/* polymorph FileSystemV2Request gcs false */

/* polymorph FileSystemV2Request s3 false */

/* polymorph FileSystemV2Request wasb false */

// Validate validates this file system v2 request
func (m *FileSystemV2Request) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateAdls(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := m.validateGcs(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := m.validateS3(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := m.validateWasb(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *FileSystemV2Request) validateAdls(formats strfmt.Registry) error {

	if swag.IsZero(m.Adls) { // not required
		return nil
	}

	if m.Adls != nil {

		if err := m.Adls.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("adls")
			}
			return err
		}
	}

	return nil
}

func (m *FileSystemV2Request) validateGcs(formats strfmt.Registry) error {

	if swag.IsZero(m.Gcs) { // not required
		return nil
	}

	if m.Gcs != nil {

		if err := m.Gcs.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("gcs")
			}
			return err
		}
	}

	return nil
}

func (m *FileSystemV2Request) validateS3(formats strfmt.Registry) error {

	if swag.IsZero(m.S3) { // not required
		return nil
	}

	if m.S3 != nil {

		if err := m.S3.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("s3")
			}
			return err
		}
	}

	return nil
}

func (m *FileSystemV2Request) validateWasb(formats strfmt.Registry) error {

	if swag.IsZero(m.Wasb) { // not required
		return nil
	}

	if m.Wasb != nil {

		if err := m.Wasb.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("wasb")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (m *FileSystemV2Request) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *FileSystemV2Request) UnmarshalBinary(b []byte) error {
	var res FileSystemV2Request
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
