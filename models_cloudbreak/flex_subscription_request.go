package models_cloudbreak

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-swagger/go-swagger/strfmt"
	"github.com/go-swagger/go-swagger/swag"

	"github.com/go-swagger/go-swagger/errors"
	"github.com/go-swagger/go-swagger/httpkit/validate"
)

/*FlexSubscriptionRequest flex subscription request

swagger:model FlexSubscriptionRequest
*/
type FlexSubscriptionRequest struct {

	/* default
	 */
	Default *bool `json:"default,omitempty"`

	/* name of the resource

	Required: true
	*/
	Name string `json:"name"`

	/* Identifier of SmartSense subscription Cloudbreak domain object json representation.

	Read Only: true
	*/
	SmartSenseSubscriptionID *int64 `json:"smartSenseSubscriptionId,omitempty"`

	/* Identifier of Flex subscription.

	Read Only: true
	Pattern: ^(FLEX-[0-9]{10}$)
	*/
	SubscriptionID *string `json:"subscriptionId,omitempty"`

	/* true if the flex subscription was used for the controller
	 */
	UsedForController *bool `json:"usedForController,omitempty"`
}

// Validate validates this flex subscription request
func (m *FlexSubscriptionRequest) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateName(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := m.validateSubscriptionID(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *FlexSubscriptionRequest) validateName(formats strfmt.Registry) error {

	if err := validate.RequiredString("name", "body", string(m.Name)); err != nil {
		return err
	}

	return nil
}

func (m *FlexSubscriptionRequest) validateSubscriptionID(formats strfmt.Registry) error {

	if swag.IsZero(m.SubscriptionID) { // not required
		return nil
	}

	if err := validate.Pattern("subscriptionId", "body", string(*m.SubscriptionID), `^(FLEX-[0-9]{10}$)`); err != nil {
		return err
	}

	return nil
}
