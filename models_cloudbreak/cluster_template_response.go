// Code generated by go-swagger; DO NOT EDIT.

package models_cloudbreak

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// ClusterTemplateResponse cluster template response
// swagger:model ClusterTemplateResponse

type ClusterTemplateResponse struct {

	// id of the resource
	ID int64 `json:"id,omitempty"`

	// name of the cluster template
	// Required: true
	Name *string `json:"name"`

	// stringified template JSON
	Template string `json:"template,omitempty"`

	// type of the cluster template
	Type string `json:"type,omitempty"`
}

/* polymorph ClusterTemplateResponse id false */

/* polymorph ClusterTemplateResponse name false */

/* polymorph ClusterTemplateResponse template false */

/* polymorph ClusterTemplateResponse type false */

// Validate validates this cluster template response
func (m *ClusterTemplateResponse) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateName(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := m.validateType(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *ClusterTemplateResponse) validateName(formats strfmt.Registry) error {

	if err := validate.Required("name", "body", m.Name); err != nil {
		return err
	}

	return nil
}

var clusterTemplateResponseTypeTypePropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["QUICK_START"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		clusterTemplateResponseTypeTypePropEnum = append(clusterTemplateResponseTypeTypePropEnum, v)
	}
}

const (
	// ClusterTemplateResponseTypeQUICKSTART captures enum value "QUICK_START"
	ClusterTemplateResponseTypeQUICKSTART string = "QUICK_START"
)

// prop value enum
func (m *ClusterTemplateResponse) validateTypeEnum(path, location string, value string) error {
	if err := validate.Enum(path, location, value, clusterTemplateResponseTypeTypePropEnum); err != nil {
		return err
	}
	return nil
}

func (m *ClusterTemplateResponse) validateType(formats strfmt.Registry) error {

	if swag.IsZero(m.Type) { // not required
		return nil
	}

	// value enum
	if err := m.validateTypeEnum("type", "body", m.Type); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *ClusterTemplateResponse) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *ClusterTemplateResponse) UnmarshalBinary(b []byte) error {
	var res ClusterTemplateResponse
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
