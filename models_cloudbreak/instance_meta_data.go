package models_cloudbreak

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"

	strfmt "github.com/go-swagger/go-swagger/strfmt"
	"github.com/go-swagger/go-swagger/swag"

	"github.com/go-swagger/go-swagger/errors"
	"github.com/go-swagger/go-swagger/httpkit/validate"
)

/*InstanceMetaData instance meta data

swagger:model InstanceMetaData
*/
type InstanceMetaData struct {

	/* ambari server address
	 */
	AmbariServer *bool `json:"ambariServer,omitempty"`

	/* the fully qualified domain name of the node in the service discovery cluster
	 */
	DiscoveryFQDN *string `json:"discoveryFQDN,omitempty"`

	/* name of the instance group
	 */
	InstanceGroup *string `json:"instanceGroup,omitempty"`

	/* id of the instance
	 */
	InstanceID *string `json:"instanceId,omitempty"`

	/* status of the instance
	 */
	InstanceStatus *string `json:"instanceStatus,omitempty"`

	/* private ip of the insctance
	 */
	PrivateIP *string `json:"privateIp,omitempty"`

	/* public ip of the instance
	 */
	PublicIP *string `json:"publicIp,omitempty"`

	/* ssh port
	 */
	SSHPort *int32 `json:"sshPort,omitempty"`
}

// Validate validates this instance meta data
func (m *InstanceMetaData) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateInstanceStatus(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

var instanceMetaDataTypeInstanceStatusPropEnum []interface{}

func (m *InstanceMetaData) validateInstanceStatusEnum(path, location string, value string) error {
	if instanceMetaDataTypeInstanceStatusPropEnum == nil {
		var res []string
		if err := json.Unmarshal([]byte(`["REQUESTED","CREATED","UNREGISTERED","REGISTERED","DECOMMISSIONED","TERMINATED","FAILED","STOPPED"]`), &res); err != nil {
			return err
		}
		for _, v := range res {
			instanceMetaDataTypeInstanceStatusPropEnum = append(instanceMetaDataTypeInstanceStatusPropEnum, v)
		}
	}
	if err := validate.Enum(path, location, value, instanceMetaDataTypeInstanceStatusPropEnum); err != nil {
		return err
	}
	return nil
}

func (m *InstanceMetaData) validateInstanceStatus(formats strfmt.Registry) error {

	if swag.IsZero(m.InstanceStatus) { // not required
		return nil
	}

	if err := m.validateInstanceStatusEnum("instanceStatus", "body", *m.InstanceStatus); err != nil {
		return err
	}

	return nil
}
