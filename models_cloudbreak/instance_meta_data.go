// Code generated by go-swagger; DO NOT EDIT.

package models_cloudbreak

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// InstanceMetaData instance meta data
// swagger:model InstanceMetaData

type InstanceMetaData struct {

	// ambari server address
	AmbariServer *bool `json:"ambariServer,omitempty"`

	// the fully qualified domain name of the node in the service discovery cluster
	DiscoveryFQDN string `json:"discoveryFQDN,omitempty"`

	// name of the instance group
	InstanceGroup string `json:"instanceGroup,omitempty"`

	// id of the instance
	InstanceID string `json:"instanceId,omitempty"`

	// status of the instance
	InstanceStatus string `json:"instanceStatus,omitempty"`

	// type of the instance
	InstanceType string `json:"instanceType,omitempty"`

	// private ip of the insctance
	PrivateIP string `json:"privateIp,omitempty"`

	// public ip of the instance
	PublicIP string `json:"publicIp,omitempty"`

	// ssh port
	SSHPort int32 `json:"sshPort,omitempty"`
}

/* polymorph InstanceMetaData ambariServer false */

/* polymorph InstanceMetaData discoveryFQDN false */

/* polymorph InstanceMetaData instanceGroup false */

/* polymorph InstanceMetaData instanceId false */

/* polymorph InstanceMetaData instanceStatus false */

/* polymorph InstanceMetaData instanceType false */

/* polymorph InstanceMetaData privateIp false */

/* polymorph InstanceMetaData publicIp false */

/* polymorph InstanceMetaData sshPort false */

// Validate validates this instance meta data
func (m *InstanceMetaData) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateInstanceStatus(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := m.validateInstanceType(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

var instanceMetaDataTypeInstanceStatusPropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["REQUESTED","CREATED","UNREGISTERED","REGISTERED","DECOMMISSIONED","TERMINATED","DELETED_ON_PROVIDER_SIDE","FAILED","STOPPED"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		instanceMetaDataTypeInstanceStatusPropEnum = append(instanceMetaDataTypeInstanceStatusPropEnum, v)
	}
}

const (
	// InstanceMetaDataInstanceStatusREQUESTED captures enum value "REQUESTED"
	InstanceMetaDataInstanceStatusREQUESTED string = "REQUESTED"
	// InstanceMetaDataInstanceStatusCREATED captures enum value "CREATED"
	InstanceMetaDataInstanceStatusCREATED string = "CREATED"
	// InstanceMetaDataInstanceStatusUNREGISTERED captures enum value "UNREGISTERED"
	InstanceMetaDataInstanceStatusUNREGISTERED string = "UNREGISTERED"
	// InstanceMetaDataInstanceStatusREGISTERED captures enum value "REGISTERED"
	InstanceMetaDataInstanceStatusREGISTERED string = "REGISTERED"
	// InstanceMetaDataInstanceStatusDECOMMISSIONED captures enum value "DECOMMISSIONED"
	InstanceMetaDataInstanceStatusDECOMMISSIONED string = "DECOMMISSIONED"
	// InstanceMetaDataInstanceStatusTERMINATED captures enum value "TERMINATED"
	InstanceMetaDataInstanceStatusTERMINATED string = "TERMINATED"
	// InstanceMetaDataInstanceStatusDELETEDONPROVIDERSIDE captures enum value "DELETED_ON_PROVIDER_SIDE"
	InstanceMetaDataInstanceStatusDELETEDONPROVIDERSIDE string = "DELETED_ON_PROVIDER_SIDE"
	// InstanceMetaDataInstanceStatusFAILED captures enum value "FAILED"
	InstanceMetaDataInstanceStatusFAILED string = "FAILED"
	// InstanceMetaDataInstanceStatusSTOPPED captures enum value "STOPPED"
	InstanceMetaDataInstanceStatusSTOPPED string = "STOPPED"
)

// prop value enum
func (m *InstanceMetaData) validateInstanceStatusEnum(path, location string, value string) error {
	if err := validate.Enum(path, location, value, instanceMetaDataTypeInstanceStatusPropEnum); err != nil {
		return err
	}
	return nil
}

func (m *InstanceMetaData) validateInstanceStatus(formats strfmt.Registry) error {

	if swag.IsZero(m.InstanceStatus) { // not required
		return nil
	}

	// value enum
	if err := m.validateInstanceStatusEnum("instanceStatus", "body", m.InstanceStatus); err != nil {
		return err
	}

	return nil
}

var instanceMetaDataTypeInstanceTypePropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["GATEWAY","GATEWAY_PRIMARY","CORE"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		instanceMetaDataTypeInstanceTypePropEnum = append(instanceMetaDataTypeInstanceTypePropEnum, v)
	}
}

const (
	// InstanceMetaDataInstanceTypeGATEWAY captures enum value "GATEWAY"
	InstanceMetaDataInstanceTypeGATEWAY string = "GATEWAY"
	// InstanceMetaDataInstanceTypeGATEWAYPRIMARY captures enum value "GATEWAY_PRIMARY"
	InstanceMetaDataInstanceTypeGATEWAYPRIMARY string = "GATEWAY_PRIMARY"
	// InstanceMetaDataInstanceTypeCORE captures enum value "CORE"
	InstanceMetaDataInstanceTypeCORE string = "CORE"
)

// prop value enum
func (m *InstanceMetaData) validateInstanceTypeEnum(path, location string, value string) error {
	if err := validate.Enum(path, location, value, instanceMetaDataTypeInstanceTypePropEnum); err != nil {
		return err
	}
	return nil
}

func (m *InstanceMetaData) validateInstanceType(formats strfmt.Registry) error {

	if swag.IsZero(m.InstanceType) { // not required
		return nil
	}

	// value enum
	if err := m.validateInstanceTypeEnum("instanceType", "body", m.InstanceType); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *InstanceMetaData) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *InstanceMetaData) UnmarshalBinary(b []byte) error {
	var res InstanceMetaData
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
