package models_cloudbreak

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-swagger/go-swagger/strfmt"

	"github.com/go-swagger/go-swagger/errors"
	"github.com/go-swagger/go-swagger/httpkit/validate"
)

/*HostMetadata host metadata

swagger:model HostMetadata
*/
type HostMetadata struct {

	/* name of the host group

	Required: true
	*/
	GroupName string `json:"groupName"`

	/* id of the resource
	 */
	ID *int64 `json:"id,omitempty"`

	/* name of the resource

	Required: true
	*/
	Name string `json:"name"`

	/* state of the host
	 */
	State *string `json:"state,omitempty"`
}

// Validate validates this host metadata
func (m *HostMetadata) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateGroupName(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := m.validateName(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *HostMetadata) validateGroupName(formats strfmt.Registry) error {

	if err := validate.RequiredString("groupName", "body", string(m.GroupName)); err != nil {
		return err
	}

	return nil
}

func (m *HostMetadata) validateName(formats strfmt.Registry) error {

	if err := validate.RequiredString("name", "body", string(m.Name)); err != nil {
		return err
	}

	return nil
}
