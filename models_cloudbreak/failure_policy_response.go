package models_cloudbreak

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"

	strfmt "github.com/go-swagger/go-swagger/strfmt"

	"github.com/go-swagger/go-swagger/errors"
	"github.com/go-swagger/go-swagger/httpkit/validate"
)

/*FailurePolicyResponse failure policy response

swagger:model FailurePolicyResponse
*/
type FailurePolicyResponse struct {

	/* type of  adjustment

	Required: true
	*/
	AdjustmentType string `json:"adjustmentType"`

	/* id of the resource
	 */
	ID *int64 `json:"id,omitempty"`

	/* threshold of failure policy
	 */
	Threshold *int64 `json:"threshold,omitempty"`
}

// Validate validates this failure policy response
func (m *FailurePolicyResponse) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateAdjustmentType(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

var failurePolicyResponseTypeAdjustmentTypePropEnum []interface{}

func (m *FailurePolicyResponse) validateAdjustmentTypeEnum(path, location string, value string) error {
	if failurePolicyResponseTypeAdjustmentTypePropEnum == nil {
		var res []string
		if err := json.Unmarshal([]byte(`["EXACT","PERCENTAGE","BEST_EFFORT"]`), &res); err != nil {
			return err
		}
		for _, v := range res {
			failurePolicyResponseTypeAdjustmentTypePropEnum = append(failurePolicyResponseTypeAdjustmentTypePropEnum, v)
		}
	}
	if err := validate.Enum(path, location, value, failurePolicyResponseTypeAdjustmentTypePropEnum); err != nil {
		return err
	}
	return nil
}

func (m *FailurePolicyResponse) validateAdjustmentType(formats strfmt.Registry) error {

	if err := validate.RequiredString("adjustmentType", "body", string(m.AdjustmentType)); err != nil {
		return err
	}

	if err := m.validateAdjustmentTypeEnum("adjustmentType", "body", m.AdjustmentType); err != nil {
		return err
	}

	return nil
}
