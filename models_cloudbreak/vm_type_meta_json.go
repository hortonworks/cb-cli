package models_cloudbreak

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-swagger/go-swagger/strfmt"
	"github.com/go-swagger/go-swagger/swag"

	"github.com/go-swagger/go-swagger/errors"
	"github.com/go-swagger/go-swagger/httpkit/validate"
)

/*VMTypeMetaJSON vm type meta json

swagger:model VmTypeMetaJson
*/
type VMTypeMetaJSON struct {

	/* configs
	 */
	Configs []*VolumeParameterConfigJSON `json:"configs,omitempty"`

	/* properties
	 */
	Properties map[string]string `json:"properties,omitempty"`
}

// Validate validates this vm type meta json
func (m *VMTypeMetaJSON) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateConfigs(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := m.validateProperties(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *VMTypeMetaJSON) validateConfigs(formats strfmt.Registry) error {

	if swag.IsZero(m.Configs) { // not required
		return nil
	}

	for i := 0; i < len(m.Configs); i++ {

		if m.Configs[i] != nil {

			if err := m.Configs[i].Validate(formats); err != nil {
				return err
			}
		}

	}

	return nil
}

func (m *VMTypeMetaJSON) validateProperties(formats strfmt.Registry) error {

	if swag.IsZero(m.Properties) { // not required
		return nil
	}

	if err := validate.Required("properties", "body", m.Properties); err != nil {
		return err
	}

	return nil
}
