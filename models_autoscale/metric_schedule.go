package models_autoscale

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-swagger/go-swagger/strfmt"
	"github.com/go-swagger/go-swagger/swag"

	"github.com/go-swagger/go-swagger/errors"
	"github.com/go-swagger/go-swagger/httpkit/validate"
)

/*MetricSchedule metric schedule

swagger:model MetricSchedule
*/
type MetricSchedule struct {

	/* Name of the alert

	Pattern: ([a-zA-Z][-a-zA-Z0-9]*)
	*/
	AlertName *string `json:"alertName,omitempty"`

	/* Cron expression of the time alert
	 */
	Cron *string `json:"cron,omitempty"`

	/* Description of the alert
	 */
	Description *string `json:"description,omitempty"`

	/* Id of the alert
	 */
	ID *int64 `json:"id,omitempty"`

	/* Id of the scaling ploicy
	 */
	ScalingPolicyID *int64 `json:"scalingPolicyId,omitempty"`

	/* Timezone of the time alert
	 */
	TimeZone *string `json:"timeZone,omitempty"`
}

// Validate validates this metric schedule
func (m *MetricSchedule) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateAlertName(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *MetricSchedule) validateAlertName(formats strfmt.Registry) error {

	if swag.IsZero(m.AlertName) { // not required
		return nil
	}

	if err := validate.Pattern("alertName", "body", string(*m.AlertName), `([a-zA-Z][-a-zA-Z0-9]*)`); err != nil {
		return err
	}

	return nil
}
