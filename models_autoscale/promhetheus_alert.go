package models_autoscale

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"

	strfmt "github.com/go-swagger/go-swagger/strfmt"
	"github.com/go-swagger/go-swagger/swag"

	"github.com/go-swagger/go-swagger/errors"
	"github.com/go-swagger/go-swagger/httpkit/validate"
)

/*PromhetheusAlert promhetheus alert

swagger:model PromhetheusAlert
*/
type PromhetheusAlert struct {

	/* Name of the alert

	Pattern: ([a-zA-Z][-a-zA-Z0-9]*)
	*/
	AlertName *string `json:"alertName,omitempty"`

	/* Operator of the alert's query.
	 */
	AlertOperator *string `json:"alertOperator,omitempty"`

	/* Name of the predefined Prometheus alert rule that could be parameterized by the period and threshold fields.
	 */
	AlertRuleName *string `json:"alertRuleName,omitempty"`

	/* State of the alert
	 */
	AlertState *string `json:"alertState,omitempty"`

	/* Description of the alert
	 */
	Description *string `json:"description,omitempty"`

	/* Id of the alert
	 */
	ID *int64 `json:"id,omitempty"`

	/* Period of the alert
	 */
	Period *int32 `json:"period,omitempty"`

	/* Id of the scaling ploicy
	 */
	ScalingPolicyID *int64 `json:"scalingPolicyId,omitempty"`

	/* Threshold of the alert in percent
	 */
	Threshold *float64 `json:"threshold,omitempty"`
}

// Validate validates this promhetheus alert
func (m *PromhetheusAlert) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateAlertName(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := m.validateAlertOperator(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := m.validateAlertState(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *PromhetheusAlert) validateAlertName(formats strfmt.Registry) error {

	if swag.IsZero(m.AlertName) { // not required
		return nil
	}

	if err := validate.Pattern("alertName", "body", string(*m.AlertName), `([a-zA-Z][-a-zA-Z0-9]*)`); err != nil {
		return err
	}

	return nil
}

var promhetheusAlertTypeAlertOperatorPropEnum []interface{}

func (m *PromhetheusAlert) validateAlertOperatorEnum(path, location string, value string) error {
	if promhetheusAlertTypeAlertOperatorPropEnum == nil {
		var res []string
		if err := json.Unmarshal([]byte(`["LESS_THAN","MORE_THAN"]`), &res); err != nil {
			return err
		}
		for _, v := range res {
			promhetheusAlertTypeAlertOperatorPropEnum = append(promhetheusAlertTypeAlertOperatorPropEnum, v)
		}
	}
	if err := validate.Enum(path, location, value, promhetheusAlertTypeAlertOperatorPropEnum); err != nil {
		return err
	}
	return nil
}

func (m *PromhetheusAlert) validateAlertOperator(formats strfmt.Registry) error {

	if swag.IsZero(m.AlertOperator) { // not required
		return nil
	}

	if err := m.validateAlertOperatorEnum("alertOperator", "body", *m.AlertOperator); err != nil {
		return err
	}

	return nil
}

var promhetheusAlertTypeAlertStatePropEnum []interface{}

func (m *PromhetheusAlert) validateAlertStateEnum(path, location string, value string) error {
	if promhetheusAlertTypeAlertStatePropEnum == nil {
		var res []string
		if err := json.Unmarshal([]byte(`["OK","WARN","CRITICAL"]`), &res); err != nil {
			return err
		}
		for _, v := range res {
			promhetheusAlertTypeAlertStatePropEnum = append(promhetheusAlertTypeAlertStatePropEnum, v)
		}
	}
	if err := validate.Enum(path, location, value, promhetheusAlertTypeAlertStatePropEnum); err != nil {
		return err
	}
	return nil
}

func (m *PromhetheusAlert) validateAlertState(formats strfmt.Registry) error {

	if swag.IsZero(m.AlertState) { // not required
		return nil
	}

	if err := m.validateAlertStateEnum("alertState", "body", *m.AlertState); err != nil {
		return err
	}

	return nil
}
