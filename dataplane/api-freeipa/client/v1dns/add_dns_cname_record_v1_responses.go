// Code generated by go-swagger; DO NOT EDIT.

package v1dns

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"
)

// AddDNSCnameRecordV1Reader is a Reader for the AddDNSCnameRecordV1 structure.
type AddDNSCnameRecordV1Reader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *AddDNSCnameRecordV1Reader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {

	result := NewAddDNSCnameRecordV1Default(response.Code())
	if err := result.readResponse(response, consumer, o.formats); err != nil {
		return nil, err
	}
	if response.Code()/100 == 2 {
		return result, nil
	}
	return nil, result

}

// NewAddDNSCnameRecordV1Default creates a AddDNSCnameRecordV1Default with default headers values
func NewAddDNSCnameRecordV1Default(code int) *AddDNSCnameRecordV1Default {
	return &AddDNSCnameRecordV1Default{
		_statusCode: code,
	}
}

/*AddDNSCnameRecordV1Default handles this case with default header values.

successful operation
*/
type AddDNSCnameRecordV1Default struct {
	_statusCode int
}

// Code gets the status code for the add Dns cname record v1 default response
func (o *AddDNSCnameRecordV1Default) Code() int {
	return o._statusCode
}

func (o *AddDNSCnameRecordV1Default) Error() string {
	return fmt.Sprintf("[POST /v1/dns/record/cname][%d] addDnsCnameRecordV1 default ", o._statusCode)
}

func (o *AddDNSCnameRecordV1Default) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
