// Code generated by go-swagger; DO NOT EDIT.

package v1freeipa

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"

	strfmt "github.com/go-openapi/strfmt"
)

// NewInternalGetAllFreeIpaByEnvironmentV1Params creates a new InternalGetAllFreeIpaByEnvironmentV1Params object
// with the default values initialized.
func NewInternalGetAllFreeIpaByEnvironmentV1Params() *InternalGetAllFreeIpaByEnvironmentV1Params {
	var ()
	return &InternalGetAllFreeIpaByEnvironmentV1Params{

		timeout: cr.DefaultTimeout,
	}
}

// NewInternalGetAllFreeIpaByEnvironmentV1ParamsWithTimeout creates a new InternalGetAllFreeIpaByEnvironmentV1Params object
// with the default values initialized, and the ability to set a timeout on a request
func NewInternalGetAllFreeIpaByEnvironmentV1ParamsWithTimeout(timeout time.Duration) *InternalGetAllFreeIpaByEnvironmentV1Params {
	var ()
	return &InternalGetAllFreeIpaByEnvironmentV1Params{

		timeout: timeout,
	}
}

// NewInternalGetAllFreeIpaByEnvironmentV1ParamsWithContext creates a new InternalGetAllFreeIpaByEnvironmentV1Params object
// with the default values initialized, and the ability to set a context for a request
func NewInternalGetAllFreeIpaByEnvironmentV1ParamsWithContext(ctx context.Context) *InternalGetAllFreeIpaByEnvironmentV1Params {
	var ()
	return &InternalGetAllFreeIpaByEnvironmentV1Params{

		Context: ctx,
	}
}

// NewInternalGetAllFreeIpaByEnvironmentV1ParamsWithHTTPClient creates a new InternalGetAllFreeIpaByEnvironmentV1Params object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewInternalGetAllFreeIpaByEnvironmentV1ParamsWithHTTPClient(client *http.Client) *InternalGetAllFreeIpaByEnvironmentV1Params {
	var ()
	return &InternalGetAllFreeIpaByEnvironmentV1Params{
		HTTPClient: client,
	}
}

/*
InternalGetAllFreeIpaByEnvironmentV1Params contains all the parameters to send to the API endpoint
for the internal get all free ipa by environment v1 operation typically these are written to a http.Request
*/
type InternalGetAllFreeIpaByEnvironmentV1Params struct {

	/*AccountID*/
	AccountID *string
	/*Environment*/
	Environment *string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the internal get all free ipa by environment v1 params
func (o *InternalGetAllFreeIpaByEnvironmentV1Params) WithTimeout(timeout time.Duration) *InternalGetAllFreeIpaByEnvironmentV1Params {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the internal get all free ipa by environment v1 params
func (o *InternalGetAllFreeIpaByEnvironmentV1Params) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the internal get all free ipa by environment v1 params
func (o *InternalGetAllFreeIpaByEnvironmentV1Params) WithContext(ctx context.Context) *InternalGetAllFreeIpaByEnvironmentV1Params {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the internal get all free ipa by environment v1 params
func (o *InternalGetAllFreeIpaByEnvironmentV1Params) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the internal get all free ipa by environment v1 params
func (o *InternalGetAllFreeIpaByEnvironmentV1Params) WithHTTPClient(client *http.Client) *InternalGetAllFreeIpaByEnvironmentV1Params {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the internal get all free ipa by environment v1 params
func (o *InternalGetAllFreeIpaByEnvironmentV1Params) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithAccountID adds the accountID to the internal get all free ipa by environment v1 params
func (o *InternalGetAllFreeIpaByEnvironmentV1Params) WithAccountID(accountID *string) *InternalGetAllFreeIpaByEnvironmentV1Params {
	o.SetAccountID(accountID)
	return o
}

// SetAccountID adds the accountId to the internal get all free ipa by environment v1 params
func (o *InternalGetAllFreeIpaByEnvironmentV1Params) SetAccountID(accountID *string) {
	o.AccountID = accountID
}

// WithEnvironment adds the environment to the internal get all free ipa by environment v1 params
func (o *InternalGetAllFreeIpaByEnvironmentV1Params) WithEnvironment(environment *string) *InternalGetAllFreeIpaByEnvironmentV1Params {
	o.SetEnvironment(environment)
	return o
}

// SetEnvironment adds the environment to the internal get all free ipa by environment v1 params
func (o *InternalGetAllFreeIpaByEnvironmentV1Params) SetEnvironment(environment *string) {
	o.Environment = environment
}

// WriteToRequest writes these params to a swagger request
func (o *InternalGetAllFreeIpaByEnvironmentV1Params) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.AccountID != nil {

		// query param accountId
		var qrAccountID string
		if o.AccountID != nil {
			qrAccountID = *o.AccountID
		}
		qAccountID := qrAccountID
		if qAccountID != "" {
			if err := r.SetQueryParam("accountId", qAccountID); err != nil {
				return err
			}
		}

	}

	if o.Environment != nil {

		// query param environment
		var qrEnvironment string
		if o.Environment != nil {
			qrEnvironment = *o.Environment
		}
		qEnvironment := qrEnvironment
		if qEnvironment != "" {
			if err := r.SetQueryParam("environment", qEnvironment); err != nil {
				return err
			}
		}

	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
