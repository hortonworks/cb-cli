// Code generated by go-swagger; DO NOT EDIT.

package model

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// CleanupV1Response cleanup v1 response
// swagger:model CleanupV1Response
type CleanupV1Response struct {

	// host cleanup failed
	HostCleanupFailed map[string]string `json:"hostCleanupFailed,omitempty"`

	// host cleanup success
	// Unique: true
	HostCleanupSuccess []string `json:"hostCleanupSuccess"`

	// role cleanup failed
	RoleCleanupFailed map[string]string `json:"roleCleanupFailed,omitempty"`

	// role cleanup success
	// Unique: true
	RoleCleanupSuccess []string `json:"roleCleanupSuccess"`

	// user cleanup failed
	UserCleanupFailed map[string]string `json:"userCleanupFailed,omitempty"`

	// user cleanup success
	// Unique: true
	UserCleanupSuccess []string `json:"userCleanupSuccess"`
}

// Validate validates this cleanup v1 response
func (m *CleanupV1Response) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateHostCleanupSuccess(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateRoleCleanupSuccess(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateUserCleanupSuccess(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *CleanupV1Response) validateHostCleanupSuccess(formats strfmt.Registry) error {

	if swag.IsZero(m.HostCleanupSuccess) { // not required
		return nil
	}

	if err := validate.UniqueItems("hostCleanupSuccess", "body", m.HostCleanupSuccess); err != nil {
		return err
	}

	return nil
}

func (m *CleanupV1Response) validateRoleCleanupSuccess(formats strfmt.Registry) error {

	if swag.IsZero(m.RoleCleanupSuccess) { // not required
		return nil
	}

	if err := validate.UniqueItems("roleCleanupSuccess", "body", m.RoleCleanupSuccess); err != nil {
		return err
	}

	return nil
}

func (m *CleanupV1Response) validateUserCleanupSuccess(formats strfmt.Registry) error {

	if swag.IsZero(m.UserCleanupSuccess) { // not required
		return nil
	}

	if err := validate.UniqueItems("userCleanupSuccess", "body", m.UserCleanupSuccess); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *CleanupV1Response) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *CleanupV1Response) UnmarshalBinary(b []byte) error {
	var res CleanupV1Response
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
