// Code generated by go-swagger; DO NOT EDIT.

package model

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
)

// UserSyncStatusV1Response user sync status v1 response
// swagger:model UserSyncStatusV1Response
type UserSyncStatusV1Response struct {

	// User synchronization operation id
	// Required: true
	EventGenerationIds map[string]string `json:"eventGenerationIds"`

	// User synchronization operation id
	LastStartedUserSyncID string `json:"lastStartedUserSyncId,omitempty"`

	// User synchronization operation id
	LastSuccessfulUserSyncID string `json:"lastSuccessfulUserSyncId,omitempty"`
}

// Validate validates this user sync status v1 response
func (m *UserSyncStatusV1Response) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateEventGenerationIds(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *UserSyncStatusV1Response) validateEventGenerationIds(formats strfmt.Registry) error {

	return nil
}

// MarshalBinary interface implementation
func (m *UserSyncStatusV1Response) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *UserSyncStatusV1Response) UnmarshalBinary(b []byte) error {
	var res UserSyncStatusV1Response
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
