// Code generated by go-swagger; DO NOT EDIT.

package model

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// FreeIpaUpscaleV1Response free ipa upscale v1 response
// swagger:model FreeIpaUpscaleV1Response
type FreeIpaUpscaleV1Response struct {

	// flow identifier
	FlowIdentifier *FlowIdentifier `json:"flowIdentifier,omitempty"`

	// operation Id
	OperationID string `json:"operationId,omitempty"`

	// original availability type
	// Enum: [HA TWO_NODE_BASED NON_HA]
	OriginalAvailabilityType string `json:"originalAvailabilityType,omitempty"`

	// target availability type
	// Enum: [HA TWO_NODE_BASED NON_HA]
	TargetAvailabilityType string `json:"targetAvailabilityType,omitempty"`
}

// Validate validates this free ipa upscale v1 response
func (m *FreeIpaUpscaleV1Response) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateFlowIdentifier(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateOriginalAvailabilityType(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateTargetAvailabilityType(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *FreeIpaUpscaleV1Response) validateFlowIdentifier(formats strfmt.Registry) error {

	if swag.IsZero(m.FlowIdentifier) { // not required
		return nil
	}

	if m.FlowIdentifier != nil {
		if err := m.FlowIdentifier.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("flowIdentifier")
			}
			return err
		}
	}

	return nil
}

var freeIpaUpscaleV1ResponseTypeOriginalAvailabilityTypePropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["HA","TWO_NODE_BASED","NON_HA"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		freeIpaUpscaleV1ResponseTypeOriginalAvailabilityTypePropEnum = append(freeIpaUpscaleV1ResponseTypeOriginalAvailabilityTypePropEnum, v)
	}
}

const (

	// FreeIpaUpscaleV1ResponseOriginalAvailabilityTypeHA captures enum value "HA"
	FreeIpaUpscaleV1ResponseOriginalAvailabilityTypeHA string = "HA"

	// FreeIpaUpscaleV1ResponseOriginalAvailabilityTypeTWONODEBASED captures enum value "TWO_NODE_BASED"
	FreeIpaUpscaleV1ResponseOriginalAvailabilityTypeTWONODEBASED string = "TWO_NODE_BASED"

	// FreeIpaUpscaleV1ResponseOriginalAvailabilityTypeNONHA captures enum value "NON_HA"
	FreeIpaUpscaleV1ResponseOriginalAvailabilityTypeNONHA string = "NON_HA"
)

// prop value enum
func (m *FreeIpaUpscaleV1Response) validateOriginalAvailabilityTypeEnum(path, location string, value string) error {
	if err := validate.Enum(path, location, value, freeIpaUpscaleV1ResponseTypeOriginalAvailabilityTypePropEnum); err != nil {
		return err
	}
	return nil
}

func (m *FreeIpaUpscaleV1Response) validateOriginalAvailabilityType(formats strfmt.Registry) error {

	if swag.IsZero(m.OriginalAvailabilityType) { // not required
		return nil
	}

	// value enum
	if err := m.validateOriginalAvailabilityTypeEnum("originalAvailabilityType", "body", m.OriginalAvailabilityType); err != nil {
		return err
	}

	return nil
}

var freeIpaUpscaleV1ResponseTypeTargetAvailabilityTypePropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["HA","TWO_NODE_BASED","NON_HA"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		freeIpaUpscaleV1ResponseTypeTargetAvailabilityTypePropEnum = append(freeIpaUpscaleV1ResponseTypeTargetAvailabilityTypePropEnum, v)
	}
}

const (

	// FreeIpaUpscaleV1ResponseTargetAvailabilityTypeHA captures enum value "HA"
	FreeIpaUpscaleV1ResponseTargetAvailabilityTypeHA string = "HA"

	// FreeIpaUpscaleV1ResponseTargetAvailabilityTypeTWONODEBASED captures enum value "TWO_NODE_BASED"
	FreeIpaUpscaleV1ResponseTargetAvailabilityTypeTWONODEBASED string = "TWO_NODE_BASED"

	// FreeIpaUpscaleV1ResponseTargetAvailabilityTypeNONHA captures enum value "NON_HA"
	FreeIpaUpscaleV1ResponseTargetAvailabilityTypeNONHA string = "NON_HA"
)

// prop value enum
func (m *FreeIpaUpscaleV1Response) validateTargetAvailabilityTypeEnum(path, location string, value string) error {
	if err := validate.Enum(path, location, value, freeIpaUpscaleV1ResponseTypeTargetAvailabilityTypePropEnum); err != nil {
		return err
	}
	return nil
}

func (m *FreeIpaUpscaleV1Response) validateTargetAvailabilityType(formats strfmt.Registry) error {

	if swag.IsZero(m.TargetAvailabilityType) { // not required
		return nil
	}

	// value enum
	if err := m.validateTargetAvailabilityTypeEnum("targetAvailabilityType", "body", m.TargetAvailabilityType); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *FreeIpaUpscaleV1Response) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *FreeIpaUpscaleV1Response) UnmarshalBinary(b []byte) error {
	var res FreeIpaUpscaleV1Response
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
