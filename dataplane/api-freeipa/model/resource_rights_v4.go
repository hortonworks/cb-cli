// Code generated by go-swagger; DO NOT EDIT.

package model

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"strconv"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// ResourceRightsV4 resource rights v4
// swagger:model ResourceRightsV4
type ResourceRightsV4 struct {

	// resource crn
	ResourceCrn string `json:"resourceCrn,omitempty"`

	// rights
	Rights []string `json:"rights"`
}

// Validate validates this resource rights v4
func (m *ResourceRightsV4) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateRights(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

var resourceRightsV4RightsItemsEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["ENV_CREATE","ENV_START","ENV_STOP","ENV_DELETE","ENV_DESCRIBE","CHANGE_CRED","DH_CREATE","DH_START","DH_STOP","DH_DELETE","DH_REPAIR","DH_RESIZE","DH_RETRY","SDX_UPGRADE","SDX_REPAIR","SDX_RETRY","LIST_ASSIGNED_ROLES","DISTROX_READ","DISTROX_WRITE","SDX_READ","SDX_WRITE","ENVIRONMENT_READ","ENVIRONMENT_WRITE"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		resourceRightsV4RightsItemsEnum = append(resourceRightsV4RightsItemsEnum, v)
	}
}

func (m *ResourceRightsV4) validateRightsItemsEnum(path, location string, value string) error {
	if err := validate.Enum(path, location, value, resourceRightsV4RightsItemsEnum); err != nil {
		return err
	}
	return nil
}

func (m *ResourceRightsV4) validateRights(formats strfmt.Registry) error {

	if swag.IsZero(m.Rights) { // not required
		return nil
	}

	for i := 0; i < len(m.Rights); i++ {

		// value enum
		if err := m.validateRightsItemsEnum("rights"+"."+strconv.Itoa(i), "body", m.Rights[i]); err != nil {
			return err
		}

	}

	return nil
}

// MarshalBinary interface implementation
func (m *ResourceRightsV4) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *ResourceRightsV4) UnmarshalBinary(b []byte) error {
	var res ResourceRightsV4
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
