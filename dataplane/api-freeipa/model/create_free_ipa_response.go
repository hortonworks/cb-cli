// Code generated by go-swagger; DO NOT EDIT.

package model

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"strconv"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// CreateFreeIpaResponse create free ipa response
// swagger:model CreateFreeIpaResponse
type CreateFreeIpaResponse struct {

	// stack related authentication
	Authentication *StackAuthenticationV4Response `json:"authentication,omitempty"`

	// aws specific parameters for stack
	Aws AwsStackV4Parameters `json:"aws,omitempty"`

	// azure specific parameters for stack
	Azure *AzureStackV4Parameters `json:"azure,omitempty"`

	// details of the Cloudbreak that provisioned the stack
	CloudbreakDetails *CloudbreakDetailsV4Response `json:"cloudbreakDetails,omitempty"`

	// creation time of the stack in long
	Created int64 `json:"created,omitempty"`

	// environment
	Environment *EnvironmentSettingsV4Response `json:"environment,omitempty"`

	// port of the gateway secured proxy
	GatewayPort int32 `json:"gatewayPort,omitempty"`

	// gcp specific parameters for stack
	Gcp GcpStackV4Parameters `json:"gcp,omitempty"`

	// hardware information where pairing hostmetadata with instancemetadata
	// Unique: true
	HardwareInfoGroups []*HardwareInfoGroupV4Response `json:"hardwareInfoGroups"`

	// image of the stack
	Image *StackImageV4Response `json:"image,omitempty"`

	// instance groups
	InstanceGroups []*InstanceGroupV4Response `json:"instanceGroups"`

	// name of the stack
	// Required: true
	// Max Length: 40
	// Min Length: 5
	// Pattern: (^[a-z][-a-z0-9]*[a-z0-9]$)
	Name *string `json:"name"`

	// stack related network
	Network *NetworkV4Response `json:"network,omitempty"`

	// node count of the stack
	NodeCount int32 `json:"nodeCount,omitempty"`

	// openstack specific parameters for stack
	Openstack OpenStackStackV4Parameters `json:"openstack,omitempty"`

	// placement configuration parameters for a cluster (e.g. 'region', 'availabilityZone')
	// Required: true
	Placement *PlacementSettingsV4Response `json:"placement"`

	// status of the stack
	// Enum: [REQUESTED CREATE_IN_PROGRESS AVAILABLE UPDATE_IN_PROGRESS UPDATE_REQUESTED UPDATE_FAILED CREATE_FAILED ENABLE_SECURITY_FAILED PRE_DELETE_IN_PROGRESS DELETE_IN_PROGRESS DELETE_FAILED DELETE_COMPLETED STOPPED STOP_REQUESTED START_REQUESTED STOP_IN_PROGRESS START_IN_PROGRESS START_FAILED STOP_FAILED WAIT_FOR_SYNC MAINTENANCE_MODE_ENABLED]
	Status string `json:"status,omitempty"`

	// status message of the stack
	StatusReason string `json:"statusReason,omitempty"`

	// stack related tags
	Tags *TagsV4Response `json:"tags,omitempty"`

	// termination completion time of stack in long
	Terminated int64 `json:"terminated,omitempty"`

	// workspace of the resource
	Workspace *WorkspaceResourceV4Response `json:"workspace,omitempty"`

	// openstack specific parameters for stack
	Yarn *YarnStackV4Parameters `json:"yarn,omitempty"`
}

// Validate validates this create free ipa response
func (m *CreateFreeIpaResponse) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateAuthentication(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateAzure(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateCloudbreakDetails(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateEnvironment(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateHardwareInfoGroups(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateImage(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateInstanceGroups(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateName(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateNetwork(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validatePlacement(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateStatus(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateTags(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateWorkspace(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateYarn(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *CreateFreeIpaResponse) validateAuthentication(formats strfmt.Registry) error {

	if swag.IsZero(m.Authentication) { // not required
		return nil
	}

	if m.Authentication != nil {
		if err := m.Authentication.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("authentication")
			}
			return err
		}
	}

	return nil
}

func (m *CreateFreeIpaResponse) validateAzure(formats strfmt.Registry) error {

	if swag.IsZero(m.Azure) { // not required
		return nil
	}

	if m.Azure != nil {
		if err := m.Azure.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("azure")
			}
			return err
		}
	}

	return nil
}

func (m *CreateFreeIpaResponse) validateCloudbreakDetails(formats strfmt.Registry) error {

	if swag.IsZero(m.CloudbreakDetails) { // not required
		return nil
	}

	if m.CloudbreakDetails != nil {
		if err := m.CloudbreakDetails.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("cloudbreakDetails")
			}
			return err
		}
	}

	return nil
}

func (m *CreateFreeIpaResponse) validateEnvironment(formats strfmt.Registry) error {

	if swag.IsZero(m.Environment) { // not required
		return nil
	}

	if m.Environment != nil {
		if err := m.Environment.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("environment")
			}
			return err
		}
	}

	return nil
}

func (m *CreateFreeIpaResponse) validateHardwareInfoGroups(formats strfmt.Registry) error {

	if swag.IsZero(m.HardwareInfoGroups) { // not required
		return nil
	}

	if err := validate.UniqueItems("hardwareInfoGroups", "body", m.HardwareInfoGroups); err != nil {
		return err
	}

	for i := 0; i < len(m.HardwareInfoGroups); i++ {
		if swag.IsZero(m.HardwareInfoGroups[i]) { // not required
			continue
		}

		if m.HardwareInfoGroups[i] != nil {
			if err := m.HardwareInfoGroups[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("hardwareInfoGroups" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

func (m *CreateFreeIpaResponse) validateImage(formats strfmt.Registry) error {

	if swag.IsZero(m.Image) { // not required
		return nil
	}

	if m.Image != nil {
		if err := m.Image.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("image")
			}
			return err
		}
	}

	return nil
}

func (m *CreateFreeIpaResponse) validateInstanceGroups(formats strfmt.Registry) error {

	if swag.IsZero(m.InstanceGroups) { // not required
		return nil
	}

	for i := 0; i < len(m.InstanceGroups); i++ {
		if swag.IsZero(m.InstanceGroups[i]) { // not required
			continue
		}

		if m.InstanceGroups[i] != nil {
			if err := m.InstanceGroups[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("instanceGroups" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

func (m *CreateFreeIpaResponse) validateName(formats strfmt.Registry) error {

	if err := validate.Required("name", "body", m.Name); err != nil {
		return err
	}

	if err := validate.MinLength("name", "body", string(*m.Name), 5); err != nil {
		return err
	}

	if err := validate.MaxLength("name", "body", string(*m.Name), 40); err != nil {
		return err
	}

	if err := validate.Pattern("name", "body", string(*m.Name), `(^[a-z][-a-z0-9]*[a-z0-9]$)`); err != nil {
		return err
	}

	return nil
}

func (m *CreateFreeIpaResponse) validateNetwork(formats strfmt.Registry) error {

	if swag.IsZero(m.Network) { // not required
		return nil
	}

	if m.Network != nil {
		if err := m.Network.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("network")
			}
			return err
		}
	}

	return nil
}

func (m *CreateFreeIpaResponse) validatePlacement(formats strfmt.Registry) error {

	if err := validate.Required("placement", "body", m.Placement); err != nil {
		return err
	}

	if m.Placement != nil {
		if err := m.Placement.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("placement")
			}
			return err
		}
	}

	return nil
}

var createFreeIpaResponseTypeStatusPropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["REQUESTED","CREATE_IN_PROGRESS","AVAILABLE","UPDATE_IN_PROGRESS","UPDATE_REQUESTED","UPDATE_FAILED","CREATE_FAILED","ENABLE_SECURITY_FAILED","PRE_DELETE_IN_PROGRESS","DELETE_IN_PROGRESS","DELETE_FAILED","DELETE_COMPLETED","STOPPED","STOP_REQUESTED","START_REQUESTED","STOP_IN_PROGRESS","START_IN_PROGRESS","START_FAILED","STOP_FAILED","WAIT_FOR_SYNC","MAINTENANCE_MODE_ENABLED"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		createFreeIpaResponseTypeStatusPropEnum = append(createFreeIpaResponseTypeStatusPropEnum, v)
	}
}

const (

	// CreateFreeIpaResponseStatusREQUESTED captures enum value "REQUESTED"
	CreateFreeIpaResponseStatusREQUESTED string = "REQUESTED"

	// CreateFreeIpaResponseStatusCREATEINPROGRESS captures enum value "CREATE_IN_PROGRESS"
	CreateFreeIpaResponseStatusCREATEINPROGRESS string = "CREATE_IN_PROGRESS"

	// CreateFreeIpaResponseStatusAVAILABLE captures enum value "AVAILABLE"
	CreateFreeIpaResponseStatusAVAILABLE string = "AVAILABLE"

	// CreateFreeIpaResponseStatusUPDATEINPROGRESS captures enum value "UPDATE_IN_PROGRESS"
	CreateFreeIpaResponseStatusUPDATEINPROGRESS string = "UPDATE_IN_PROGRESS"

	// CreateFreeIpaResponseStatusUPDATEREQUESTED captures enum value "UPDATE_REQUESTED"
	CreateFreeIpaResponseStatusUPDATEREQUESTED string = "UPDATE_REQUESTED"

	// CreateFreeIpaResponseStatusUPDATEFAILED captures enum value "UPDATE_FAILED"
	CreateFreeIpaResponseStatusUPDATEFAILED string = "UPDATE_FAILED"

	// CreateFreeIpaResponseStatusCREATEFAILED captures enum value "CREATE_FAILED"
	CreateFreeIpaResponseStatusCREATEFAILED string = "CREATE_FAILED"

	// CreateFreeIpaResponseStatusENABLESECURITYFAILED captures enum value "ENABLE_SECURITY_FAILED"
	CreateFreeIpaResponseStatusENABLESECURITYFAILED string = "ENABLE_SECURITY_FAILED"

	// CreateFreeIpaResponseStatusPREDELETEINPROGRESS captures enum value "PRE_DELETE_IN_PROGRESS"
	CreateFreeIpaResponseStatusPREDELETEINPROGRESS string = "PRE_DELETE_IN_PROGRESS"

	// CreateFreeIpaResponseStatusDELETEINPROGRESS captures enum value "DELETE_IN_PROGRESS"
	CreateFreeIpaResponseStatusDELETEINPROGRESS string = "DELETE_IN_PROGRESS"

	// CreateFreeIpaResponseStatusDELETEFAILED captures enum value "DELETE_FAILED"
	CreateFreeIpaResponseStatusDELETEFAILED string = "DELETE_FAILED"

	// CreateFreeIpaResponseStatusDELETECOMPLETED captures enum value "DELETE_COMPLETED"
	CreateFreeIpaResponseStatusDELETECOMPLETED string = "DELETE_COMPLETED"

	// CreateFreeIpaResponseStatusSTOPPED captures enum value "STOPPED"
	CreateFreeIpaResponseStatusSTOPPED string = "STOPPED"

	// CreateFreeIpaResponseStatusSTOPREQUESTED captures enum value "STOP_REQUESTED"
	CreateFreeIpaResponseStatusSTOPREQUESTED string = "STOP_REQUESTED"

	// CreateFreeIpaResponseStatusSTARTREQUESTED captures enum value "START_REQUESTED"
	CreateFreeIpaResponseStatusSTARTREQUESTED string = "START_REQUESTED"

	// CreateFreeIpaResponseStatusSTOPINPROGRESS captures enum value "STOP_IN_PROGRESS"
	CreateFreeIpaResponseStatusSTOPINPROGRESS string = "STOP_IN_PROGRESS"

	// CreateFreeIpaResponseStatusSTARTINPROGRESS captures enum value "START_IN_PROGRESS"
	CreateFreeIpaResponseStatusSTARTINPROGRESS string = "START_IN_PROGRESS"

	// CreateFreeIpaResponseStatusSTARTFAILED captures enum value "START_FAILED"
	CreateFreeIpaResponseStatusSTARTFAILED string = "START_FAILED"

	// CreateFreeIpaResponseStatusSTOPFAILED captures enum value "STOP_FAILED"
	CreateFreeIpaResponseStatusSTOPFAILED string = "STOP_FAILED"

	// CreateFreeIpaResponseStatusWAITFORSYNC captures enum value "WAIT_FOR_SYNC"
	CreateFreeIpaResponseStatusWAITFORSYNC string = "WAIT_FOR_SYNC"

	// CreateFreeIpaResponseStatusMAINTENANCEMODEENABLED captures enum value "MAINTENANCE_MODE_ENABLED"
	CreateFreeIpaResponseStatusMAINTENANCEMODEENABLED string = "MAINTENANCE_MODE_ENABLED"
)

// prop value enum
func (m *CreateFreeIpaResponse) validateStatusEnum(path, location string, value string) error {
	if err := validate.Enum(path, location, value, createFreeIpaResponseTypeStatusPropEnum); err != nil {
		return err
	}
	return nil
}

func (m *CreateFreeIpaResponse) validateStatus(formats strfmt.Registry) error {

	if swag.IsZero(m.Status) { // not required
		return nil
	}

	// value enum
	if err := m.validateStatusEnum("status", "body", m.Status); err != nil {
		return err
	}

	return nil
}

func (m *CreateFreeIpaResponse) validateTags(formats strfmt.Registry) error {

	if swag.IsZero(m.Tags) { // not required
		return nil
	}

	if m.Tags != nil {
		if err := m.Tags.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("tags")
			}
			return err
		}
	}

	return nil
}

func (m *CreateFreeIpaResponse) validateWorkspace(formats strfmt.Registry) error {

	if swag.IsZero(m.Workspace) { // not required
		return nil
	}

	if m.Workspace != nil {
		if err := m.Workspace.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("workspace")
			}
			return err
		}
	}

	return nil
}

func (m *CreateFreeIpaResponse) validateYarn(formats strfmt.Registry) error {

	if swag.IsZero(m.Yarn) { // not required
		return nil
	}

	if m.Yarn != nil {
		if err := m.Yarn.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("yarn")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (m *CreateFreeIpaResponse) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *CreateFreeIpaResponse) UnmarshalBinary(b []byte) error {
	var res CreateFreeIpaResponse
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
