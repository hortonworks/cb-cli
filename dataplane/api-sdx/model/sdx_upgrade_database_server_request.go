// Code generated by go-swagger; DO NOT EDIT.

package model

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// SdxUpgradeDatabaseServerRequest sdx upgrade database server request
// swagger:model SdxUpgradeDatabaseServerRequest
type SdxUpgradeDatabaseServerRequest struct {

	// The database major version to upgrade to
	// Enum: [VERSION_11]
	TargetMajorVersion string `json:"targetMajorVersion,omitempty"`
}

// Validate validates this sdx upgrade database server request
func (m *SdxUpgradeDatabaseServerRequest) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateTargetMajorVersion(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

var sdxUpgradeDatabaseServerRequestTypeTargetMajorVersionPropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["VERSION_11"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		sdxUpgradeDatabaseServerRequestTypeTargetMajorVersionPropEnum = append(sdxUpgradeDatabaseServerRequestTypeTargetMajorVersionPropEnum, v)
	}
}

const (

	// SdxUpgradeDatabaseServerRequestTargetMajorVersionVERSION11 captures enum value "VERSION_11"
	SdxUpgradeDatabaseServerRequestTargetMajorVersionVERSION11 string = "VERSION_11"
)

// prop value enum
func (m *SdxUpgradeDatabaseServerRequest) validateTargetMajorVersionEnum(path, location string, value string) error {
	if err := validate.Enum(path, location, value, sdxUpgradeDatabaseServerRequestTypeTargetMajorVersionPropEnum); err != nil {
		return err
	}
	return nil
}

func (m *SdxUpgradeDatabaseServerRequest) validateTargetMajorVersion(formats strfmt.Registry) error {

	if swag.IsZero(m.TargetMajorVersion) { // not required
		return nil
	}

	// value enum
	if err := m.validateTargetMajorVersionEnum("targetMajorVersion", "body", m.TargetMajorVersion); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *SdxUpgradeDatabaseServerRequest) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *SdxUpgradeDatabaseServerRequest) UnmarshalBinary(b []byte) error {
	var res SdxUpgradeDatabaseServerRequest
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
