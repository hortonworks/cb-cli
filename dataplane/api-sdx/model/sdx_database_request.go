// Code generated by go-swagger; DO NOT EDIT.

package model

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// SdxDatabaseRequest sdx database request
// swagger:model SdxDatabaseRequest
type SdxDatabaseRequest struct {

	// availability type
	// Enum: [NONE NON_HA HA]
	AvailabilityType string `json:"availabilityType,omitempty"`

	// create
	Create bool `json:"create,omitempty"`
}

// Validate validates this sdx database request
func (m *SdxDatabaseRequest) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateAvailabilityType(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

var sdxDatabaseRequestTypeAvailabilityTypePropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["NONE","NON_HA","HA"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		sdxDatabaseRequestTypeAvailabilityTypePropEnum = append(sdxDatabaseRequestTypeAvailabilityTypePropEnum, v)
	}
}

const (

	// SdxDatabaseRequestAvailabilityTypeNONE captures enum value "NONE"
	SdxDatabaseRequestAvailabilityTypeNONE string = "NONE"

	// SdxDatabaseRequestAvailabilityTypeNONHA captures enum value "NON_HA"
	SdxDatabaseRequestAvailabilityTypeNONHA string = "NON_HA"

	// SdxDatabaseRequestAvailabilityTypeHA captures enum value "HA"
	SdxDatabaseRequestAvailabilityTypeHA string = "HA"
)

// prop value enum
func (m *SdxDatabaseRequest) validateAvailabilityTypeEnum(path, location string, value string) error {
	if err := validate.Enum(path, location, value, sdxDatabaseRequestTypeAvailabilityTypePropEnum); err != nil {
		return err
	}
	return nil
}

func (m *SdxDatabaseRequest) validateAvailabilityType(formats strfmt.Registry) error {

	if swag.IsZero(m.AvailabilityType) { // not required
		return nil
	}

	// value enum
	if err := m.validateAvailabilityTypeEnum("availabilityType", "body", m.AvailabilityType); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *SdxDatabaseRequest) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *SdxDatabaseRequest) UnmarshalBinary(b []byte) error {
	var res SdxDatabaseRequest
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
