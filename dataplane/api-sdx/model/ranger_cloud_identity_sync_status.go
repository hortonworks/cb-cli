// Code generated by go-swagger; DO NOT EDIT.

package model

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// RangerCloudIdentitySyncStatus ranger cloud identity sync status
// swagger:model RangerCloudIdentitySyncStatus
type RangerCloudIdentitySyncStatus struct {

	// Command id.
	CommandID int64 `json:"commandId,omitempty"`

	// Operation status.
	// Required: true
	// Enum: [SUCCESS ACTIVE FAILED NOT_APPLICABLE]
	State *string `json:"state"`

	// Operation status reason.
	StatusReason string `json:"statusReason,omitempty"`
}

// Validate validates this ranger cloud identity sync status
func (m *RangerCloudIdentitySyncStatus) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateState(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

var rangerCloudIdentitySyncStatusTypeStatePropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["SUCCESS","ACTIVE","FAILED","NOT_APPLICABLE"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		rangerCloudIdentitySyncStatusTypeStatePropEnum = append(rangerCloudIdentitySyncStatusTypeStatePropEnum, v)
	}
}

const (

	// RangerCloudIdentitySyncStatusStateSUCCESS captures enum value "SUCCESS"
	RangerCloudIdentitySyncStatusStateSUCCESS string = "SUCCESS"

	// RangerCloudIdentitySyncStatusStateACTIVE captures enum value "ACTIVE"
	RangerCloudIdentitySyncStatusStateACTIVE string = "ACTIVE"

	// RangerCloudIdentitySyncStatusStateFAILED captures enum value "FAILED"
	RangerCloudIdentitySyncStatusStateFAILED string = "FAILED"

	// RangerCloudIdentitySyncStatusStateNOTAPPLICABLE captures enum value "NOT_APPLICABLE"
	RangerCloudIdentitySyncStatusStateNOTAPPLICABLE string = "NOT_APPLICABLE"
)

// prop value enum
func (m *RangerCloudIdentitySyncStatus) validateStateEnum(path, location string, value string) error {
	if err := validate.Enum(path, location, value, rangerCloudIdentitySyncStatusTypeStatePropEnum); err != nil {
		return err
	}
	return nil
}

func (m *RangerCloudIdentitySyncStatus) validateState(formats strfmt.Registry) error {

	if err := validate.Required("state", "body", m.State); err != nil {
		return err
	}

	// value enum
	if err := m.validateStateEnum("state", "body", *m.State); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *RangerCloudIdentitySyncStatus) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *RangerCloudIdentitySyncStatus) UnmarshalBinary(b []byte) error {
	var res RangerCloudIdentitySyncStatus
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
