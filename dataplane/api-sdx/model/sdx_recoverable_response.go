// Code generated by go-swagger; DO NOT EDIT.

package model

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// SdxRecoverableResponse sdx recoverable response
// swagger:model SdxRecoverableResponse
type SdxRecoverableResponse struct {

	// reason
	Reason string `json:"reason,omitempty"`

	// status
	// Enum: [RECOVERABLE NON_RECOVERABLE]
	Status string `json:"status,omitempty"`
}

// Validate validates this sdx recoverable response
func (m *SdxRecoverableResponse) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateStatus(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

var sdxRecoverableResponseTypeStatusPropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["RECOVERABLE","NON_RECOVERABLE"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		sdxRecoverableResponseTypeStatusPropEnum = append(sdxRecoverableResponseTypeStatusPropEnum, v)
	}
}

const (

	// SdxRecoverableResponseStatusRECOVERABLE captures enum value "RECOVERABLE"
	SdxRecoverableResponseStatusRECOVERABLE string = "RECOVERABLE"

	// SdxRecoverableResponseStatusNONRECOVERABLE captures enum value "NON_RECOVERABLE"
	SdxRecoverableResponseStatusNONRECOVERABLE string = "NON_RECOVERABLE"
)

// prop value enum
func (m *SdxRecoverableResponse) validateStatusEnum(path, location string, value string) error {
	if err := validate.Enum(path, location, value, sdxRecoverableResponseTypeStatusPropEnum); err != nil {
		return err
	}
	return nil
}

func (m *SdxRecoverableResponse) validateStatus(formats strfmt.Registry) error {

	if swag.IsZero(m.Status) { // not required
		return nil
	}

	// value enum
	if err := m.validateStatusEnum("status", "body", m.Status); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *SdxRecoverableResponse) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *SdxRecoverableResponse) UnmarshalBinary(b []byte) error {
	var res SdxRecoverableResponse
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
