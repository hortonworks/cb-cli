// Code generated by go-swagger; DO NOT EDIT.

package sdx

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"

	strfmt "github.com/go-openapi/strfmt"
)

// NewGetInstanceGroupNamesBySdxDetailsParams creates a new GetInstanceGroupNamesBySdxDetailsParams object
// with the default values initialized.
func NewGetInstanceGroupNamesBySdxDetailsParams() *GetInstanceGroupNamesBySdxDetailsParams {
	var ()
	return &GetInstanceGroupNamesBySdxDetailsParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewGetInstanceGroupNamesBySdxDetailsParamsWithTimeout creates a new GetInstanceGroupNamesBySdxDetailsParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewGetInstanceGroupNamesBySdxDetailsParamsWithTimeout(timeout time.Duration) *GetInstanceGroupNamesBySdxDetailsParams {
	var ()
	return &GetInstanceGroupNamesBySdxDetailsParams{

		timeout: timeout,
	}
}

// NewGetInstanceGroupNamesBySdxDetailsParamsWithContext creates a new GetInstanceGroupNamesBySdxDetailsParams object
// with the default values initialized, and the ability to set a context for a request
func NewGetInstanceGroupNamesBySdxDetailsParamsWithContext(ctx context.Context) *GetInstanceGroupNamesBySdxDetailsParams {
	var ()
	return &GetInstanceGroupNamesBySdxDetailsParams{

		Context: ctx,
	}
}

// NewGetInstanceGroupNamesBySdxDetailsParamsWithHTTPClient creates a new GetInstanceGroupNamesBySdxDetailsParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewGetInstanceGroupNamesBySdxDetailsParamsWithHTTPClient(client *http.Client) *GetInstanceGroupNamesBySdxDetailsParams {
	var ()
	return &GetInstanceGroupNamesBySdxDetailsParams{
		HTTPClient: client,
	}
}

/*
GetInstanceGroupNamesBySdxDetailsParams contains all the parameters to send to the API endpoint
for the get instance group names by sdx details operation typically these are written to a http.Request
*/
type GetInstanceGroupNamesBySdxDetailsParams struct {

	/*CloudPlatform*/
	CloudPlatform *string
	/*ClusterShape*/
	ClusterShape *string
	/*RuntimeVersion*/
	RuntimeVersion *string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the get instance group names by sdx details params
func (o *GetInstanceGroupNamesBySdxDetailsParams) WithTimeout(timeout time.Duration) *GetInstanceGroupNamesBySdxDetailsParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the get instance group names by sdx details params
func (o *GetInstanceGroupNamesBySdxDetailsParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the get instance group names by sdx details params
func (o *GetInstanceGroupNamesBySdxDetailsParams) WithContext(ctx context.Context) *GetInstanceGroupNamesBySdxDetailsParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the get instance group names by sdx details params
func (o *GetInstanceGroupNamesBySdxDetailsParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the get instance group names by sdx details params
func (o *GetInstanceGroupNamesBySdxDetailsParams) WithHTTPClient(client *http.Client) *GetInstanceGroupNamesBySdxDetailsParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the get instance group names by sdx details params
func (o *GetInstanceGroupNamesBySdxDetailsParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithCloudPlatform adds the cloudPlatform to the get instance group names by sdx details params
func (o *GetInstanceGroupNamesBySdxDetailsParams) WithCloudPlatform(cloudPlatform *string) *GetInstanceGroupNamesBySdxDetailsParams {
	o.SetCloudPlatform(cloudPlatform)
	return o
}

// SetCloudPlatform adds the cloudPlatform to the get instance group names by sdx details params
func (o *GetInstanceGroupNamesBySdxDetailsParams) SetCloudPlatform(cloudPlatform *string) {
	o.CloudPlatform = cloudPlatform
}

// WithClusterShape adds the clusterShape to the get instance group names by sdx details params
func (o *GetInstanceGroupNamesBySdxDetailsParams) WithClusterShape(clusterShape *string) *GetInstanceGroupNamesBySdxDetailsParams {
	o.SetClusterShape(clusterShape)
	return o
}

// SetClusterShape adds the clusterShape to the get instance group names by sdx details params
func (o *GetInstanceGroupNamesBySdxDetailsParams) SetClusterShape(clusterShape *string) {
	o.ClusterShape = clusterShape
}

// WithRuntimeVersion adds the runtimeVersion to the get instance group names by sdx details params
func (o *GetInstanceGroupNamesBySdxDetailsParams) WithRuntimeVersion(runtimeVersion *string) *GetInstanceGroupNamesBySdxDetailsParams {
	o.SetRuntimeVersion(runtimeVersion)
	return o
}

// SetRuntimeVersion adds the runtimeVersion to the get instance group names by sdx details params
func (o *GetInstanceGroupNamesBySdxDetailsParams) SetRuntimeVersion(runtimeVersion *string) {
	o.RuntimeVersion = runtimeVersion
}

// WriteToRequest writes these params to a swagger request
func (o *GetInstanceGroupNamesBySdxDetailsParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.CloudPlatform != nil {

		// query param cloudPlatform
		var qrCloudPlatform string
		if o.CloudPlatform != nil {
			qrCloudPlatform = *o.CloudPlatform
		}
		qCloudPlatform := qrCloudPlatform
		if qCloudPlatform != "" {
			if err := r.SetQueryParam("cloudPlatform", qCloudPlatform); err != nil {
				return err
			}
		}

	}

	if o.ClusterShape != nil {

		// query param clusterShape
		var qrClusterShape string
		if o.ClusterShape != nil {
			qrClusterShape = *o.ClusterShape
		}
		qClusterShape := qrClusterShape
		if qClusterShape != "" {
			if err := r.SetQueryParam("clusterShape", qClusterShape); err != nil {
				return err
			}
		}

	}

	if o.RuntimeVersion != nil {

		// query param runtimeVersion
		var qrRuntimeVersion string
		if o.RuntimeVersion != nil {
			qrRuntimeVersion = *o.RuntimeVersion
		}
		qRuntimeVersion := qrRuntimeVersion
		if qRuntimeVersion != "" {
			if err := r.SetQueryParam("runtimeVersion", qRuntimeVersion); err != nil {
				return err
			}
		}

	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
