// Code generated by go-swagger; DO NOT EDIT.

package sdx

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"

	strfmt "github.com/go-openapi/strfmt"

	model "github.com/hortonworks/cb-cli/dataplane/api-sdx/model"
)

// NewCreateSdxParams creates a new CreateSdxParams object
// with the default values initialized.
func NewCreateSdxParams() *CreateSdxParams {
	var ()
	return &CreateSdxParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewCreateSdxParamsWithTimeout creates a new CreateSdxParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewCreateSdxParamsWithTimeout(timeout time.Duration) *CreateSdxParams {
	var ()
	return &CreateSdxParams{

		timeout: timeout,
	}
}

// NewCreateSdxParamsWithContext creates a new CreateSdxParams object
// with the default values initialized, and the ability to set a context for a request
func NewCreateSdxParamsWithContext(ctx context.Context) *CreateSdxParams {
	var ()
	return &CreateSdxParams{

		Context: ctx,
	}
}

// NewCreateSdxParamsWithHTTPClient creates a new CreateSdxParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewCreateSdxParamsWithHTTPClient(client *http.Client) *CreateSdxParams {
	var ()
	return &CreateSdxParams{
		HTTPClient: client,
	}
}

/*CreateSdxParams contains all the parameters to send to the API endpoint
for the create sdx operation typically these are written to a http.Request
*/
type CreateSdxParams struct {

	/*Body*/
	Body *model.SdxClusterRequest
	/*SdxName*/
	SdxName string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the create sdx params
func (o *CreateSdxParams) WithTimeout(timeout time.Duration) *CreateSdxParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the create sdx params
func (o *CreateSdxParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the create sdx params
func (o *CreateSdxParams) WithContext(ctx context.Context) *CreateSdxParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the create sdx params
func (o *CreateSdxParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the create sdx params
func (o *CreateSdxParams) WithHTTPClient(client *http.Client) *CreateSdxParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the create sdx params
func (o *CreateSdxParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithBody adds the body to the create sdx params
func (o *CreateSdxParams) WithBody(body *model.SdxClusterRequest) *CreateSdxParams {
	o.SetBody(body)
	return o
}

// SetBody adds the body to the create sdx params
func (o *CreateSdxParams) SetBody(body *model.SdxClusterRequest) {
	o.Body = body
}

// WithSdxName adds the sdxName to the create sdx params
func (o *CreateSdxParams) WithSdxName(sdxName string) *CreateSdxParams {
	o.SetSdxName(sdxName)
	return o
}

// SetSdxName adds the sdxName to the create sdx params
func (o *CreateSdxParams) SetSdxName(sdxName string) {
	o.SdxName = sdxName
}

// WriteToRequest writes these params to a swagger request
func (o *CreateSdxParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.Body != nil {
		if err := r.SetBodyParam(o.Body); err != nil {
			return err
		}
	}

	// path param sdxName
	if err := r.SetPathParam("sdxName", o.SdxName); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
