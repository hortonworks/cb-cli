// Code generated by go-swagger; DO NOT EDIT.

package flow

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/swag"

	strfmt "github.com/go-openapi/strfmt"
)

// NewGetFlowChainsStatusesByChainIdsParams creates a new GetFlowChainsStatusesByChainIdsParams object
// with the default values initialized.
func NewGetFlowChainsStatusesByChainIdsParams() *GetFlowChainsStatusesByChainIdsParams {
	var ()
	return &GetFlowChainsStatusesByChainIdsParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewGetFlowChainsStatusesByChainIdsParamsWithTimeout creates a new GetFlowChainsStatusesByChainIdsParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewGetFlowChainsStatusesByChainIdsParamsWithTimeout(timeout time.Duration) *GetFlowChainsStatusesByChainIdsParams {
	var ()
	return &GetFlowChainsStatusesByChainIdsParams{

		timeout: timeout,
	}
}

// NewGetFlowChainsStatusesByChainIdsParamsWithContext creates a new GetFlowChainsStatusesByChainIdsParams object
// with the default values initialized, and the ability to set a context for a request
func NewGetFlowChainsStatusesByChainIdsParamsWithContext(ctx context.Context) *GetFlowChainsStatusesByChainIdsParams {
	var ()
	return &GetFlowChainsStatusesByChainIdsParams{

		Context: ctx,
	}
}

// NewGetFlowChainsStatusesByChainIdsParamsWithHTTPClient creates a new GetFlowChainsStatusesByChainIdsParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewGetFlowChainsStatusesByChainIdsParamsWithHTTPClient(client *http.Client) *GetFlowChainsStatusesByChainIdsParams {
	var ()
	return &GetFlowChainsStatusesByChainIdsParams{
		HTTPClient: client,
	}
}

/*GetFlowChainsStatusesByChainIdsParams contains all the parameters to send to the API endpoint
for the get flow chains statuses by chain ids operation typically these are written to a http.Request
*/
type GetFlowChainsStatusesByChainIdsParams struct {

	/*ChainIds*/
	ChainIds []string
	/*Page*/
	Page *int32
	/*Size*/
	Size *int32

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the get flow chains statuses by chain ids params
func (o *GetFlowChainsStatusesByChainIdsParams) WithTimeout(timeout time.Duration) *GetFlowChainsStatusesByChainIdsParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the get flow chains statuses by chain ids params
func (o *GetFlowChainsStatusesByChainIdsParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the get flow chains statuses by chain ids params
func (o *GetFlowChainsStatusesByChainIdsParams) WithContext(ctx context.Context) *GetFlowChainsStatusesByChainIdsParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the get flow chains statuses by chain ids params
func (o *GetFlowChainsStatusesByChainIdsParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the get flow chains statuses by chain ids params
func (o *GetFlowChainsStatusesByChainIdsParams) WithHTTPClient(client *http.Client) *GetFlowChainsStatusesByChainIdsParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the get flow chains statuses by chain ids params
func (o *GetFlowChainsStatusesByChainIdsParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithChainIds adds the chainIds to the get flow chains statuses by chain ids params
func (o *GetFlowChainsStatusesByChainIdsParams) WithChainIds(chainIds []string) *GetFlowChainsStatusesByChainIdsParams {
	o.SetChainIds(chainIds)
	return o
}

// SetChainIds adds the chainIds to the get flow chains statuses by chain ids params
func (o *GetFlowChainsStatusesByChainIdsParams) SetChainIds(chainIds []string) {
	o.ChainIds = chainIds
}

// WithPage adds the page to the get flow chains statuses by chain ids params
func (o *GetFlowChainsStatusesByChainIdsParams) WithPage(page *int32) *GetFlowChainsStatusesByChainIdsParams {
	o.SetPage(page)
	return o
}

// SetPage adds the page to the get flow chains statuses by chain ids params
func (o *GetFlowChainsStatusesByChainIdsParams) SetPage(page *int32) {
	o.Page = page
}

// WithSize adds the size to the get flow chains statuses by chain ids params
func (o *GetFlowChainsStatusesByChainIdsParams) WithSize(size *int32) *GetFlowChainsStatusesByChainIdsParams {
	o.SetSize(size)
	return o
}

// SetSize adds the size to the get flow chains statuses by chain ids params
func (o *GetFlowChainsStatusesByChainIdsParams) SetSize(size *int32) {
	o.Size = size
}

// WriteToRequest writes these params to a swagger request
func (o *GetFlowChainsStatusesByChainIdsParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	valuesChainIds := o.ChainIds

	joinedChainIds := swag.JoinByFormat(valuesChainIds, "multi")
	// query array param chainIds
	if err := r.SetQueryParam("chainIds", joinedChainIds...); err != nil {
		return err
	}

	if o.Page != nil {

		// query param page
		var qrPage int32
		if o.Page != nil {
			qrPage = *o.Page
		}
		qPage := swag.FormatInt32(qrPage)
		if qPage != "" {
			if err := r.SetQueryParam("page", qPage); err != nil {
				return err
			}
		}

	}

	if o.Size != nil {

		// query param size
		var qrSize int32
		if o.Size != nil {
			qrSize = *o.Size
		}
		qSize := swag.FormatInt32(qrSize)
		if qSize != "" {
			if err := r.SetQueryParam("size", qSize); err != nil {
				return err
			}
		}

	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
