// Code generated by go-swagger; DO NOT EDIT.

package flow_logs

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"
	"time"

	"golang.org/x/net/context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"

	strfmt "github.com/go-openapi/strfmt"
)

// NewGetFlowLogsByResourceNameAndChainIDParams creates a new GetFlowLogsByResourceNameAndChainIDParams object
// with the default values initialized.
func NewGetFlowLogsByResourceNameAndChainIDParams() *GetFlowLogsByResourceNameAndChainIDParams {
	var ()
	return &GetFlowLogsByResourceNameAndChainIDParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewGetFlowLogsByResourceNameAndChainIDParamsWithTimeout creates a new GetFlowLogsByResourceNameAndChainIDParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewGetFlowLogsByResourceNameAndChainIDParamsWithTimeout(timeout time.Duration) *GetFlowLogsByResourceNameAndChainIDParams {
	var ()
	return &GetFlowLogsByResourceNameAndChainIDParams{

		timeout: timeout,
	}
}

// NewGetFlowLogsByResourceNameAndChainIDParamsWithContext creates a new GetFlowLogsByResourceNameAndChainIDParams object
// with the default values initialized, and the ability to set a context for a request
func NewGetFlowLogsByResourceNameAndChainIDParamsWithContext(ctx context.Context) *GetFlowLogsByResourceNameAndChainIDParams {
	var ()
	return &GetFlowLogsByResourceNameAndChainIDParams{

		Context: ctx,
	}
}

// NewGetFlowLogsByResourceNameAndChainIDParamsWithHTTPClient creates a new GetFlowLogsByResourceNameAndChainIDParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewGetFlowLogsByResourceNameAndChainIDParamsWithHTTPClient(client *http.Client) *GetFlowLogsByResourceNameAndChainIDParams {
	var ()
	return &GetFlowLogsByResourceNameAndChainIDParams{
		HTTPClient: client,
	}
}

/*GetFlowLogsByResourceNameAndChainIDParams contains all the parameters to send to the API endpoint
for the get flow logs by resource name and chain Id operation typically these are written to a http.Request
*/
type GetFlowLogsByResourceNameAndChainIDParams struct {

	/*ChainID*/
	ChainID string
	/*ResourceName*/
	ResourceName string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the get flow logs by resource name and chain Id params
func (o *GetFlowLogsByResourceNameAndChainIDParams) WithTimeout(timeout time.Duration) *GetFlowLogsByResourceNameAndChainIDParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the get flow logs by resource name and chain Id params
func (o *GetFlowLogsByResourceNameAndChainIDParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the get flow logs by resource name and chain Id params
func (o *GetFlowLogsByResourceNameAndChainIDParams) WithContext(ctx context.Context) *GetFlowLogsByResourceNameAndChainIDParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the get flow logs by resource name and chain Id params
func (o *GetFlowLogsByResourceNameAndChainIDParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the get flow logs by resource name and chain Id params
func (o *GetFlowLogsByResourceNameAndChainIDParams) WithHTTPClient(client *http.Client) *GetFlowLogsByResourceNameAndChainIDParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the get flow logs by resource name and chain Id params
func (o *GetFlowLogsByResourceNameAndChainIDParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithChainID adds the chainID to the get flow logs by resource name and chain Id params
func (o *GetFlowLogsByResourceNameAndChainIDParams) WithChainID(chainID string) *GetFlowLogsByResourceNameAndChainIDParams {
	o.SetChainID(chainID)
	return o
}

// SetChainID adds the chainId to the get flow logs by resource name and chain Id params
func (o *GetFlowLogsByResourceNameAndChainIDParams) SetChainID(chainID string) {
	o.ChainID = chainID
}

// WithResourceName adds the resourceName to the get flow logs by resource name and chain Id params
func (o *GetFlowLogsByResourceNameAndChainIDParams) WithResourceName(resourceName string) *GetFlowLogsByResourceNameAndChainIDParams {
	o.SetResourceName(resourceName)
	return o
}

// SetResourceName adds the resourceName to the get flow logs by resource name and chain Id params
func (o *GetFlowLogsByResourceNameAndChainIDParams) SetResourceName(resourceName string) {
	o.ResourceName = resourceName
}

// WriteToRequest writes these params to a swagger request
func (o *GetFlowLogsByResourceNameAndChainIDParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// path param chainId
	if err := r.SetPathParam("chainId", o.ChainID); err != nil {
		return err
	}

	// path param resourceName
	if err := r.SetPathParam("resourceName", o.ResourceName); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
