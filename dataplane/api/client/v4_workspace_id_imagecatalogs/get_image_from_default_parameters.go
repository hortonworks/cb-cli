// Code generated by go-swagger; DO NOT EDIT.

package v4_workspace_id_imagecatalogs

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/swag"

	strfmt "github.com/go-openapi/strfmt"
)

// NewGetImageFromDefaultParams creates a new GetImageFromDefaultParams object
// with the default values initialized.
func NewGetImageFromDefaultParams() *GetImageFromDefaultParams {
	var ()
	return &GetImageFromDefaultParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewGetImageFromDefaultParamsWithTimeout creates a new GetImageFromDefaultParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewGetImageFromDefaultParamsWithTimeout(timeout time.Duration) *GetImageFromDefaultParams {
	var ()
	return &GetImageFromDefaultParams{

		timeout: timeout,
	}
}

// NewGetImageFromDefaultParamsWithContext creates a new GetImageFromDefaultParams object
// with the default values initialized, and the ability to set a context for a request
func NewGetImageFromDefaultParamsWithContext(ctx context.Context) *GetImageFromDefaultParams {
	var ()
	return &GetImageFromDefaultParams{

		Context: ctx,
	}
}

// NewGetImageFromDefaultParamsWithHTTPClient creates a new GetImageFromDefaultParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewGetImageFromDefaultParamsWithHTTPClient(client *http.Client) *GetImageFromDefaultParams {
	var ()
	return &GetImageFromDefaultParams{
		HTTPClient: client,
	}
}

/*GetImageFromDefaultParams contains all the parameters to send to the API endpoint
for the get image from default operation typically these are written to a http.Request
*/
type GetImageFromDefaultParams struct {

	/*Body*/
	Body bool
	/*Provider*/
	Provider string
	/*Type*/
	Type string
	/*WorkspaceID*/
	WorkspaceID int64

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the get image from default params
func (o *GetImageFromDefaultParams) WithTimeout(timeout time.Duration) *GetImageFromDefaultParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the get image from default params
func (o *GetImageFromDefaultParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the get image from default params
func (o *GetImageFromDefaultParams) WithContext(ctx context.Context) *GetImageFromDefaultParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the get image from default params
func (o *GetImageFromDefaultParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the get image from default params
func (o *GetImageFromDefaultParams) WithHTTPClient(client *http.Client) *GetImageFromDefaultParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the get image from default params
func (o *GetImageFromDefaultParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithBody adds the body to the get image from default params
func (o *GetImageFromDefaultParams) WithBody(body bool) *GetImageFromDefaultParams {
	o.SetBody(body)
	return o
}

// SetBody adds the body to the get image from default params
func (o *GetImageFromDefaultParams) SetBody(body bool) {
	o.Body = body
}

// WithProvider adds the provider to the get image from default params
func (o *GetImageFromDefaultParams) WithProvider(provider string) *GetImageFromDefaultParams {
	o.SetProvider(provider)
	return o
}

// SetProvider adds the provider to the get image from default params
func (o *GetImageFromDefaultParams) SetProvider(provider string) {
	o.Provider = provider
}

// WithType adds the typeVar to the get image from default params
func (o *GetImageFromDefaultParams) WithType(typeVar string) *GetImageFromDefaultParams {
	o.SetType(typeVar)
	return o
}

// SetType adds the type to the get image from default params
func (o *GetImageFromDefaultParams) SetType(typeVar string) {
	o.Type = typeVar
}

// WithWorkspaceID adds the workspaceID to the get image from default params
func (o *GetImageFromDefaultParams) WithWorkspaceID(workspaceID int64) *GetImageFromDefaultParams {
	o.SetWorkspaceID(workspaceID)
	return o
}

// SetWorkspaceID adds the workspaceId to the get image from default params
func (o *GetImageFromDefaultParams) SetWorkspaceID(workspaceID int64) {
	o.WorkspaceID = workspaceID
}

// WriteToRequest writes these params to a swagger request
func (o *GetImageFromDefaultParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if err := r.SetBodyParam(o.Body); err != nil {
		return err
	}

	// path param provider
	if err := r.SetPathParam("provider", o.Provider); err != nil {
		return err
	}

	// path param type
	if err := r.SetPathParam("type", o.Type); err != nil {
		return err
	}

	// path param workspaceId
	if err := r.SetPathParam("workspaceId", swag.FormatInt64(o.WorkspaceID)); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
