// Code generated by go-swagger; DO NOT EDIT.

package v4customimagecatalogs

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"

	strfmt "github.com/go-openapi/strfmt"

	model "github.com/hortonworks/cb-cli/dataplane/api/model"
)

// NewUpdateCustomImageParams creates a new UpdateCustomImageParams object
// with the default values initialized.
func NewUpdateCustomImageParams() *UpdateCustomImageParams {
	var ()
	return &UpdateCustomImageParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewUpdateCustomImageParamsWithTimeout creates a new UpdateCustomImageParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewUpdateCustomImageParamsWithTimeout(timeout time.Duration) *UpdateCustomImageParams {
	var ()
	return &UpdateCustomImageParams{

		timeout: timeout,
	}
}

// NewUpdateCustomImageParamsWithContext creates a new UpdateCustomImageParams object
// with the default values initialized, and the ability to set a context for a request
func NewUpdateCustomImageParamsWithContext(ctx context.Context) *UpdateCustomImageParams {
	var ()
	return &UpdateCustomImageParams{

		Context: ctx,
	}
}

// NewUpdateCustomImageParamsWithHTTPClient creates a new UpdateCustomImageParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewUpdateCustomImageParamsWithHTTPClient(client *http.Client) *UpdateCustomImageParams {
	var ()
	return &UpdateCustomImageParams{
		HTTPClient: client,
	}
}

/*UpdateCustomImageParams contains all the parameters to send to the API endpoint
for the update custom image operation typically these are written to a http.Request
*/
type UpdateCustomImageParams struct {

	/*AccountID*/
	AccountID *string
	/*Body*/
	Body *model.CustomImageCatalogV4UpdateImageRequest
	/*ImageID*/
	ImageID string
	/*Name*/
	Name string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the update custom image params
func (o *UpdateCustomImageParams) WithTimeout(timeout time.Duration) *UpdateCustomImageParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the update custom image params
func (o *UpdateCustomImageParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the update custom image params
func (o *UpdateCustomImageParams) WithContext(ctx context.Context) *UpdateCustomImageParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the update custom image params
func (o *UpdateCustomImageParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the update custom image params
func (o *UpdateCustomImageParams) WithHTTPClient(client *http.Client) *UpdateCustomImageParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the update custom image params
func (o *UpdateCustomImageParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithAccountID adds the accountID to the update custom image params
func (o *UpdateCustomImageParams) WithAccountID(accountID *string) *UpdateCustomImageParams {
	o.SetAccountID(accountID)
	return o
}

// SetAccountID adds the accountId to the update custom image params
func (o *UpdateCustomImageParams) SetAccountID(accountID *string) {
	o.AccountID = accountID
}

// WithBody adds the body to the update custom image params
func (o *UpdateCustomImageParams) WithBody(body *model.CustomImageCatalogV4UpdateImageRequest) *UpdateCustomImageParams {
	o.SetBody(body)
	return o
}

// SetBody adds the body to the update custom image params
func (o *UpdateCustomImageParams) SetBody(body *model.CustomImageCatalogV4UpdateImageRequest) {
	o.Body = body
}

// WithImageID adds the imageID to the update custom image params
func (o *UpdateCustomImageParams) WithImageID(imageID string) *UpdateCustomImageParams {
	o.SetImageID(imageID)
	return o
}

// SetImageID adds the imageId to the update custom image params
func (o *UpdateCustomImageParams) SetImageID(imageID string) {
	o.ImageID = imageID
}

// WithName adds the name to the update custom image params
func (o *UpdateCustomImageParams) WithName(name string) *UpdateCustomImageParams {
	o.SetName(name)
	return o
}

// SetName adds the name to the update custom image params
func (o *UpdateCustomImageParams) SetName(name string) {
	o.Name = name
}

// WriteToRequest writes these params to a swagger request
func (o *UpdateCustomImageParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.AccountID != nil {

		// query param accountId
		var qrAccountID string
		if o.AccountID != nil {
			qrAccountID = *o.AccountID
		}
		qAccountID := qrAccountID
		if qAccountID != "" {
			if err := r.SetQueryParam("accountId", qAccountID); err != nil {
				return err
			}
		}

	}

	if o.Body != nil {
		if err := r.SetBodyParam(o.Body); err != nil {
			return err
		}
	}

	// path param imageId
	if err := r.SetPathParam("imageId", o.ImageID); err != nil {
		return err
	}

	// path param name
	if err := r.SetPathParam("name", o.Name); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
