// Code generated by go-swagger; DO NOT EDIT.

package v1distrox

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/swag"

	strfmt "github.com/go-openapi/strfmt"
)

// NewStartDistroXV1ByNamesParams creates a new StartDistroXV1ByNamesParams object
// with the default values initialized.
func NewStartDistroXV1ByNamesParams() *StartDistroXV1ByNamesParams {
	var ()
	return &StartDistroXV1ByNamesParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewStartDistroXV1ByNamesParamsWithTimeout creates a new StartDistroXV1ByNamesParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewStartDistroXV1ByNamesParamsWithTimeout(timeout time.Duration) *StartDistroXV1ByNamesParams {
	var ()
	return &StartDistroXV1ByNamesParams{

		timeout: timeout,
	}
}

// NewStartDistroXV1ByNamesParamsWithContext creates a new StartDistroXV1ByNamesParams object
// with the default values initialized, and the ability to set a context for a request
func NewStartDistroXV1ByNamesParamsWithContext(ctx context.Context) *StartDistroXV1ByNamesParams {
	var ()
	return &StartDistroXV1ByNamesParams{

		Context: ctx,
	}
}

// NewStartDistroXV1ByNamesParamsWithHTTPClient creates a new StartDistroXV1ByNamesParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewStartDistroXV1ByNamesParamsWithHTTPClient(client *http.Client) *StartDistroXV1ByNamesParams {
	var ()
	return &StartDistroXV1ByNamesParams{
		HTTPClient: client,
	}
}

/*StartDistroXV1ByNamesParams contains all the parameters to send to the API endpoint
for the start distro x v1 by names operation typically these are written to a http.Request
*/
type StartDistroXV1ByNamesParams struct {

	/*Names*/
	Names []string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the start distro x v1 by names params
func (o *StartDistroXV1ByNamesParams) WithTimeout(timeout time.Duration) *StartDistroXV1ByNamesParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the start distro x v1 by names params
func (o *StartDistroXV1ByNamesParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the start distro x v1 by names params
func (o *StartDistroXV1ByNamesParams) WithContext(ctx context.Context) *StartDistroXV1ByNamesParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the start distro x v1 by names params
func (o *StartDistroXV1ByNamesParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the start distro x v1 by names params
func (o *StartDistroXV1ByNamesParams) WithHTTPClient(client *http.Client) *StartDistroXV1ByNamesParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the start distro x v1 by names params
func (o *StartDistroXV1ByNamesParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithNames adds the names to the start distro x v1 by names params
func (o *StartDistroXV1ByNamesParams) WithNames(names []string) *StartDistroXV1ByNamesParams {
	o.SetNames(names)
	return o
}

// SetNames adds the names to the start distro x v1 by names params
func (o *StartDistroXV1ByNamesParams) SetNames(names []string) {
	o.Names = names
}

// WriteToRequest writes these params to a swagger request
func (o *StartDistroXV1ByNamesParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	valuesNames := o.Names

	joinedNames := swag.JoinByFormat(valuesNames, "multi")
	// query array param names
	if err := r.SetQueryParam("names", joinedNames...); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
