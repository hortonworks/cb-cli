// Code generated by go-swagger; DO NOT EDIT.

package v1distrox

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/swag"

	strfmt "github.com/go-openapi/strfmt"
)

// NewGetDistroXV1Params creates a new GetDistroXV1Params object
// with the default values initialized.
func NewGetDistroXV1Params() *GetDistroXV1Params {
	var ()
	return &GetDistroXV1Params{

		timeout: cr.DefaultTimeout,
	}
}

// NewGetDistroXV1ParamsWithTimeout creates a new GetDistroXV1Params object
// with the default values initialized, and the ability to set a timeout on a request
func NewGetDistroXV1ParamsWithTimeout(timeout time.Duration) *GetDistroXV1Params {
	var ()
	return &GetDistroXV1Params{

		timeout: timeout,
	}
}

// NewGetDistroXV1ParamsWithContext creates a new GetDistroXV1Params object
// with the default values initialized, and the ability to set a context for a request
func NewGetDistroXV1ParamsWithContext(ctx context.Context) *GetDistroXV1Params {
	var ()
	return &GetDistroXV1Params{

		Context: ctx,
	}
}

// NewGetDistroXV1ParamsWithHTTPClient creates a new GetDistroXV1Params object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewGetDistroXV1ParamsWithHTTPClient(client *http.Client) *GetDistroXV1Params {
	var ()
	return &GetDistroXV1Params{
		HTTPClient: client,
	}
}

/*GetDistroXV1Params contains all the parameters to send to the API endpoint
for the get distro x v1 operation typically these are written to a http.Request
*/
type GetDistroXV1Params struct {

	/*Entries*/
	Entries []string
	/*Name*/
	Name string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the get distro x v1 params
func (o *GetDistroXV1Params) WithTimeout(timeout time.Duration) *GetDistroXV1Params {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the get distro x v1 params
func (o *GetDistroXV1Params) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the get distro x v1 params
func (o *GetDistroXV1Params) WithContext(ctx context.Context) *GetDistroXV1Params {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the get distro x v1 params
func (o *GetDistroXV1Params) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the get distro x v1 params
func (o *GetDistroXV1Params) WithHTTPClient(client *http.Client) *GetDistroXV1Params {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the get distro x v1 params
func (o *GetDistroXV1Params) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithEntries adds the entries to the get distro x v1 params
func (o *GetDistroXV1Params) WithEntries(entries []string) *GetDistroXV1Params {
	o.SetEntries(entries)
	return o
}

// SetEntries adds the entries to the get distro x v1 params
func (o *GetDistroXV1Params) SetEntries(entries []string) {
	o.Entries = entries
}

// WithName adds the name to the get distro x v1 params
func (o *GetDistroXV1Params) WithName(name string) *GetDistroXV1Params {
	o.SetName(name)
	return o
}

// SetName adds the name to the get distro x v1 params
func (o *GetDistroXV1Params) SetName(name string) {
	o.Name = name
}

// WriteToRequest writes these params to a swagger request
func (o *GetDistroXV1Params) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	valuesEntries := o.Entries

	joinedEntries := swag.JoinByFormat(valuesEntries, "multi")
	// query array param entries
	if err := r.SetQueryParam("entries", joinedEntries...); err != nil {
		return err
	}

	// path param name
	if err := r.SetPathParam("name", o.Name); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
