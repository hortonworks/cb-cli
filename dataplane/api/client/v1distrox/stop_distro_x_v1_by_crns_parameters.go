// Code generated by go-swagger; DO NOT EDIT.

package v1distrox

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/swag"

	strfmt "github.com/go-openapi/strfmt"
)

// NewStopDistroXV1ByCrnsParams creates a new StopDistroXV1ByCrnsParams object
// with the default values initialized.
func NewStopDistroXV1ByCrnsParams() *StopDistroXV1ByCrnsParams {
	var ()
	return &StopDistroXV1ByCrnsParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewStopDistroXV1ByCrnsParamsWithTimeout creates a new StopDistroXV1ByCrnsParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewStopDistroXV1ByCrnsParamsWithTimeout(timeout time.Duration) *StopDistroXV1ByCrnsParams {
	var ()
	return &StopDistroXV1ByCrnsParams{

		timeout: timeout,
	}
}

// NewStopDistroXV1ByCrnsParamsWithContext creates a new StopDistroXV1ByCrnsParams object
// with the default values initialized, and the ability to set a context for a request
func NewStopDistroXV1ByCrnsParamsWithContext(ctx context.Context) *StopDistroXV1ByCrnsParams {
	var ()
	return &StopDistroXV1ByCrnsParams{

		Context: ctx,
	}
}

// NewStopDistroXV1ByCrnsParamsWithHTTPClient creates a new StopDistroXV1ByCrnsParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewStopDistroXV1ByCrnsParamsWithHTTPClient(client *http.Client) *StopDistroXV1ByCrnsParams {
	var ()
	return &StopDistroXV1ByCrnsParams{
		HTTPClient: client,
	}
}

/*StopDistroXV1ByCrnsParams contains all the parameters to send to the API endpoint
for the stop distro x v1 by crns operation typically these are written to a http.Request
*/
type StopDistroXV1ByCrnsParams struct {

	/*Crns*/
	Crns []string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the stop distro x v1 by crns params
func (o *StopDistroXV1ByCrnsParams) WithTimeout(timeout time.Duration) *StopDistroXV1ByCrnsParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the stop distro x v1 by crns params
func (o *StopDistroXV1ByCrnsParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the stop distro x v1 by crns params
func (o *StopDistroXV1ByCrnsParams) WithContext(ctx context.Context) *StopDistroXV1ByCrnsParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the stop distro x v1 by crns params
func (o *StopDistroXV1ByCrnsParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the stop distro x v1 by crns params
func (o *StopDistroXV1ByCrnsParams) WithHTTPClient(client *http.Client) *StopDistroXV1ByCrnsParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the stop distro x v1 by crns params
func (o *StopDistroXV1ByCrnsParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithCrns adds the crns to the stop distro x v1 by crns params
func (o *StopDistroXV1ByCrnsParams) WithCrns(crns []string) *StopDistroXV1ByCrnsParams {
	o.SetCrns(crns)
	return o
}

// SetCrns adds the crns to the stop distro x v1 by crns params
func (o *StopDistroXV1ByCrnsParams) SetCrns(crns []string) {
	o.Crns = crns
}

// WriteToRequest writes these params to a swagger request
func (o *StopDistroXV1ByCrnsParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	valuesCrns := o.Crns

	joinedCrns := swag.JoinByFormat(valuesCrns, "multi")
	// query array param crns
	if err := r.SetQueryParam("crns", joinedCrns...); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
