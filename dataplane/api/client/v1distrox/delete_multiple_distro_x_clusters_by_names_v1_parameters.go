// Code generated by go-swagger; DO NOT EDIT.

package v1distrox

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/swag"

	strfmt "github.com/go-openapi/strfmt"

	model "github.com/hortonworks/cb-cli/dataplane/api/model"
)

// NewDeleteMultipleDistroXClustersByNamesV1Params creates a new DeleteMultipleDistroXClustersByNamesV1Params object
// with the default values initialized.
func NewDeleteMultipleDistroXClustersByNamesV1Params() *DeleteMultipleDistroXClustersByNamesV1Params {
	var (
		forcedDefault = bool(false)
	)
	return &DeleteMultipleDistroXClustersByNamesV1Params{
		Forced: &forcedDefault,

		timeout: cr.DefaultTimeout,
	}
}

// NewDeleteMultipleDistroXClustersByNamesV1ParamsWithTimeout creates a new DeleteMultipleDistroXClustersByNamesV1Params object
// with the default values initialized, and the ability to set a timeout on a request
func NewDeleteMultipleDistroXClustersByNamesV1ParamsWithTimeout(timeout time.Duration) *DeleteMultipleDistroXClustersByNamesV1Params {
	var (
		forcedDefault = bool(false)
	)
	return &DeleteMultipleDistroXClustersByNamesV1Params{
		Forced: &forcedDefault,

		timeout: timeout,
	}
}

// NewDeleteMultipleDistroXClustersByNamesV1ParamsWithContext creates a new DeleteMultipleDistroXClustersByNamesV1Params object
// with the default values initialized, and the ability to set a context for a request
func NewDeleteMultipleDistroXClustersByNamesV1ParamsWithContext(ctx context.Context) *DeleteMultipleDistroXClustersByNamesV1Params {
	var (
		forcedDefault = bool(false)
	)
	return &DeleteMultipleDistroXClustersByNamesV1Params{
		Forced: &forcedDefault,

		Context: ctx,
	}
}

// NewDeleteMultipleDistroXClustersByNamesV1ParamsWithHTTPClient creates a new DeleteMultipleDistroXClustersByNamesV1Params object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewDeleteMultipleDistroXClustersByNamesV1ParamsWithHTTPClient(client *http.Client) *DeleteMultipleDistroXClustersByNamesV1Params {
	var (
		forcedDefault = bool(false)
	)
	return &DeleteMultipleDistroXClustersByNamesV1Params{
		Forced:     &forcedDefault,
		HTTPClient: client,
	}
}

/*DeleteMultipleDistroXClustersByNamesV1Params contains all the parameters to send to the API endpoint
for the delete multiple distro x clusters by names v1 operation typically these are written to a http.Request
*/
type DeleteMultipleDistroXClustersByNamesV1Params struct {

	/*Body*/
	Body *model.DistroXMultiDeleteV1Request
	/*Forced*/
	Forced *bool

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the delete multiple distro x clusters by names v1 params
func (o *DeleteMultipleDistroXClustersByNamesV1Params) WithTimeout(timeout time.Duration) *DeleteMultipleDistroXClustersByNamesV1Params {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the delete multiple distro x clusters by names v1 params
func (o *DeleteMultipleDistroXClustersByNamesV1Params) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the delete multiple distro x clusters by names v1 params
func (o *DeleteMultipleDistroXClustersByNamesV1Params) WithContext(ctx context.Context) *DeleteMultipleDistroXClustersByNamesV1Params {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the delete multiple distro x clusters by names v1 params
func (o *DeleteMultipleDistroXClustersByNamesV1Params) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the delete multiple distro x clusters by names v1 params
func (o *DeleteMultipleDistroXClustersByNamesV1Params) WithHTTPClient(client *http.Client) *DeleteMultipleDistroXClustersByNamesV1Params {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the delete multiple distro x clusters by names v1 params
func (o *DeleteMultipleDistroXClustersByNamesV1Params) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithBody adds the body to the delete multiple distro x clusters by names v1 params
func (o *DeleteMultipleDistroXClustersByNamesV1Params) WithBody(body *model.DistroXMultiDeleteV1Request) *DeleteMultipleDistroXClustersByNamesV1Params {
	o.SetBody(body)
	return o
}

// SetBody adds the body to the delete multiple distro x clusters by names v1 params
func (o *DeleteMultipleDistroXClustersByNamesV1Params) SetBody(body *model.DistroXMultiDeleteV1Request) {
	o.Body = body
}

// WithForced adds the forced to the delete multiple distro x clusters by names v1 params
func (o *DeleteMultipleDistroXClustersByNamesV1Params) WithForced(forced *bool) *DeleteMultipleDistroXClustersByNamesV1Params {
	o.SetForced(forced)
	return o
}

// SetForced adds the forced to the delete multiple distro x clusters by names v1 params
func (o *DeleteMultipleDistroXClustersByNamesV1Params) SetForced(forced *bool) {
	o.Forced = forced
}

// WriteToRequest writes these params to a swagger request
func (o *DeleteMultipleDistroXClustersByNamesV1Params) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.Body != nil {
		if err := r.SetBodyParam(o.Body); err != nil {
			return err
		}
	}

	if o.Forced != nil {

		// query param forced
		var qrForced bool
		if o.Forced != nil {
			qrForced = *o.Forced
		}
		qForced := swag.FormatBool(qrForced)
		if qForced != "" {
			if err := r.SetQueryParam("forced", qForced); err != nil {
				return err
			}
		}

	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
