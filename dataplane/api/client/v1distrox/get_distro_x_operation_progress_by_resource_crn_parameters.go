// Code generated by go-swagger; DO NOT EDIT.

package v1distrox

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/swag"

	strfmt "github.com/go-openapi/strfmt"
)

// NewGetDistroXOperationProgressByResourceCrnParams creates a new GetDistroXOperationProgressByResourceCrnParams object
// with the default values initialized.
func NewGetDistroXOperationProgressByResourceCrnParams() *GetDistroXOperationProgressByResourceCrnParams {
	var (
		detailedDefault = bool(false)
	)
	return &GetDistroXOperationProgressByResourceCrnParams{
		Detailed: &detailedDefault,

		timeout: cr.DefaultTimeout,
	}
}

// NewGetDistroXOperationProgressByResourceCrnParamsWithTimeout creates a new GetDistroXOperationProgressByResourceCrnParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewGetDistroXOperationProgressByResourceCrnParamsWithTimeout(timeout time.Duration) *GetDistroXOperationProgressByResourceCrnParams {
	var (
		detailedDefault = bool(false)
	)
	return &GetDistroXOperationProgressByResourceCrnParams{
		Detailed: &detailedDefault,

		timeout: timeout,
	}
}

// NewGetDistroXOperationProgressByResourceCrnParamsWithContext creates a new GetDistroXOperationProgressByResourceCrnParams object
// with the default values initialized, and the ability to set a context for a request
func NewGetDistroXOperationProgressByResourceCrnParamsWithContext(ctx context.Context) *GetDistroXOperationProgressByResourceCrnParams {
	var (
		detailedDefault = bool(false)
	)
	return &GetDistroXOperationProgressByResourceCrnParams{
		Detailed: &detailedDefault,

		Context: ctx,
	}
}

// NewGetDistroXOperationProgressByResourceCrnParamsWithHTTPClient creates a new GetDistroXOperationProgressByResourceCrnParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewGetDistroXOperationProgressByResourceCrnParamsWithHTTPClient(client *http.Client) *GetDistroXOperationProgressByResourceCrnParams {
	var (
		detailedDefault = bool(false)
	)
	return &GetDistroXOperationProgressByResourceCrnParams{
		Detailed:   &detailedDefault,
		HTTPClient: client,
	}
}

/*GetDistroXOperationProgressByResourceCrnParams contains all the parameters to send to the API endpoint
for the get distro x operation progress by resource crn operation typically these are written to a http.Request
*/
type GetDistroXOperationProgressByResourceCrnParams struct {

	/*Detailed*/
	Detailed *bool
	/*ResourceCrn*/
	ResourceCrn string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the get distro x operation progress by resource crn params
func (o *GetDistroXOperationProgressByResourceCrnParams) WithTimeout(timeout time.Duration) *GetDistroXOperationProgressByResourceCrnParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the get distro x operation progress by resource crn params
func (o *GetDistroXOperationProgressByResourceCrnParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the get distro x operation progress by resource crn params
func (o *GetDistroXOperationProgressByResourceCrnParams) WithContext(ctx context.Context) *GetDistroXOperationProgressByResourceCrnParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the get distro x operation progress by resource crn params
func (o *GetDistroXOperationProgressByResourceCrnParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the get distro x operation progress by resource crn params
func (o *GetDistroXOperationProgressByResourceCrnParams) WithHTTPClient(client *http.Client) *GetDistroXOperationProgressByResourceCrnParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the get distro x operation progress by resource crn params
func (o *GetDistroXOperationProgressByResourceCrnParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithDetailed adds the detailed to the get distro x operation progress by resource crn params
func (o *GetDistroXOperationProgressByResourceCrnParams) WithDetailed(detailed *bool) *GetDistroXOperationProgressByResourceCrnParams {
	o.SetDetailed(detailed)
	return o
}

// SetDetailed adds the detailed to the get distro x operation progress by resource crn params
func (o *GetDistroXOperationProgressByResourceCrnParams) SetDetailed(detailed *bool) {
	o.Detailed = detailed
}

// WithResourceCrn adds the resourceCrn to the get distro x operation progress by resource crn params
func (o *GetDistroXOperationProgressByResourceCrnParams) WithResourceCrn(resourceCrn string) *GetDistroXOperationProgressByResourceCrnParams {
	o.SetResourceCrn(resourceCrn)
	return o
}

// SetResourceCrn adds the resourceCrn to the get distro x operation progress by resource crn params
func (o *GetDistroXOperationProgressByResourceCrnParams) SetResourceCrn(resourceCrn string) {
	o.ResourceCrn = resourceCrn
}

// WriteToRequest writes these params to a swagger request
func (o *GetDistroXOperationProgressByResourceCrnParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.Detailed != nil {

		// query param detailed
		var qrDetailed bool
		if o.Detailed != nil {
			qrDetailed = *o.Detailed
		}
		qDetailed := swag.FormatBool(qrDetailed)
		if qDetailed != "" {
			if err := r.SetQueryParam("detailed", qDetailed); err != nil {
				return err
			}
		}

	}

	// path param resourceCrn
	if err := r.SetPathParam("resourceCrn", o.ResourceCrn); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
