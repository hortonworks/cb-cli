// Code generated by go-swagger; DO NOT EDIT.

package v3_workspace_id_users

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"
)

// New creates a new v3 workspace id users API client.
func New(transport runtime.ClientTransport, formats strfmt.Registry) *Client {
	return &Client{transport: transport, formats: formats}
}

/*
Client for v3 workspace id users API
*/
type Client struct {
	transport runtime.ClientTransport
	formats   strfmt.Registry
}

/*
GetUserProfileInWorkspace users related profile in workspace

Users can be invited under an account by the administrator, and all resources (e.g. resources, networks, blueprints, credentials, clusters) can be shared across account users
*/
func (a *Client) GetUserProfileInWorkspace(params *GetUserProfileInWorkspaceParams) (*GetUserProfileInWorkspaceOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewGetUserProfileInWorkspaceParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "getUserProfileInWorkspace",
		Method:             "GET",
		PathPattern:        "/v3/{workspaceId}/users/profile",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"http", "https"},
		Params:             params,
		Reader:             &GetUserProfileInWorkspaceReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	return result.(*GetUserProfileInWorkspaceOK), nil

}

/*
ModifyUserProfileInWorkspace modifies user related profile in workspace

Users can be invited under an account by the administrator, and all resources (e.g. resources, networks, blueprints, credentials, clusters) can be shared across account users
*/
func (a *Client) ModifyUserProfileInWorkspace(params *ModifyUserProfileInWorkspaceParams) error {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewModifyUserProfileInWorkspaceParams()
	}

	_, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "modifyUserProfileInWorkspace",
		Method:             "PUT",
		PathPattern:        "/v3/{workspaceId}/users/profile",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"http", "https"},
		Params:             params,
		Reader:             &ModifyUserProfileInWorkspaceReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return err
	}
	return nil

}

// SetTransport changes the transport on the client
func (a *Client) SetTransport(transport runtime.ClientTransport) {
	a.transport = transport
}
