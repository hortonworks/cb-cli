// Code generated by go-swagger; DO NOT EDIT.

package v4_workspace_id_blueprints_util

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"
)

// New creates a new v4 workspace id blueprints util API client.
func New(transport runtime.ClientTransport, formats strfmt.Registry) *Client {
	return &Client{transport: transport, formats: formats}
}

/*
Client for v4 workspace id blueprints util API
*/
type Client struct {
	transport runtime.ClientTransport
	formats   strfmt.Registry
}

/*
CreateRecommendationForWorkspace creates a recommendation that advises cloud resources for the given blueprint

Each cloud provider has it's own specific resources like instance types and disk types. These endpoints are collecting them.
*/
func (a *Client) CreateRecommendationForWorkspace(params *CreateRecommendationForWorkspaceParams) (*CreateRecommendationForWorkspaceOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewCreateRecommendationForWorkspaceParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "createRecommendationForWorkspace",
		Method:             "GET",
		PathPattern:        "/v4/{workspaceId}/blueprints_util/recommendation",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"http", "https"},
		Params:             params,
		Reader:             &CreateRecommendationForWorkspaceReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	return result.(*CreateRecommendationForWorkspaceOK), nil

}

/*
CreateRecommendationForWorkspaceByCredCrn creates a recommendation that advises cloud resources for the given blueprint based on the given credential crn

Each cloud provider has it's own specific resources like instance types and disk types. These endpoints are collecting them.
*/
func (a *Client) CreateRecommendationForWorkspaceByCredCrn(params *CreateRecommendationForWorkspaceByCredCrnParams) (*CreateRecommendationForWorkspaceByCredCrnOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewCreateRecommendationForWorkspaceByCredCrnParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "createRecommendationForWorkspaceByCredCrn",
		Method:             "GET",
		PathPattern:        "/v4/{workspaceId}/blueprints_util/recommendation_by_cred_crn",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"http", "https"},
		Params:             params,
		Reader:             &CreateRecommendationForWorkspaceByCredCrnReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	return result.(*CreateRecommendationForWorkspaceByCredCrnOK), nil

}

/*
CreateScaleRecommendationForWorkspace creates a recommendation that advises cloud resources for the given blueprint

Each cloud provider has it's own specific resources like instance types and disk types. These endpoints are collecting them.
*/
func (a *Client) CreateScaleRecommendationForWorkspace(params *CreateScaleRecommendationForWorkspaceParams) (*CreateScaleRecommendationForWorkspaceOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewCreateScaleRecommendationForWorkspaceParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "createScaleRecommendationForWorkspace",
		Method:             "GET",
		PathPattern:        "/v4/{workspaceId}/blueprints_util/scalerecommendation",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"http", "https"},
		Params:             params,
		Reader:             &CreateScaleRecommendationForWorkspaceReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	return result.(*CreateScaleRecommendationForWorkspaceOK), nil

}

/*
CreateScaleRecommendationForWorkspaceByDatahubCrn creates a recommendation that advises cloud resources for the given blueprint based on the given datahub crn

Each cloud provider has it's own specific resources like instance types and disk types. These endpoints are collecting them.
*/
func (a *Client) CreateScaleRecommendationForWorkspaceByDatahubCrn(params *CreateScaleRecommendationForWorkspaceByDatahubCrnParams) (*CreateScaleRecommendationForWorkspaceByDatahubCrnOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewCreateScaleRecommendationForWorkspaceByDatahubCrnParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "createScaleRecommendationForWorkspaceByDatahubCrn",
		Method:             "GET",
		PathPattern:        "/v4/{workspaceId}/blueprints_util/scalerecommendation_by_datahub_crn",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"http", "https"},
		Params:             params,
		Reader:             &CreateScaleRecommendationForWorkspaceByDatahubCrnReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	return result.(*CreateScaleRecommendationForWorkspaceByDatahubCrnOK), nil

}

/*
GetGeneratedTemplate creates a recommendation that advises cloud resources for the given blueprint

Each cloud provider has it's own specific resources like instance types and disk types. These endpoints are collecting them.
*/
func (a *Client) GetGeneratedTemplate(params *GetGeneratedTemplateParams) (*GetGeneratedTemplateOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewGetGeneratedTemplateParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "getGeneratedTemplate",
		Method:             "GET",
		PathPattern:        "/v4/{workspaceId}/blueprints_util/generate",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"http", "https"},
		Params:             params,
		Reader:             &GetGeneratedTemplateReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	return result.(*GetGeneratedTemplateOK), nil

}

/*
GetServiceAndDependencies creates a recommendation that advises cloud resources for the given blueprint

Each cloud provider has it's own specific resources like instance types and disk types. These endpoints are collecting them.
*/
func (a *Client) GetServiceAndDependencies(params *GetServiceAndDependenciesParams) (*GetServiceAndDependenciesOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewGetServiceAndDependenciesParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "getServiceAndDependencies",
		Method:             "GET",
		PathPattern:        "/v4/{workspaceId}/blueprints_util/service_dependencies",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"http", "https"},
		Params:             params,
		Reader:             &GetServiceAndDependenciesReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	return result.(*GetServiceAndDependenciesOK), nil

}

/*
GetServiceList creates a recommendation that advises cloud resources for the given blueprint

Each cloud provider has it's own specific resources like instance types and disk types. These endpoints are collecting them.
*/
func (a *Client) GetServiceList(params *GetServiceListParams) (*GetServiceListOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewGetServiceListParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "getServiceList",
		Method:             "GET",
		PathPattern:        "/v4/{workspaceId}/blueprints_util/services",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"http", "https"},
		Params:             params,
		Reader:             &GetServiceListReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	return result.(*GetServiceListOK), nil

}

/*
GetServiceVersionsByBlueprintName retrives services and versions

Each cloud provider has it's own specific resources like instance types and disk types. These endpoints are collecting them.
*/
func (a *Client) GetServiceVersionsByBlueprintName(params *GetServiceVersionsByBlueprintNameParams) (*GetServiceVersionsByBlueprintNameOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewGetServiceVersionsByBlueprintNameParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "getServiceVersionsByBlueprintName",
		Method:             "GET",
		PathPattern:        "/v4/{workspaceId}/blueprints_util/service_versions",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"http", "https"},
		Params:             params,
		Reader:             &GetServiceVersionsByBlueprintNameReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	return result.(*GetServiceVersionsByBlueprintNameOK), nil

}

// SetTransport changes the transport on the client
func (a *Client) SetTransport(transport runtime.ClientTransport) {
	a.transport = transport
}
