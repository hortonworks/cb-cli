// Code generated by go-swagger; DO NOT EDIT.

package model

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// CredentialPrerequisites credential prerequisites
// swagger:model CredentialPrerequisites

type CredentialPrerequisites struct {

	// provider specific identifier of the account/subscription/project that is used by Cloudbreak
	// Required: true
	AccountID *string `json:"accountId"`

	// AWS specific credential prerequisites.
	// Required: true
	Aws *AwsCredentialPrerequisites `json:"aws"`

	// type of cloud provider
	// Required: true
	CloudPlatform *string `json:"cloudPlatform"`
}

/* polymorph CredentialPrerequisites accountId false */

/* polymorph CredentialPrerequisites aws false */

/* polymorph CredentialPrerequisites cloudPlatform false */

// Validate validates this credential prerequisites
func (m *CredentialPrerequisites) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateAccountID(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := m.validateAws(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := m.validateCloudPlatform(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *CredentialPrerequisites) validateAccountID(formats strfmt.Registry) error {

	if err := validate.Required("accountId", "body", m.AccountID); err != nil {
		return err
	}

	return nil
}

func (m *CredentialPrerequisites) validateAws(formats strfmt.Registry) error {

	if err := validate.Required("aws", "body", m.Aws); err != nil {
		return err
	}

	if m.Aws != nil {

		if err := m.Aws.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("aws")
			}
			return err
		}
	}

	return nil
}

func (m *CredentialPrerequisites) validateCloudPlatform(formats strfmt.Registry) error {

	if err := validate.Required("cloudPlatform", "body", m.CloudPlatform); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *CredentialPrerequisites) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *CredentialPrerequisites) UnmarshalBinary(b []byte) error {
	var res CredentialPrerequisites
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
