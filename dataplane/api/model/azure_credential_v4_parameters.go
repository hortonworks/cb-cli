// Code generated by go-swagger; DO NOT EDIT.

package model

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// AzureCredentialV4Parameters azure credential v4 parameters
// swagger:model AzureCredentialV4Parameters
type AzureCredentialV4Parameters struct {

	// app based
	AppBased *AppBased `json:"appBased,omitempty"`

	// role based
	RoleBased *RoleBased `json:"roleBased,omitempty"`

	// subscription Id
	// Required: true
	SubscriptionID *string `json:"subscriptionId"`

	// tenant Id
	// Required: true
	TenantID *string `json:"tenantId"`
}

// Validate validates this azure credential v4 parameters
func (m *AzureCredentialV4Parameters) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateAppBased(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateRoleBased(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateSubscriptionID(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateTenantID(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *AzureCredentialV4Parameters) validateAppBased(formats strfmt.Registry) error {

	if swag.IsZero(m.AppBased) { // not required
		return nil
	}

	if m.AppBased != nil {
		if err := m.AppBased.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("appBased")
			}
			return err
		}
	}

	return nil
}

func (m *AzureCredentialV4Parameters) validateRoleBased(formats strfmt.Registry) error {

	if swag.IsZero(m.RoleBased) { // not required
		return nil
	}

	if m.RoleBased != nil {
		if err := m.RoleBased.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("roleBased")
			}
			return err
		}
	}

	return nil
}

func (m *AzureCredentialV4Parameters) validateSubscriptionID(formats strfmt.Registry) error {

	if err := validate.Required("subscriptionId", "body", m.SubscriptionID); err != nil {
		return err
	}

	return nil
}

func (m *AzureCredentialV4Parameters) validateTenantID(formats strfmt.Registry) error {

	if err := validate.Required("tenantId", "body", m.TenantID); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *AzureCredentialV4Parameters) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *AzureCredentialV4Parameters) UnmarshalBinary(b []byte) error {
	var res AzureCredentialV4Parameters
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
