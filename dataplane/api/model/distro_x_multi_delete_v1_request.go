// Code generated by go-swagger; DO NOT EDIT.

package model

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// DistroXMultiDeleteV1Request distro x multi delete v1 request
// swagger:model DistroXMultiDeleteV1Request
type DistroXMultiDeleteV1Request struct {

	// crns
	// Unique: true
	Crns []string `json:"crns"`

	// names
	// Unique: true
	Names []string `json:"names"`
}

// Validate validates this distro x multi delete v1 request
func (m *DistroXMultiDeleteV1Request) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateCrns(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateNames(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *DistroXMultiDeleteV1Request) validateCrns(formats strfmt.Registry) error {

	if swag.IsZero(m.Crns) { // not required
		return nil
	}

	if err := validate.UniqueItems("crns", "body", m.Crns); err != nil {
		return err
	}

	return nil
}

func (m *DistroXMultiDeleteV1Request) validateNames(formats strfmt.Registry) error {

	if swag.IsZero(m.Names) { // not required
		return nil
	}

	if err := validate.UniqueItems("names", "body", m.Names); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *DistroXMultiDeleteV1Request) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *DistroXMultiDeleteV1Request) UnmarshalBinary(b []byte) error {
	var res DistroXMultiDeleteV1Request
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
