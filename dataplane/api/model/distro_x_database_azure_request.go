// Code generated by go-swagger; DO NOT EDIT.

package model

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// DistroXDatabaseAzureRequest distro x database azure request
// swagger:model DistroXDatabaseAzureRequest
type DistroXDatabaseAzureRequest struct {

	// The type of the azure database: single server / flexible server
	// Enum: [SINGLE_SERVER FLEXIBLE_SERVER]
	AzureDatabaseType string `json:"azureDatabaseType,omitempty"`
}

// Validate validates this distro x database azure request
func (m *DistroXDatabaseAzureRequest) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateAzureDatabaseType(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

var distroXDatabaseAzureRequestTypeAzureDatabaseTypePropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["SINGLE_SERVER","FLEXIBLE_SERVER"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		distroXDatabaseAzureRequestTypeAzureDatabaseTypePropEnum = append(distroXDatabaseAzureRequestTypeAzureDatabaseTypePropEnum, v)
	}
}

const (

	// DistroXDatabaseAzureRequestAzureDatabaseTypeSINGLESERVER captures enum value "SINGLE_SERVER"
	DistroXDatabaseAzureRequestAzureDatabaseTypeSINGLESERVER string = "SINGLE_SERVER"

	// DistroXDatabaseAzureRequestAzureDatabaseTypeFLEXIBLESERVER captures enum value "FLEXIBLE_SERVER"
	DistroXDatabaseAzureRequestAzureDatabaseTypeFLEXIBLESERVER string = "FLEXIBLE_SERVER"
)

// prop value enum
func (m *DistroXDatabaseAzureRequest) validateAzureDatabaseTypeEnum(path, location string, value string) error {
	if err := validate.Enum(path, location, value, distroXDatabaseAzureRequestTypeAzureDatabaseTypePropEnum); err != nil {
		return err
	}
	return nil
}

func (m *DistroXDatabaseAzureRequest) validateAzureDatabaseType(formats strfmt.Registry) error {

	if swag.IsZero(m.AzureDatabaseType) { // not required
		return nil
	}

	// value enum
	if err := m.validateAzureDatabaseTypeEnum("azureDatabaseType", "body", m.AzureDatabaseType); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *DistroXDatabaseAzureRequest) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *DistroXDatabaseAzureRequest) UnmarshalBinary(b []byte) error {
	var res DistroXDatabaseAzureRequest
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
