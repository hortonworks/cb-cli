// Code generated by go-swagger; DO NOT EDIT.

package model

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"strconv"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
)

// AmbariStackDetailsResponse ambari stack details response
// swagger:model AmbariStackDetailsResponse
type AmbariStackDetailsResponse struct {

	// enable gpl repo
	EnableGplRepo *bool `json:"enableGplRepo,omitempty"`

	// hdp version
	HdpVersion string `json:"hdpVersion,omitempty"`

	// mpacks
	Mpacks []*ManagementPackDetails `json:"mpacks"`

	// stack
	Stack map[string]string `json:"stack,omitempty"`

	// util
	Util map[string]string `json:"util,omitempty"`

	// verify
	Verify *bool `json:"verify,omitempty"`
}

// Validate validates this ambari stack details response
func (m *AmbariStackDetailsResponse) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateMpacks(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *AmbariStackDetailsResponse) validateMpacks(formats strfmt.Registry) error {

	if swag.IsZero(m.Mpacks) { // not required
		return nil
	}

	for i := 0; i < len(m.Mpacks); i++ {
		if swag.IsZero(m.Mpacks[i]) { // not required
			continue
		}

		if m.Mpacks[i] != nil {
			if err := m.Mpacks[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("mpacks" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// MarshalBinary interface implementation
func (m *AmbariStackDetailsResponse) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *AmbariStackDetailsResponse) UnmarshalBinary(b []byte) error {
	var res AmbariStackDetailsResponse
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
