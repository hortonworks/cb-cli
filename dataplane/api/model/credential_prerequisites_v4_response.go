// Code generated by go-swagger; DO NOT EDIT.

package model

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// CredentialPrerequisitesV4Response credential prerequisites v4 response
// swagger:model CredentialPrerequisitesV4Response
type CredentialPrerequisitesV4Response struct {

	// provider specific identifier of the account/subscription/project that is used by Cloudbreak
	AccountID string `json:"accountId,omitempty"`

	// AWS specific credential prerequisites.
	Aws *AwsCredentialPrerequisites `json:"aws,omitempty"`

	// Azure specific credential prerequisites.
	Azure *AzureCredentialPrerequisites `json:"azure,omitempty"`

	// type of cloud provider
	// Required: true
	CloudPlatform *string `json:"cloudPlatform"`

	// GCP specific credential prerequisites.
	Gcp *GcpCredentialPrerequisites `json:"gcp,omitempty"`
}

// Validate validates this credential prerequisites v4 response
func (m *CredentialPrerequisitesV4Response) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateAws(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateAzure(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateCloudPlatform(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateGcp(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *CredentialPrerequisitesV4Response) validateAws(formats strfmt.Registry) error {

	if swag.IsZero(m.Aws) { // not required
		return nil
	}

	if m.Aws != nil {
		if err := m.Aws.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("aws")
			}
			return err
		}
	}

	return nil
}

func (m *CredentialPrerequisitesV4Response) validateAzure(formats strfmt.Registry) error {

	if swag.IsZero(m.Azure) { // not required
		return nil
	}

	if m.Azure != nil {
		if err := m.Azure.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("azure")
			}
			return err
		}
	}

	return nil
}

func (m *CredentialPrerequisitesV4Response) validateCloudPlatform(formats strfmt.Registry) error {

	if err := validate.Required("cloudPlatform", "body", m.CloudPlatform); err != nil {
		return err
	}

	return nil
}

func (m *CredentialPrerequisitesV4Response) validateGcp(formats strfmt.Registry) error {

	if swag.IsZero(m.Gcp) { // not required
		return nil
	}

	if m.Gcp != nil {
		if err := m.Gcp.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("gcp")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (m *CredentialPrerequisitesV4Response) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *CredentialPrerequisitesV4Response) UnmarshalBinary(b []byte) error {
	var res CredentialPrerequisitesV4Response
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
