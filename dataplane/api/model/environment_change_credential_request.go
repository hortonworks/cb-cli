// Code generated by go-swagger; DO NOT EDIT.

package model

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
)

// EnvironmentChangeCredentialRequest environment change credential request
// swagger:model EnvironmentChangeCredentialRequest

type EnvironmentChangeCredentialRequest struct {

	// If credentialName is not specified, the credential is used to create the new credential for the environment.
	Credential *CredentialRequest `json:"credential,omitempty"`

	// Name of the credential of the environment. If the name is given, the detailed credential is ignored in the request.
	CredentialName string `json:"credentialName,omitempty"`
}

/* polymorph EnvironmentChangeCredentialRequest credential false */

/* polymorph EnvironmentChangeCredentialRequest credentialName false */

// Validate validates this environment change credential request
func (m *EnvironmentChangeCredentialRequest) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateCredential(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *EnvironmentChangeCredentialRequest) validateCredential(formats strfmt.Registry) error {

	if swag.IsZero(m.Credential) { // not required
		return nil
	}

	if m.Credential != nil {

		if err := m.Credential.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("credential")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (m *EnvironmentChangeCredentialRequest) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *EnvironmentChangeCredentialRequest) UnmarshalBinary(b []byte) error {
	var res EnvironmentChangeCredentialRequest
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
