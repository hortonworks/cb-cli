// Code generated by go-swagger; DO NOT EDIT.

package model

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"strconv"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// ChangeWorkspaceUsersV4Request change workspace users v4 request
// swagger:model ChangeWorkspaceUsersV4Request
type ChangeWorkspaceUsersV4Request struct {

	// roles
	// Unique: true
	Roles []string `json:"roles"`

	// user Id
	// Required: true
	UserID *string `json:"userId"`
}

// Validate validates this change workspace users v4 request
func (m *ChangeWorkspaceUsersV4Request) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateRoles(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateUserID(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

var changeWorkspaceUsersV4RequestRolesItemsEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["WORKSPACEREADER","WORKSPACEWRITER","WORKSPACEMANAGER"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		changeWorkspaceUsersV4RequestRolesItemsEnum = append(changeWorkspaceUsersV4RequestRolesItemsEnum, v)
	}
}

func (m *ChangeWorkspaceUsersV4Request) validateRolesItemsEnum(path, location string, value string) error {
	if err := validate.Enum(path, location, value, changeWorkspaceUsersV4RequestRolesItemsEnum); err != nil {
		return err
	}
	return nil
}

func (m *ChangeWorkspaceUsersV4Request) validateRoles(formats strfmt.Registry) error {

	if swag.IsZero(m.Roles) { // not required
		return nil
	}

	if err := validate.UniqueItems("roles", "body", m.Roles); err != nil {
		return err
	}

	for i := 0; i < len(m.Roles); i++ {

		// value enum
		if err := m.validateRolesItemsEnum("roles"+"."+strconv.Itoa(i), "body", m.Roles[i]); err != nil {
			return err
		}

	}

	return nil
}

func (m *ChangeWorkspaceUsersV4Request) validateUserID(formats strfmt.Registry) error {

	if err := validate.Required("userId", "body", m.UserID); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *ChangeWorkspaceUsersV4Request) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *ChangeWorkspaceUsersV4Request) UnmarshalBinary(b []byte) error {
	var res ChangeWorkspaceUsersV4Request
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
