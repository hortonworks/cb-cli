// Code generated by go-swagger; DO NOT EDIT.

package model

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// ChangeWorkspaceUsersV4Request change workspace users v4 request
// swagger:model ChangeWorkspaceUsersV4Request
type ChangeWorkspaceUsersV4Request struct {

	// permissions
	// Unique: true
	Permissions []string `json:"permissions"`

	// user Id
	UserID string `json:"userId,omitempty"`
}

// Validate validates this change workspace users v4 request
func (m *ChangeWorkspaceUsersV4Request) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validatePermissions(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *ChangeWorkspaceUsersV4Request) validatePermissions(formats strfmt.Registry) error {

	if swag.IsZero(m.Permissions) { // not required
		return nil
	}

	if err := validate.UniqueItems("permissions", "body", m.Permissions); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *ChangeWorkspaceUsersV4Request) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *ChangeWorkspaceUsersV4Request) UnmarshalBinary(b []byte) error {
	var res ChangeWorkspaceUsersV4Request
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
