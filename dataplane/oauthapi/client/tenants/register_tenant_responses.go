// Code generated by go-swagger; DO NOT EDIT.

package tenants

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/hortonworks/cb-cli/dataplane/oauthapi/model"
)

// RegisterTenantReader is a Reader for the RegisterTenant structure.
type RegisterTenantReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *RegisterTenantReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewRegisterTenantOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewRegisterTenantBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 401:
		result := NewRegisterTenantUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 403:
		result := NewRegisterTenantForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 500:
		result := NewRegisterTenantInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewRegisterTenantOK creates a RegisterTenantOK with default headers values
func NewRegisterTenantOK() *RegisterTenantOK {
	return &RegisterTenantOK{}
}

/*RegisterTenantOK handles this case with default header values.

successful operation
*/
type RegisterTenantOK struct {
	Payload *model.Tenant
}

func (o *RegisterTenantOK) Error() string {
	return fmt.Sprintf("[POST /caas/api/tenants][%d] registerTenantOK  %+v", 200, o.Payload)
}

func (o *RegisterTenantOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(model.Tenant)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewRegisterTenantBadRequest creates a RegisterTenantBadRequest with default headers values
func NewRegisterTenantBadRequest() *RegisterTenantBadRequest {
	return &RegisterTenantBadRequest{}
}

/*RegisterTenantBadRequest handles this case with default header values.

Bad Request
*/
type RegisterTenantBadRequest struct {
}

func (o *RegisterTenantBadRequest) Error() string {
	return fmt.Sprintf("[POST /caas/api/tenants][%d] registerTenantBadRequest ", 400)
}

func (o *RegisterTenantBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewRegisterTenantUnauthorized creates a RegisterTenantUnauthorized with default headers values
func NewRegisterTenantUnauthorized() *RegisterTenantUnauthorized {
	return &RegisterTenantUnauthorized{}
}

/*RegisterTenantUnauthorized handles this case with default header values.

Unauthorized
*/
type RegisterTenantUnauthorized struct {
}

func (o *RegisterTenantUnauthorized) Error() string {
	return fmt.Sprintf("[POST /caas/api/tenants][%d] registerTenantUnauthorized ", 401)
}

func (o *RegisterTenantUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewRegisterTenantForbidden creates a RegisterTenantForbidden with default headers values
func NewRegisterTenantForbidden() *RegisterTenantForbidden {
	return &RegisterTenantForbidden{}
}

/*RegisterTenantForbidden handles this case with default header values.

Forbidden
*/
type RegisterTenantForbidden struct {
}

func (o *RegisterTenantForbidden) Error() string {
	return fmt.Sprintf("[POST /caas/api/tenants][%d] registerTenantForbidden ", 403)
}

func (o *RegisterTenantForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewRegisterTenantInternalServerError creates a RegisterTenantInternalServerError with default headers values
func NewRegisterTenantInternalServerError() *RegisterTenantInternalServerError {
	return &RegisterTenantInternalServerError{}
}

/*RegisterTenantInternalServerError handles this case with default header values.

Internal server error
*/
type RegisterTenantInternalServerError struct {
}

func (o *RegisterTenantInternalServerError) Error() string {
	return fmt.Sprintf("[POST /caas/api/tenants][%d] registerTenantInternalServerError ", 500)
}

func (o *RegisterTenantInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
