// Code generated by go-swagger; DO NOT EDIT.

package strategies

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"
)

// UpdateStrategyReader is a Reader for the UpdateStrategy structure.
type UpdateStrategyReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *UpdateStrategyReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewUpdateStrategyOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewUpdateStrategyBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 401:
		result := NewUpdateStrategyUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 403:
		result := NewUpdateStrategyForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 500:
		result := NewUpdateStrategyInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewUpdateStrategyOK creates a UpdateStrategyOK with default headers values
func NewUpdateStrategyOK() *UpdateStrategyOK {
	return &UpdateStrategyOK{}
}

/*UpdateStrategyOK handles this case with default header values.

successful operation
*/
type UpdateStrategyOK struct {
	Payload int32
}

func (o *UpdateStrategyOK) Error() string {
	return fmt.Sprintf("[PUT /caas/api/strategies][%d] updateStrategyOK  %+v", 200, o.Payload)
}

func (o *UpdateStrategyOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateStrategyBadRequest creates a UpdateStrategyBadRequest with default headers values
func NewUpdateStrategyBadRequest() *UpdateStrategyBadRequest {
	return &UpdateStrategyBadRequest{}
}

/*UpdateStrategyBadRequest handles this case with default header values.

Bad Request
*/
type UpdateStrategyBadRequest struct {
}

func (o *UpdateStrategyBadRequest) Error() string {
	return fmt.Sprintf("[PUT /caas/api/strategies][%d] updateStrategyBadRequest ", 400)
}

func (o *UpdateStrategyBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateStrategyUnauthorized creates a UpdateStrategyUnauthorized with default headers values
func NewUpdateStrategyUnauthorized() *UpdateStrategyUnauthorized {
	return &UpdateStrategyUnauthorized{}
}

/*UpdateStrategyUnauthorized handles this case with default header values.

Unauthorized
*/
type UpdateStrategyUnauthorized struct {
}

func (o *UpdateStrategyUnauthorized) Error() string {
	return fmt.Sprintf("[PUT /caas/api/strategies][%d] updateStrategyUnauthorized ", 401)
}

func (o *UpdateStrategyUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateStrategyForbidden creates a UpdateStrategyForbidden with default headers values
func NewUpdateStrategyForbidden() *UpdateStrategyForbidden {
	return &UpdateStrategyForbidden{}
}

/*UpdateStrategyForbidden handles this case with default header values.

Forbidden
*/
type UpdateStrategyForbidden struct {
}

func (o *UpdateStrategyForbidden) Error() string {
	return fmt.Sprintf("[PUT /caas/api/strategies][%d] updateStrategyForbidden ", 403)
}

func (o *UpdateStrategyForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateStrategyInternalServerError creates a UpdateStrategyInternalServerError with default headers values
func NewUpdateStrategyInternalServerError() *UpdateStrategyInternalServerError {
	return &UpdateStrategyInternalServerError{}
}

/*UpdateStrategyInternalServerError handles this case with default header values.

Internal server error
*/
type UpdateStrategyInternalServerError struct {
}

func (o *UpdateStrategyInternalServerError) Error() string {
	return fmt.Sprintf("[PUT /caas/api/strategies][%d] updateStrategyInternalServerError ", 500)
}

func (o *UpdateStrategyInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
