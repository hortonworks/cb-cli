// Code generated by go-swagger; DO NOT EDIT.

package users

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/hortonworks/cb-cli/dataplane/oauthapi/model"
)

// AssignUsersToRoleReader is a Reader for the AssignUsersToRole structure.
type AssignUsersToRoleReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *AssignUsersToRoleReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewAssignUsersToRoleOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewAssignUsersToRoleBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 401:
		result := NewAssignUsersToRoleUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 403:
		result := NewAssignUsersToRoleForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 500:
		result := NewAssignUsersToRoleInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewAssignUsersToRoleOK creates a AssignUsersToRoleOK with default headers values
func NewAssignUsersToRoleOK() *AssignUsersToRoleOK {
	return &AssignUsersToRoleOK{}
}

/*AssignUsersToRoleOK handles this case with default header values.

successful operation
*/
type AssignUsersToRoleOK struct {
	Payload []*model.UserRole
}

func (o *AssignUsersToRoleOK) Error() string {
	return fmt.Sprintf("[POST /caas/api/users/{roleId}/role][%d] assignUsersToRoleOK  %+v", 200, o.Payload)
}

func (o *AssignUsersToRoleOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAssignUsersToRoleBadRequest creates a AssignUsersToRoleBadRequest with default headers values
func NewAssignUsersToRoleBadRequest() *AssignUsersToRoleBadRequest {
	return &AssignUsersToRoleBadRequest{}
}

/*AssignUsersToRoleBadRequest handles this case with default header values.

Bad Request
*/
type AssignUsersToRoleBadRequest struct {
}

func (o *AssignUsersToRoleBadRequest) Error() string {
	return fmt.Sprintf("[POST /caas/api/users/{roleId}/role][%d] assignUsersToRoleBadRequest ", 400)
}

func (o *AssignUsersToRoleBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewAssignUsersToRoleUnauthorized creates a AssignUsersToRoleUnauthorized with default headers values
func NewAssignUsersToRoleUnauthorized() *AssignUsersToRoleUnauthorized {
	return &AssignUsersToRoleUnauthorized{}
}

/*AssignUsersToRoleUnauthorized handles this case with default header values.

Unauthorized
*/
type AssignUsersToRoleUnauthorized struct {
}

func (o *AssignUsersToRoleUnauthorized) Error() string {
	return fmt.Sprintf("[POST /caas/api/users/{roleId}/role][%d] assignUsersToRoleUnauthorized ", 401)
}

func (o *AssignUsersToRoleUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewAssignUsersToRoleForbidden creates a AssignUsersToRoleForbidden with default headers values
func NewAssignUsersToRoleForbidden() *AssignUsersToRoleForbidden {
	return &AssignUsersToRoleForbidden{}
}

/*AssignUsersToRoleForbidden handles this case with default header values.

Forbidden
*/
type AssignUsersToRoleForbidden struct {
}

func (o *AssignUsersToRoleForbidden) Error() string {
	return fmt.Sprintf("[POST /caas/api/users/{roleId}/role][%d] assignUsersToRoleForbidden ", 403)
}

func (o *AssignUsersToRoleForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewAssignUsersToRoleInternalServerError creates a AssignUsersToRoleInternalServerError with default headers values
func NewAssignUsersToRoleInternalServerError() *AssignUsersToRoleInternalServerError {
	return &AssignUsersToRoleInternalServerError{}
}

/*AssignUsersToRoleInternalServerError handles this case with default header values.

Internal server error
*/
type AssignUsersToRoleInternalServerError struct {
}

func (o *AssignUsersToRoleInternalServerError) Error() string {
	return fmt.Sprintf("[POST /caas/api/users/{roleId}/role][%d] assignUsersToRoleInternalServerError ", 500)
}

func (o *AssignUsersToRoleInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
