// Code generated by go-swagger; DO NOT EDIT.

package v1env

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"
	"time"

	"golang.org/x/net/context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"

	strfmt "github.com/go-openapi/strfmt"
)

// NewDeleteEnvironmentsParams creates a new DeleteEnvironmentsParams object
// with the default values initialized.
func NewDeleteEnvironmentsParams() *DeleteEnvironmentsParams {
	var ()
	return &DeleteEnvironmentsParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewDeleteEnvironmentsParamsWithTimeout creates a new DeleteEnvironmentsParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewDeleteEnvironmentsParamsWithTimeout(timeout time.Duration) *DeleteEnvironmentsParams {
	var ()
	return &DeleteEnvironmentsParams{

		timeout: timeout,
	}
}

// NewDeleteEnvironmentsParamsWithContext creates a new DeleteEnvironmentsParams object
// with the default values initialized, and the ability to set a context for a request
func NewDeleteEnvironmentsParamsWithContext(ctx context.Context) *DeleteEnvironmentsParams {
	var ()
	return &DeleteEnvironmentsParams{

		Context: ctx,
	}
}

// NewDeleteEnvironmentsParamsWithHTTPClient creates a new DeleteEnvironmentsParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewDeleteEnvironmentsParamsWithHTTPClient(client *http.Client) *DeleteEnvironmentsParams {
	var ()
	return &DeleteEnvironmentsParams{
		HTTPClient: client,
	}
}

/*DeleteEnvironmentsParams contains all the parameters to send to the API endpoint
for the delete environments operation typically these are written to a http.Request
*/
type DeleteEnvironmentsParams struct {

	/*Body*/
	Body []string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the delete environments params
func (o *DeleteEnvironmentsParams) WithTimeout(timeout time.Duration) *DeleteEnvironmentsParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the delete environments params
func (o *DeleteEnvironmentsParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the delete environments params
func (o *DeleteEnvironmentsParams) WithContext(ctx context.Context) *DeleteEnvironmentsParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the delete environments params
func (o *DeleteEnvironmentsParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the delete environments params
func (o *DeleteEnvironmentsParams) WithHTTPClient(client *http.Client) *DeleteEnvironmentsParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the delete environments params
func (o *DeleteEnvironmentsParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithBody adds the body to the delete environments params
func (o *DeleteEnvironmentsParams) WithBody(body []string) *DeleteEnvironmentsParams {
	o.SetBody(body)
	return o
}

// SetBody adds the body to the delete environments params
func (o *DeleteEnvironmentsParams) SetBody(body []string) {
	o.Body = body
}

// WriteToRequest writes these params to a swagger request
func (o *DeleteEnvironmentsParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.Body != nil {
		if err := r.SetBodyParam(o.Body); err != nil {
			return err
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
