// Code generated by go-swagger; DO NOT EDIT.

package v1tags

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"
)

// New creates a new v1tags API client.
func New(transport runtime.ClientTransport, formats strfmt.Registry) *Client {
	return &Client{transport: transport, formats: formats}
}

/*
Client for v1tags API
*/
type Client struct {
	transport runtime.ClientTransport
	formats   strfmt.Registry
}

/*
GetGeneratedTagsV1 gets generated tag configurations

CDP allows you to define your tag configuration information as a shared resource so that you can provide the tag information to multiple resource that you create with CDP. This endpoint generate accountTags.
*/
func (a *Client) GetGeneratedTagsV1(params *GetGeneratedTagsV1Params) (*GetGeneratedTagsV1OK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewGetGeneratedTagsV1Params()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "getGeneratedTagsV1",
		Method:             "GET",
		PathPattern:        "/v1/tags/generate",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"http", "https"},
		Params:             params,
		Reader:             &GetGeneratedTagsV1Reader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	return result.(*GetGeneratedTagsV1OK), nil

}

/*
ListTagsV1 lists tag configurations

CDP allows you to save your tag configuration information as a shared resource so that you can provide the tag information to multiple resource that you create with CDP
*/
func (a *Client) ListTagsV1(params *ListTagsV1Params) (*ListTagsV1OK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewListTagsV1Params()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "listTagsV1",
		Method:             "GET",
		PathPattern:        "/v1/tags",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"http", "https"},
		Params:             params,
		Reader:             &ListTagsV1Reader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	return result.(*ListTagsV1OK), nil

}

/*
PutTagsV1 puts tag configurations

CDP allows you to save your tag configuration information as a shared resource so that you can provide the tag information to multiple resource that you create with CDP
*/
func (a *Client) PutTagsV1(params *PutTagsV1Params) (*PutTagsV1OK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewPutTagsV1Params()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "putTagsV1",
		Method:             "PUT",
		PathPattern:        "/v1/tags",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"http", "https"},
		Params:             params,
		Reader:             &PutTagsV1Reader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	return result.(*PutTagsV1OK), nil

}

// SetTransport changes the transport on the client
func (a *Client) SetTransport(transport runtime.ClientTransport) {
	a.transport = transport
}
