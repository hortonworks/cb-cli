// Code generated by go-swagger; DO NOT EDIT.

package v1platform_resources

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"
	"time"

	"golang.org/x/net/context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"

	strfmt "github.com/go-openapi/strfmt"
)

// NewGetPlatformNetworksParams creates a new GetPlatformNetworksParams object
// with the default values initialized.
func NewGetPlatformNetworksParams() *GetPlatformNetworksParams {
	var ()
	return &GetPlatformNetworksParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewGetPlatformNetworksParamsWithTimeout creates a new GetPlatformNetworksParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewGetPlatformNetworksParamsWithTimeout(timeout time.Duration) *GetPlatformNetworksParams {
	var ()
	return &GetPlatformNetworksParams{

		timeout: timeout,
	}
}

// NewGetPlatformNetworksParamsWithContext creates a new GetPlatformNetworksParams object
// with the default values initialized, and the ability to set a context for a request
func NewGetPlatformNetworksParamsWithContext(ctx context.Context) *GetPlatformNetworksParams {
	var ()
	return &GetPlatformNetworksParams{

		Context: ctx,
	}
}

// NewGetPlatformNetworksParamsWithHTTPClient creates a new GetPlatformNetworksParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewGetPlatformNetworksParamsWithHTTPClient(client *http.Client) *GetPlatformNetworksParams {
	var ()
	return &GetPlatformNetworksParams{
		HTTPClient: client,
	}
}

/*GetPlatformNetworksParams contains all the parameters to send to the API endpoint
for the get platform networks operation typically these are written to a http.Request
*/
type GetPlatformNetworksParams struct {

	/*AvailabilityZone*/
	AvailabilityZone *string
	/*CredentialCrn*/
	CredentialCrn *string
	/*CredentialName*/
	CredentialName *string
	/*PlatformVariant*/
	PlatformVariant *string
	/*Region*/
	Region *string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the get platform networks params
func (o *GetPlatformNetworksParams) WithTimeout(timeout time.Duration) *GetPlatformNetworksParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the get platform networks params
func (o *GetPlatformNetworksParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the get platform networks params
func (o *GetPlatformNetworksParams) WithContext(ctx context.Context) *GetPlatformNetworksParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the get platform networks params
func (o *GetPlatformNetworksParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the get platform networks params
func (o *GetPlatformNetworksParams) WithHTTPClient(client *http.Client) *GetPlatformNetworksParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the get platform networks params
func (o *GetPlatformNetworksParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithAvailabilityZone adds the availabilityZone to the get platform networks params
func (o *GetPlatformNetworksParams) WithAvailabilityZone(availabilityZone *string) *GetPlatformNetworksParams {
	o.SetAvailabilityZone(availabilityZone)
	return o
}

// SetAvailabilityZone adds the availabilityZone to the get platform networks params
func (o *GetPlatformNetworksParams) SetAvailabilityZone(availabilityZone *string) {
	o.AvailabilityZone = availabilityZone
}

// WithCredentialCrn adds the credentialCrn to the get platform networks params
func (o *GetPlatformNetworksParams) WithCredentialCrn(credentialCrn *string) *GetPlatformNetworksParams {
	o.SetCredentialCrn(credentialCrn)
	return o
}

// SetCredentialCrn adds the credentialCrn to the get platform networks params
func (o *GetPlatformNetworksParams) SetCredentialCrn(credentialCrn *string) {
	o.CredentialCrn = credentialCrn
}

// WithCredentialName adds the credentialName to the get platform networks params
func (o *GetPlatformNetworksParams) WithCredentialName(credentialName *string) *GetPlatformNetworksParams {
	o.SetCredentialName(credentialName)
	return o
}

// SetCredentialName adds the credentialName to the get platform networks params
func (o *GetPlatformNetworksParams) SetCredentialName(credentialName *string) {
	o.CredentialName = credentialName
}

// WithPlatformVariant adds the platformVariant to the get platform networks params
func (o *GetPlatformNetworksParams) WithPlatformVariant(platformVariant *string) *GetPlatformNetworksParams {
	o.SetPlatformVariant(platformVariant)
	return o
}

// SetPlatformVariant adds the platformVariant to the get platform networks params
func (o *GetPlatformNetworksParams) SetPlatformVariant(platformVariant *string) {
	o.PlatformVariant = platformVariant
}

// WithRegion adds the region to the get platform networks params
func (o *GetPlatformNetworksParams) WithRegion(region *string) *GetPlatformNetworksParams {
	o.SetRegion(region)
	return o
}

// SetRegion adds the region to the get platform networks params
func (o *GetPlatformNetworksParams) SetRegion(region *string) {
	o.Region = region
}

// WriteToRequest writes these params to a swagger request
func (o *GetPlatformNetworksParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.AvailabilityZone != nil {

		// query param availabilityZone
		var qrAvailabilityZone string
		if o.AvailabilityZone != nil {
			qrAvailabilityZone = *o.AvailabilityZone
		}
		qAvailabilityZone := qrAvailabilityZone
		if qAvailabilityZone != "" {
			if err := r.SetQueryParam("availabilityZone", qAvailabilityZone); err != nil {
				return err
			}
		}

	}

	if o.CredentialCrn != nil {

		// query param credentialCrn
		var qrCredentialCrn string
		if o.CredentialCrn != nil {
			qrCredentialCrn = *o.CredentialCrn
		}
		qCredentialCrn := qrCredentialCrn
		if qCredentialCrn != "" {
			if err := r.SetQueryParam("credentialCrn", qCredentialCrn); err != nil {
				return err
			}
		}

	}

	if o.CredentialName != nil {

		// query param credentialName
		var qrCredentialName string
		if o.CredentialName != nil {
			qrCredentialName = *o.CredentialName
		}
		qCredentialName := qrCredentialName
		if qCredentialName != "" {
			if err := r.SetQueryParam("credentialName", qCredentialName); err != nil {
				return err
			}
		}

	}

	if o.PlatformVariant != nil {

		// query param platformVariant
		var qrPlatformVariant string
		if o.PlatformVariant != nil {
			qrPlatformVariant = *o.PlatformVariant
		}
		qPlatformVariant := qrPlatformVariant
		if qPlatformVariant != "" {
			if err := r.SetQueryParam("platformVariant", qPlatformVariant); err != nil {
				return err
			}
		}

	}

	if o.Region != nil {

		// query param region
		var qrRegion string
		if o.Region != nil {
			qrRegion = *o.Region
		}
		qRegion := qrRegion
		if qRegion != "" {
			if err := r.SetQueryParam("region", qRegion); err != nil {
				return err
			}
		}

	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
