// Code generated by go-swagger; DO NOT EDIT.

package v1platform_resources

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"

	strfmt "github.com/go-openapi/strfmt"
)

// NewGetPrivateDNSZonesParams creates a new GetPrivateDNSZonesParams object
// with the default values initialized.
func NewGetPrivateDNSZonesParams() *GetPrivateDNSZonesParams {
	var ()
	return &GetPrivateDNSZonesParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewGetPrivateDNSZonesParamsWithTimeout creates a new GetPrivateDNSZonesParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewGetPrivateDNSZonesParamsWithTimeout(timeout time.Duration) *GetPrivateDNSZonesParams {
	var ()
	return &GetPrivateDNSZonesParams{

		timeout: timeout,
	}
}

// NewGetPrivateDNSZonesParamsWithContext creates a new GetPrivateDNSZonesParams object
// with the default values initialized, and the ability to set a context for a request
func NewGetPrivateDNSZonesParamsWithContext(ctx context.Context) *GetPrivateDNSZonesParams {
	var ()
	return &GetPrivateDNSZonesParams{

		Context: ctx,
	}
}

// NewGetPrivateDNSZonesParamsWithHTTPClient creates a new GetPrivateDNSZonesParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewGetPrivateDNSZonesParamsWithHTTPClient(client *http.Client) *GetPrivateDNSZonesParams {
	var ()
	return &GetPrivateDNSZonesParams{
		HTTPClient: client,
	}
}

/*GetPrivateDNSZonesParams contains all the parameters to send to the API endpoint
for the get private Dns zones operation typically these are written to a http.Request
*/
type GetPrivateDNSZonesParams struct {

	/*CredentialCrn*/
	CredentialCrn *string
	/*CredentialName*/
	CredentialName *string
	/*PlatformVariant*/
	PlatformVariant *string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the get private Dns zones params
func (o *GetPrivateDNSZonesParams) WithTimeout(timeout time.Duration) *GetPrivateDNSZonesParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the get private Dns zones params
func (o *GetPrivateDNSZonesParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the get private Dns zones params
func (o *GetPrivateDNSZonesParams) WithContext(ctx context.Context) *GetPrivateDNSZonesParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the get private Dns zones params
func (o *GetPrivateDNSZonesParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the get private Dns zones params
func (o *GetPrivateDNSZonesParams) WithHTTPClient(client *http.Client) *GetPrivateDNSZonesParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the get private Dns zones params
func (o *GetPrivateDNSZonesParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithCredentialCrn adds the credentialCrn to the get private Dns zones params
func (o *GetPrivateDNSZonesParams) WithCredentialCrn(credentialCrn *string) *GetPrivateDNSZonesParams {
	o.SetCredentialCrn(credentialCrn)
	return o
}

// SetCredentialCrn adds the credentialCrn to the get private Dns zones params
func (o *GetPrivateDNSZonesParams) SetCredentialCrn(credentialCrn *string) {
	o.CredentialCrn = credentialCrn
}

// WithCredentialName adds the credentialName to the get private Dns zones params
func (o *GetPrivateDNSZonesParams) WithCredentialName(credentialName *string) *GetPrivateDNSZonesParams {
	o.SetCredentialName(credentialName)
	return o
}

// SetCredentialName adds the credentialName to the get private Dns zones params
func (o *GetPrivateDNSZonesParams) SetCredentialName(credentialName *string) {
	o.CredentialName = credentialName
}

// WithPlatformVariant adds the platformVariant to the get private Dns zones params
func (o *GetPrivateDNSZonesParams) WithPlatformVariant(platformVariant *string) *GetPrivateDNSZonesParams {
	o.SetPlatformVariant(platformVariant)
	return o
}

// SetPlatformVariant adds the platformVariant to the get private Dns zones params
func (o *GetPrivateDNSZonesParams) SetPlatformVariant(platformVariant *string) {
	o.PlatformVariant = platformVariant
}

// WriteToRequest writes these params to a swagger request
func (o *GetPrivateDNSZonesParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.CredentialCrn != nil {

		// query param credentialCrn
		var qrCredentialCrn string
		if o.CredentialCrn != nil {
			qrCredentialCrn = *o.CredentialCrn
		}
		qCredentialCrn := qrCredentialCrn
		if qCredentialCrn != "" {
			if err := r.SetQueryParam("credentialCrn", qCredentialCrn); err != nil {
				return err
			}
		}

	}

	if o.CredentialName != nil {

		// query param credentialName
		var qrCredentialName string
		if o.CredentialName != nil {
			qrCredentialName = *o.CredentialName
		}
		qCredentialName := qrCredentialName
		if qCredentialName != "" {
			if err := r.SetQueryParam("credentialName", qCredentialName); err != nil {
				return err
			}
		}

	}

	if o.PlatformVariant != nil {

		// query param platformVariant
		var qrPlatformVariant string
		if o.PlatformVariant != nil {
			qrPlatformVariant = *o.PlatformVariant
		}
		qPlatformVariant := qrPlatformVariant
		if qPlatformVariant != "" {
			if err := r.SetQueryParam("platformVariant", qPlatformVariant); err != nil {
				return err
			}
		}

	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
