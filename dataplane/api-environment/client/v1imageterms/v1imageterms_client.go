// Code generated by go-swagger; DO NOT EDIT.

package v1imageterms

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"
)

// New creates a new v1imageterms API client.
func New(transport runtime.ClientTransport, formats strfmt.Registry) *Client {
	return &Client{transport: transport, formats: formats}
}

/*
Client for v1imageterms API
*/
type Client struct {
	transport runtime.ClientTransport
	formats   strfmt.Registry
}

/*
GetTermsSettingInAccountV1 gets automatic marketplace image terms acceptance setting

CDP is capable to automatically accept Azure Marketplace image terms during cluster deployment. You can use this setting in your account to opt in or opt out this behaviour.
*/
func (a *Client) GetTermsSettingInAccountV1(params *GetTermsSettingInAccountV1Params) (*GetTermsSettingInAccountV1OK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewGetTermsSettingInAccountV1Params()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "getTermsSettingInAccountV1",
		Method:             "GET",
		PathPattern:        "/v1/imageterms/{accountId}",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"http", "https"},
		Params:             params,
		Reader:             &GetTermsSettingInAccountV1Reader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	return result.(*GetTermsSettingInAccountV1OK), nil

}

/*
GetTermsSettingV1 gets automatic marketplace image terms acceptance setting

CDP is capable to automatically accept Azure Marketplace image terms during cluster deployment. You can use this setting in your account to opt in or opt out this behaviour.
*/
func (a *Client) GetTermsSettingV1(params *GetTermsSettingV1Params) (*GetTermsSettingV1OK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewGetTermsSettingV1Params()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "getTermsSettingV1",
		Method:             "GET",
		PathPattern:        "/v1/imageterms",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"http", "https"},
		Params:             params,
		Reader:             &GetTermsSettingV1Reader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	return result.(*GetTermsSettingV1OK), nil

}

/*
PutTermsSettingV1 updates automatic marketplace image terms acceptance setting

CDP is capable to automatically accept Azure Marketplace image terms during cluster deployment. You can use this setting in your account to opt in or opt out this behaviour.
*/
func (a *Client) PutTermsSettingV1(params *PutTermsSettingV1Params) (*PutTermsSettingV1OK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewPutTermsSettingV1Params()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "putTermsSettingV1",
		Method:             "PUT",
		PathPattern:        "/v1/imageterms",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"http", "https"},
		Params:             params,
		Reader:             &PutTermsSettingV1Reader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	return result.(*PutTermsSettingV1OK), nil

}

// SetTransport changes the transport on the client
func (a *Client) SetTransport(transport runtime.ClientTransport) {
	a.transport = transport
}
