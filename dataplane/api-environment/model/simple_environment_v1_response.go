// Code generated by go-swagger; DO NOT EDIT.

package model

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// SimpleEnvironmentV1Response simple environment v1 response
// swagger:model SimpleEnvironmentV1Response
type SimpleEnvironmentV1Response struct {

	// Cloud platform of the environment.
	CloudPlatform string `json:"cloudPlatform,omitempty"`

	// Name of the credential of the environment.
	CredentialName string `json:"credentialName,omitempty"`

	// description of the resource
	Description string `json:"description,omitempty"`

	// Status of the environment.
	// Enum: [CREATION_INITIATED NETWORK_CREATION_IN_PROGRESS RDBMS_CREATION_IN_PROGRESS FREEIPA_CREATION_IN_PROGRESS AVAILABLE ARCHIVED CORRUPTED]
	EnvironmentStatus string `json:"environmentStatus,omitempty"`

	// id of the resource
	ID string `json:"id,omitempty"`

	// Location of the environment.
	Location *LocationV1Response `json:"location,omitempty"`

	// name of the resource
	Name string `json:"name,omitempty"`

	// Network related specifics of the environment.
	Network *EnvironmentNetworkV1Response `json:"network,omitempty"`

	// Regions of the environment.
	Regions *CompactRegionV1Response `json:"regions,omitempty"`
}

// Validate validates this simple environment v1 response
func (m *SimpleEnvironmentV1Response) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateEnvironmentStatus(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateLocation(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateNetwork(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateRegions(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

var simpleEnvironmentV1ResponseTypeEnvironmentStatusPropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["CREATION_INITIATED","NETWORK_CREATION_IN_PROGRESS","RDBMS_CREATION_IN_PROGRESS","FREEIPA_CREATION_IN_PROGRESS","AVAILABLE","ARCHIVED","CORRUPTED"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		simpleEnvironmentV1ResponseTypeEnvironmentStatusPropEnum = append(simpleEnvironmentV1ResponseTypeEnvironmentStatusPropEnum, v)
	}
}

const (

	// SimpleEnvironmentV1ResponseEnvironmentStatusCREATIONINITIATED captures enum value "CREATION_INITIATED"
	SimpleEnvironmentV1ResponseEnvironmentStatusCREATIONINITIATED string = "CREATION_INITIATED"

	// SimpleEnvironmentV1ResponseEnvironmentStatusNETWORKCREATIONINPROGRESS captures enum value "NETWORK_CREATION_IN_PROGRESS"
	SimpleEnvironmentV1ResponseEnvironmentStatusNETWORKCREATIONINPROGRESS string = "NETWORK_CREATION_IN_PROGRESS"

	// SimpleEnvironmentV1ResponseEnvironmentStatusRDBMSCREATIONINPROGRESS captures enum value "RDBMS_CREATION_IN_PROGRESS"
	SimpleEnvironmentV1ResponseEnvironmentStatusRDBMSCREATIONINPROGRESS string = "RDBMS_CREATION_IN_PROGRESS"

	// SimpleEnvironmentV1ResponseEnvironmentStatusFREEIPACREATIONINPROGRESS captures enum value "FREEIPA_CREATION_IN_PROGRESS"
	SimpleEnvironmentV1ResponseEnvironmentStatusFREEIPACREATIONINPROGRESS string = "FREEIPA_CREATION_IN_PROGRESS"

	// SimpleEnvironmentV1ResponseEnvironmentStatusAVAILABLE captures enum value "AVAILABLE"
	SimpleEnvironmentV1ResponseEnvironmentStatusAVAILABLE string = "AVAILABLE"

	// SimpleEnvironmentV1ResponseEnvironmentStatusARCHIVED captures enum value "ARCHIVED"
	SimpleEnvironmentV1ResponseEnvironmentStatusARCHIVED string = "ARCHIVED"

	// SimpleEnvironmentV1ResponseEnvironmentStatusCORRUPTED captures enum value "CORRUPTED"
	SimpleEnvironmentV1ResponseEnvironmentStatusCORRUPTED string = "CORRUPTED"
)

// prop value enum
func (m *SimpleEnvironmentV1Response) validateEnvironmentStatusEnum(path, location string, value string) error {
	if err := validate.Enum(path, location, value, simpleEnvironmentV1ResponseTypeEnvironmentStatusPropEnum); err != nil {
		return err
	}
	return nil
}

func (m *SimpleEnvironmentV1Response) validateEnvironmentStatus(formats strfmt.Registry) error {

	if swag.IsZero(m.EnvironmentStatus) { // not required
		return nil
	}

	// value enum
	if err := m.validateEnvironmentStatusEnum("environmentStatus", "body", m.EnvironmentStatus); err != nil {
		return err
	}

	return nil
}

func (m *SimpleEnvironmentV1Response) validateLocation(formats strfmt.Registry) error {

	if swag.IsZero(m.Location) { // not required
		return nil
	}

	if m.Location != nil {
		if err := m.Location.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("location")
			}
			return err
		}
	}

	return nil
}

func (m *SimpleEnvironmentV1Response) validateNetwork(formats strfmt.Registry) error {

	if swag.IsZero(m.Network) { // not required
		return nil
	}

	if m.Network != nil {
		if err := m.Network.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("network")
			}
			return err
		}
	}

	return nil
}

func (m *SimpleEnvironmentV1Response) validateRegions(formats strfmt.Registry) error {

	if swag.IsZero(m.Regions) { // not required
		return nil
	}

	if m.Regions != nil {
		if err := m.Regions.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("regions")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (m *SimpleEnvironmentV1Response) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *SimpleEnvironmentV1Response) UnmarshalBinary(b []byte) error {
	var res SimpleEnvironmentV1Response
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
