// Code generated by go-swagger; DO NOT EDIT.

package model

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// EnvironmentNetworkGcpV1Params environment network gcp v1 params
// swagger:model EnvironmentNetworkGcpV1Params
type EnvironmentNetworkGcpV1Params struct {

	// Gcp network id
	// Required: true
	// Max Length: 255
	// Min Length: 0
	NetworkID *string `json:"networkId"`

	// Gcp no firewall rules
	// Required: true
	NoFirewallRules *bool `json:"noFirewallRules"`

	// Gcp no public ip
	// Required: true
	NoPublicIP *bool `json:"noPublicIp"`

	// Gcp shared project id
	// Required: true
	SharedProjectID *string `json:"sharedProjectId"`
}

// Validate validates this environment network gcp v1 params
func (m *EnvironmentNetworkGcpV1Params) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateNetworkID(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateNoFirewallRules(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateNoPublicIP(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateSharedProjectID(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *EnvironmentNetworkGcpV1Params) validateNetworkID(formats strfmt.Registry) error {

	if err := validate.Required("networkId", "body", m.NetworkID); err != nil {
		return err
	}

	if err := validate.MinLength("networkId", "body", string(*m.NetworkID), 0); err != nil {
		return err
	}

	if err := validate.MaxLength("networkId", "body", string(*m.NetworkID), 255); err != nil {
		return err
	}

	return nil
}

func (m *EnvironmentNetworkGcpV1Params) validateNoFirewallRules(formats strfmt.Registry) error {

	if err := validate.Required("noFirewallRules", "body", m.NoFirewallRules); err != nil {
		return err
	}

	return nil
}

func (m *EnvironmentNetworkGcpV1Params) validateNoPublicIP(formats strfmt.Registry) error {

	if err := validate.Required("noPublicIp", "body", m.NoPublicIP); err != nil {
		return err
	}

	return nil
}

func (m *EnvironmentNetworkGcpV1Params) validateSharedProjectID(formats strfmt.Registry) error {

	if err := validate.Required("sharedProjectId", "body", m.SharedProjectID); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *EnvironmentNetworkGcpV1Params) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *EnvironmentNetworkGcpV1Params) UnmarshalBinary(b []byte) error {
	var res EnvironmentNetworkGcpV1Params
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
