/*
Redbeams API

API for working with databases and database servers

API version: 2.66.0-b41-1-ge11bb40
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package model

import (
	"encoding/json"
)

// checks if the AzureNetworkV4Parameters type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AzureNetworkV4Parameters{}

// AzureNetworkV4Parameters Azure-specific parameters for the network
type AzureNetworkV4Parameters struct {
	// Comma-separated list of fully-qualified subnets with connectivity to the database server
	Subnets *string `json:"subnets,omitempty"`
}

// NewAzureNetworkV4Parameters instantiates a new AzureNetworkV4Parameters object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAzureNetworkV4Parameters() *AzureNetworkV4Parameters {
	this := AzureNetworkV4Parameters{}
	return &this
}

// NewAzureNetworkV4ParametersWithDefaults instantiates a new AzureNetworkV4Parameters object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAzureNetworkV4ParametersWithDefaults() *AzureNetworkV4Parameters {
	this := AzureNetworkV4Parameters{}
	return &this
}

// GetSubnets returns the Subnets field value if set, zero value otherwise.
func (o *AzureNetworkV4Parameters) GetSubnets() string {
	if o == nil || isNil(o.Subnets) {
		var ret string
		return ret
	}
	return *o.Subnets
}

// GetSubnetsOk returns a tuple with the Subnets field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AzureNetworkV4Parameters) GetSubnetsOk() (*string, bool) {
	if o == nil || isNil(o.Subnets) {
		return nil, false
	}
	return o.Subnets, true
}

// HasSubnets returns a boolean if a field has been set.
func (o *AzureNetworkV4Parameters) HasSubnets() bool {
	if o != nil && !isNil(o.Subnets) {
		return true
	}

	return false
}

// SetSubnets gets a reference to the given string and assigns it to the Subnets field.
func (o *AzureNetworkV4Parameters) SetSubnets(v string) {
	o.Subnets = &v
}

func (o AzureNetworkV4Parameters) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AzureNetworkV4Parameters) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Subnets) {
		toSerialize["subnets"] = o.Subnets
	}
	return toSerialize, nil
}

type NullableAzureNetworkV4Parameters struct {
	value *AzureNetworkV4Parameters
	isSet bool
}

func (v NullableAzureNetworkV4Parameters) Get() *AzureNetworkV4Parameters {
	return v.value
}

func (v *NullableAzureNetworkV4Parameters) Set(val *AzureNetworkV4Parameters) {
	v.value = val
	v.isSet = true
}

func (v NullableAzureNetworkV4Parameters) IsSet() bool {
	return v.isSet
}

func (v *NullableAzureNetworkV4Parameters) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAzureNetworkV4Parameters(val *AzureNetworkV4Parameters) *NullableAzureNetworkV4Parameters {
	return &NullableAzureNetworkV4Parameters{value: val, isSet: true}
}

func (v NullableAzureNetworkV4Parameters) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAzureNetworkV4Parameters) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
