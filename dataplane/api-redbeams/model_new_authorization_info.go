/*
Redbeams API

API for working with databases and database servers

API version: 2.66.0-b41-1-ge11bb40
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package model

import (
	"encoding/json"
)

// checks if the NewAuthorizationInfo type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &NewAuthorizationInfo{}

// NewAuthorizationInfo struct for NewAuthorizationInfo
type NewAuthorizationInfo struct {
	PermissionsNeededForApi           []string                 `json:"permissionsNeededForApi,omitempty"`
	PermissionsNeededForRequestObject []FieldAuthorizationInfo `json:"permissionsNeededForRequestObject,omitempty"`
}

// NewNewAuthorizationInfo instantiates a new NewAuthorizationInfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewNewAuthorizationInfo() *NewAuthorizationInfo {
	this := NewAuthorizationInfo{}
	return &this
}

// NewNewAuthorizationInfoWithDefaults instantiates a new NewAuthorizationInfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewNewAuthorizationInfoWithDefaults() *NewAuthorizationInfo {
	this := NewAuthorizationInfo{}
	return &this
}

// GetPermissionsNeededForApi returns the PermissionsNeededForApi field value if set, zero value otherwise.
func (o *NewAuthorizationInfo) GetPermissionsNeededForApi() []string {
	if o == nil || isNil(o.PermissionsNeededForApi) {
		var ret []string
		return ret
	}
	return o.PermissionsNeededForApi
}

// GetPermissionsNeededForApiOk returns a tuple with the PermissionsNeededForApi field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NewAuthorizationInfo) GetPermissionsNeededForApiOk() ([]string, bool) {
	if o == nil || isNil(o.PermissionsNeededForApi) {
		return nil, false
	}
	return o.PermissionsNeededForApi, true
}

// HasPermissionsNeededForApi returns a boolean if a field has been set.
func (o *NewAuthorizationInfo) HasPermissionsNeededForApi() bool {
	if o != nil && !isNil(o.PermissionsNeededForApi) {
		return true
	}

	return false
}

// SetPermissionsNeededForApi gets a reference to the given []string and assigns it to the PermissionsNeededForApi field.
func (o *NewAuthorizationInfo) SetPermissionsNeededForApi(v []string) {
	o.PermissionsNeededForApi = v
}

// GetPermissionsNeededForRequestObject returns the PermissionsNeededForRequestObject field value if set, zero value otherwise.
func (o *NewAuthorizationInfo) GetPermissionsNeededForRequestObject() []FieldAuthorizationInfo {
	if o == nil || isNil(o.PermissionsNeededForRequestObject) {
		var ret []FieldAuthorizationInfo
		return ret
	}
	return o.PermissionsNeededForRequestObject
}

// GetPermissionsNeededForRequestObjectOk returns a tuple with the PermissionsNeededForRequestObject field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NewAuthorizationInfo) GetPermissionsNeededForRequestObjectOk() ([]FieldAuthorizationInfo, bool) {
	if o == nil || isNil(o.PermissionsNeededForRequestObject) {
		return nil, false
	}
	return o.PermissionsNeededForRequestObject, true
}

// HasPermissionsNeededForRequestObject returns a boolean if a field has been set.
func (o *NewAuthorizationInfo) HasPermissionsNeededForRequestObject() bool {
	if o != nil && !isNil(o.PermissionsNeededForRequestObject) {
		return true
	}

	return false
}

// SetPermissionsNeededForRequestObject gets a reference to the given []FieldAuthorizationInfo and assigns it to the PermissionsNeededForRequestObject field.
func (o *NewAuthorizationInfo) SetPermissionsNeededForRequestObject(v []FieldAuthorizationInfo) {
	o.PermissionsNeededForRequestObject = v
}

func (o NewAuthorizationInfo) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o NewAuthorizationInfo) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.PermissionsNeededForApi) {
		toSerialize["permissionsNeededForApi"] = o.PermissionsNeededForApi
	}
	if !isNil(o.PermissionsNeededForRequestObject) {
		toSerialize["permissionsNeededForRequestObject"] = o.PermissionsNeededForRequestObject
	}
	return toSerialize, nil
}

type NullableNewAuthorizationInfo struct {
	value *NewAuthorizationInfo
	isSet bool
}

func (v NullableNewAuthorizationInfo) Get() *NewAuthorizationInfo {
	return v.value
}

func (v *NullableNewAuthorizationInfo) Set(val *NewAuthorizationInfo) {
	v.value = val
	v.isSet = true
}

func (v NullableNewAuthorizationInfo) IsSet() bool {
	return v.isSet
}

func (v *NullableNewAuthorizationInfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableNewAuthorizationInfo(val *NewAuthorizationInfo) *NullableNewAuthorizationInfo {
	return &NullableNewAuthorizationInfo{value: val, isSet: true}
}

func (v NullableNewAuthorizationInfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableNewAuthorizationInfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
