// Code generated by go-swagger; DO NOT EDIT.

package v4databaseservers

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/swag"

	strfmt "github.com/go-openapi/strfmt"
)

// NewListDatabaseServersParams creates a new ListDatabaseServersParams object
// with the default values initialized.
func NewListDatabaseServersParams() *ListDatabaseServersParams {
	var (
		attachGlobalDefault = bool(false)
	)
	return &ListDatabaseServersParams{
		AttachGlobal: &attachGlobalDefault,

		timeout: cr.DefaultTimeout,
	}
}

// NewListDatabaseServersParamsWithTimeout creates a new ListDatabaseServersParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewListDatabaseServersParamsWithTimeout(timeout time.Duration) *ListDatabaseServersParams {
	var (
		attachGlobalDefault = bool(false)
	)
	return &ListDatabaseServersParams{
		AttachGlobal: &attachGlobalDefault,

		timeout: timeout,
	}
}

// NewListDatabaseServersParamsWithContext creates a new ListDatabaseServersParams object
// with the default values initialized, and the ability to set a context for a request
func NewListDatabaseServersParamsWithContext(ctx context.Context) *ListDatabaseServersParams {
	var (
		attachGlobalDefault = bool(false)
	)
	return &ListDatabaseServersParams{
		AttachGlobal: &attachGlobalDefault,

		Context: ctx,
	}
}

// NewListDatabaseServersParamsWithHTTPClient creates a new ListDatabaseServersParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewListDatabaseServersParamsWithHTTPClient(client *http.Client) *ListDatabaseServersParams {
	var (
		attachGlobalDefault = bool(false)
	)
	return &ListDatabaseServersParams{
		AttachGlobal: &attachGlobalDefault,
		HTTPClient:   client,
	}
}

/*ListDatabaseServersParams contains all the parameters to send to the API endpoint
for the list database servers operation typically these are written to a http.Request
*/
type ListDatabaseServersParams struct {

	/*AttachGlobal*/
	AttachGlobal *bool
	/*EnvironmentID*/
	EnvironmentID string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the list database servers params
func (o *ListDatabaseServersParams) WithTimeout(timeout time.Duration) *ListDatabaseServersParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the list database servers params
func (o *ListDatabaseServersParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the list database servers params
func (o *ListDatabaseServersParams) WithContext(ctx context.Context) *ListDatabaseServersParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the list database servers params
func (o *ListDatabaseServersParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the list database servers params
func (o *ListDatabaseServersParams) WithHTTPClient(client *http.Client) *ListDatabaseServersParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the list database servers params
func (o *ListDatabaseServersParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithAttachGlobal adds the attachGlobal to the list database servers params
func (o *ListDatabaseServersParams) WithAttachGlobal(attachGlobal *bool) *ListDatabaseServersParams {
	o.SetAttachGlobal(attachGlobal)
	return o
}

// SetAttachGlobal adds the attachGlobal to the list database servers params
func (o *ListDatabaseServersParams) SetAttachGlobal(attachGlobal *bool) {
	o.AttachGlobal = attachGlobal
}

// WithEnvironmentID adds the environmentID to the list database servers params
func (o *ListDatabaseServersParams) WithEnvironmentID(environmentID string) *ListDatabaseServersParams {
	o.SetEnvironmentID(environmentID)
	return o
}

// SetEnvironmentID adds the environmentId to the list database servers params
func (o *ListDatabaseServersParams) SetEnvironmentID(environmentID string) {
	o.EnvironmentID = environmentID
}

// WriteToRequest writes these params to a swagger request
func (o *ListDatabaseServersParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.AttachGlobal != nil {

		// query param attachGlobal
		var qrAttachGlobal bool
		if o.AttachGlobal != nil {
			qrAttachGlobal = *o.AttachGlobal
		}
		qAttachGlobal := swag.FormatBool(qrAttachGlobal)
		if qAttachGlobal != "" {
			if err := r.SetQueryParam("attachGlobal", qAttachGlobal); err != nil {
				return err
			}
		}

	}

	// query param environmentId
	qrEnvironmentID := o.EnvironmentID
	qEnvironmentID := qrEnvironmentID
	if qEnvironmentID != "" {
		if err := r.SetQueryParam("environmentId", qEnvironmentID); err != nil {
			return err
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
