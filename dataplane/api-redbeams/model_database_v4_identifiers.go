/*
Redbeams API

API for working with databases and database servers

API version: 2.66.0-b41-1-ge11bb40
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the DatabaseV4Identifiers type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DatabaseV4Identifiers{}

// DatabaseV4Identifiers Identifiers that together identify a database in an environment
type DatabaseV4Identifiers struct {
	// Name of the database
	Name string `json:"name"`
	// CRN of the environment of the database
	EnvironmentCrn string `json:"environmentCrn"`
}

// NewDatabaseV4Identifiers instantiates a new DatabaseV4Identifiers object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDatabaseV4Identifiers(name string, environmentCrn string) *DatabaseV4Identifiers {
	this := DatabaseV4Identifiers{}
	this.Name = name
	this.EnvironmentCrn = environmentCrn
	return &this
}

// NewDatabaseV4IdentifiersWithDefaults instantiates a new DatabaseV4Identifiers object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDatabaseV4IdentifiersWithDefaults() *DatabaseV4Identifiers {
	this := DatabaseV4Identifiers{}
	return &this
}

// GetName returns the Name field value
func (o *DatabaseV4Identifiers) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *DatabaseV4Identifiers) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *DatabaseV4Identifiers) SetName(v string) {
	o.Name = v
}

// GetEnvironmentCrn returns the EnvironmentCrn field value
func (o *DatabaseV4Identifiers) GetEnvironmentCrn() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.EnvironmentCrn
}

// GetEnvironmentCrnOk returns a tuple with the EnvironmentCrn field value
// and a boolean to check if the value has been set.
func (o *DatabaseV4Identifiers) GetEnvironmentCrnOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.EnvironmentCrn, true
}

// SetEnvironmentCrn sets field value
func (o *DatabaseV4Identifiers) SetEnvironmentCrn(v string) {
	o.EnvironmentCrn = v
}

func (o DatabaseV4Identifiers) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DatabaseV4Identifiers) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["name"] = o.Name
	toSerialize["environmentCrn"] = o.EnvironmentCrn
	return toSerialize, nil
}

type NullableDatabaseV4Identifiers struct {
	value *DatabaseV4Identifiers
	isSet bool
}

func (v NullableDatabaseV4Identifiers) Get() *DatabaseV4Identifiers {
	return v.value
}

func (v *NullableDatabaseV4Identifiers) Set(val *DatabaseV4Identifiers) {
	v.value = val
	v.isSet = true
}

func (v NullableDatabaseV4Identifiers) IsSet() bool {
	return v.isSet
}

func (v *NullableDatabaseV4Identifiers) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDatabaseV4Identifiers(val *DatabaseV4Identifiers) *NullableDatabaseV4Identifiers {
	return &NullableDatabaseV4Identifiers{value: val, isSet: true}
}

func (v NullableDatabaseV4Identifiers) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDatabaseV4Identifiers) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
