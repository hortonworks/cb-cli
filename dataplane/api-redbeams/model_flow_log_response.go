/*
Redbeams API

API for working with databases and database servers

API version: 2.66.0-b41-1-ge11bb40
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the FlowLogResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &FlowLogResponse{}

// FlowLogResponse struct for FlowLogResponse
type FlowLogResponse struct {
	ResourceId         *int64  `json:"resourceId,omitempty"`
	Created            *int64  `json:"created,omitempty"`
	FlowId             *string `json:"flowId,omitempty"`
	FlowChainId        *string `json:"flowChainId,omitempty"`
	NextEvent          *string `json:"nextEvent,omitempty"`
	CurrentState       *string `json:"currentState,omitempty"`
	Finalized          *bool   `json:"finalized,omitempty"`
	NodeId             *string `json:"nodeId,omitempty"`
	StateStatus        *string `json:"stateStatus,omitempty"`
	FlowTriggerUserCrn *string `json:"flowTriggerUserCrn,omitempty"`
	EndTime            *int64  `json:"endTime,omitempty"`
}

// NewFlowLogResponse instantiates a new FlowLogResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewFlowLogResponse() *FlowLogResponse {
	this := FlowLogResponse{}
	return &this
}

// NewFlowLogResponseWithDefaults instantiates a new FlowLogResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewFlowLogResponseWithDefaults() *FlowLogResponse {
	this := FlowLogResponse{}
	return &this
}

// GetResourceId returns the ResourceId field value if set, zero value otherwise.
func (o *FlowLogResponse) GetResourceId() int64 {
	if o == nil || isNil(o.ResourceId) {
		var ret int64
		return ret
	}
	return *o.ResourceId
}

// GetResourceIdOk returns a tuple with the ResourceId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FlowLogResponse) GetResourceIdOk() (*int64, bool) {
	if o == nil || isNil(o.ResourceId) {
		return nil, false
	}
	return o.ResourceId, true
}

// HasResourceId returns a boolean if a field has been set.
func (o *FlowLogResponse) HasResourceId() bool {
	if o != nil && !isNil(o.ResourceId) {
		return true
	}

	return false
}

// SetResourceId gets a reference to the given int64 and assigns it to the ResourceId field.
func (o *FlowLogResponse) SetResourceId(v int64) {
	o.ResourceId = &v
}

// GetCreated returns the Created field value if set, zero value otherwise.
func (o *FlowLogResponse) GetCreated() int64 {
	if o == nil || isNil(o.Created) {
		var ret int64
		return ret
	}
	return *o.Created
}

// GetCreatedOk returns a tuple with the Created field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FlowLogResponse) GetCreatedOk() (*int64, bool) {
	if o == nil || isNil(o.Created) {
		return nil, false
	}
	return o.Created, true
}

// HasCreated returns a boolean if a field has been set.
func (o *FlowLogResponse) HasCreated() bool {
	if o != nil && !isNil(o.Created) {
		return true
	}

	return false
}

// SetCreated gets a reference to the given int64 and assigns it to the Created field.
func (o *FlowLogResponse) SetCreated(v int64) {
	o.Created = &v
}

// GetFlowId returns the FlowId field value if set, zero value otherwise.
func (o *FlowLogResponse) GetFlowId() string {
	if o == nil || isNil(o.FlowId) {
		var ret string
		return ret
	}
	return *o.FlowId
}

// GetFlowIdOk returns a tuple with the FlowId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FlowLogResponse) GetFlowIdOk() (*string, bool) {
	if o == nil || isNil(o.FlowId) {
		return nil, false
	}
	return o.FlowId, true
}

// HasFlowId returns a boolean if a field has been set.
func (o *FlowLogResponse) HasFlowId() bool {
	if o != nil && !isNil(o.FlowId) {
		return true
	}

	return false
}

// SetFlowId gets a reference to the given string and assigns it to the FlowId field.
func (o *FlowLogResponse) SetFlowId(v string) {
	o.FlowId = &v
}

// GetFlowChainId returns the FlowChainId field value if set, zero value otherwise.
func (o *FlowLogResponse) GetFlowChainId() string {
	if o == nil || isNil(o.FlowChainId) {
		var ret string
		return ret
	}
	return *o.FlowChainId
}

// GetFlowChainIdOk returns a tuple with the FlowChainId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FlowLogResponse) GetFlowChainIdOk() (*string, bool) {
	if o == nil || isNil(o.FlowChainId) {
		return nil, false
	}
	return o.FlowChainId, true
}

// HasFlowChainId returns a boolean if a field has been set.
func (o *FlowLogResponse) HasFlowChainId() bool {
	if o != nil && !isNil(o.FlowChainId) {
		return true
	}

	return false
}

// SetFlowChainId gets a reference to the given string and assigns it to the FlowChainId field.
func (o *FlowLogResponse) SetFlowChainId(v string) {
	o.FlowChainId = &v
}

// GetNextEvent returns the NextEvent field value if set, zero value otherwise.
func (o *FlowLogResponse) GetNextEvent() string {
	if o == nil || isNil(o.NextEvent) {
		var ret string
		return ret
	}
	return *o.NextEvent
}

// GetNextEventOk returns a tuple with the NextEvent field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FlowLogResponse) GetNextEventOk() (*string, bool) {
	if o == nil || isNil(o.NextEvent) {
		return nil, false
	}
	return o.NextEvent, true
}

// HasNextEvent returns a boolean if a field has been set.
func (o *FlowLogResponse) HasNextEvent() bool {
	if o != nil && !isNil(o.NextEvent) {
		return true
	}

	return false
}

// SetNextEvent gets a reference to the given string and assigns it to the NextEvent field.
func (o *FlowLogResponse) SetNextEvent(v string) {
	o.NextEvent = &v
}

// GetCurrentState returns the CurrentState field value if set, zero value otherwise.
func (o *FlowLogResponse) GetCurrentState() string {
	if o == nil || isNil(o.CurrentState) {
		var ret string
		return ret
	}
	return *o.CurrentState
}

// GetCurrentStateOk returns a tuple with the CurrentState field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FlowLogResponse) GetCurrentStateOk() (*string, bool) {
	if o == nil || isNil(o.CurrentState) {
		return nil, false
	}
	return o.CurrentState, true
}

// HasCurrentState returns a boolean if a field has been set.
func (o *FlowLogResponse) HasCurrentState() bool {
	if o != nil && !isNil(o.CurrentState) {
		return true
	}

	return false
}

// SetCurrentState gets a reference to the given string and assigns it to the CurrentState field.
func (o *FlowLogResponse) SetCurrentState(v string) {
	o.CurrentState = &v
}

// GetFinalized returns the Finalized field value if set, zero value otherwise.
func (o *FlowLogResponse) GetFinalized() bool {
	if o == nil || isNil(o.Finalized) {
		var ret bool
		return ret
	}
	return *o.Finalized
}

// GetFinalizedOk returns a tuple with the Finalized field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FlowLogResponse) GetFinalizedOk() (*bool, bool) {
	if o == nil || isNil(o.Finalized) {
		return nil, false
	}
	return o.Finalized, true
}

// HasFinalized returns a boolean if a field has been set.
func (o *FlowLogResponse) HasFinalized() bool {
	if o != nil && !isNil(o.Finalized) {
		return true
	}

	return false
}

// SetFinalized gets a reference to the given bool and assigns it to the Finalized field.
func (o *FlowLogResponse) SetFinalized(v bool) {
	o.Finalized = &v
}

// GetNodeId returns the NodeId field value if set, zero value otherwise.
func (o *FlowLogResponse) GetNodeId() string {
	if o == nil || isNil(o.NodeId) {
		var ret string
		return ret
	}
	return *o.NodeId
}

// GetNodeIdOk returns a tuple with the NodeId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FlowLogResponse) GetNodeIdOk() (*string, bool) {
	if o == nil || isNil(o.NodeId) {
		return nil, false
	}
	return o.NodeId, true
}

// HasNodeId returns a boolean if a field has been set.
func (o *FlowLogResponse) HasNodeId() bool {
	if o != nil && !isNil(o.NodeId) {
		return true
	}

	return false
}

// SetNodeId gets a reference to the given string and assigns it to the NodeId field.
func (o *FlowLogResponse) SetNodeId(v string) {
	o.NodeId = &v
}

// GetStateStatus returns the StateStatus field value if set, zero value otherwise.
func (o *FlowLogResponse) GetStateStatus() string {
	if o == nil || isNil(o.StateStatus) {
		var ret string
		return ret
	}
	return *o.StateStatus
}

// GetStateStatusOk returns a tuple with the StateStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FlowLogResponse) GetStateStatusOk() (*string, bool) {
	if o == nil || isNil(o.StateStatus) {
		return nil, false
	}
	return o.StateStatus, true
}

// HasStateStatus returns a boolean if a field has been set.
func (o *FlowLogResponse) HasStateStatus() bool {
	if o != nil && !isNil(o.StateStatus) {
		return true
	}

	return false
}

// SetStateStatus gets a reference to the given string and assigns it to the StateStatus field.
func (o *FlowLogResponse) SetStateStatus(v string) {
	o.StateStatus = &v
}

// GetFlowTriggerUserCrn returns the FlowTriggerUserCrn field value if set, zero value otherwise.
func (o *FlowLogResponse) GetFlowTriggerUserCrn() string {
	if o == nil || isNil(o.FlowTriggerUserCrn) {
		var ret string
		return ret
	}
	return *o.FlowTriggerUserCrn
}

// GetFlowTriggerUserCrnOk returns a tuple with the FlowTriggerUserCrn field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FlowLogResponse) GetFlowTriggerUserCrnOk() (*string, bool) {
	if o == nil || isNil(o.FlowTriggerUserCrn) {
		return nil, false
	}
	return o.FlowTriggerUserCrn, true
}

// HasFlowTriggerUserCrn returns a boolean if a field has been set.
func (o *FlowLogResponse) HasFlowTriggerUserCrn() bool {
	if o != nil && !isNil(o.FlowTriggerUserCrn) {
		return true
	}

	return false
}

// SetFlowTriggerUserCrn gets a reference to the given string and assigns it to the FlowTriggerUserCrn field.
func (o *FlowLogResponse) SetFlowTriggerUserCrn(v string) {
	o.FlowTriggerUserCrn = &v
}

// GetEndTime returns the EndTime field value if set, zero value otherwise.
func (o *FlowLogResponse) GetEndTime() int64 {
	if o == nil || isNil(o.EndTime) {
		var ret int64
		return ret
	}
	return *o.EndTime
}

// GetEndTimeOk returns a tuple with the EndTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FlowLogResponse) GetEndTimeOk() (*int64, bool) {
	if o == nil || isNil(o.EndTime) {
		return nil, false
	}
	return o.EndTime, true
}

// HasEndTime returns a boolean if a field has been set.
func (o *FlowLogResponse) HasEndTime() bool {
	if o != nil && !isNil(o.EndTime) {
		return true
	}

	return false
}

// SetEndTime gets a reference to the given int64 and assigns it to the EndTime field.
func (o *FlowLogResponse) SetEndTime(v int64) {
	o.EndTime = &v
}

func (o FlowLogResponse) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o FlowLogResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.ResourceId) {
		toSerialize["resourceId"] = o.ResourceId
	}
	if !isNil(o.Created) {
		toSerialize["created"] = o.Created
	}
	if !isNil(o.FlowId) {
		toSerialize["flowId"] = o.FlowId
	}
	if !isNil(o.FlowChainId) {
		toSerialize["flowChainId"] = o.FlowChainId
	}
	if !isNil(o.NextEvent) {
		toSerialize["nextEvent"] = o.NextEvent
	}
	if !isNil(o.CurrentState) {
		toSerialize["currentState"] = o.CurrentState
	}
	if !isNil(o.Finalized) {
		toSerialize["finalized"] = o.Finalized
	}
	if !isNil(o.NodeId) {
		toSerialize["nodeId"] = o.NodeId
	}
	if !isNil(o.StateStatus) {
		toSerialize["stateStatus"] = o.StateStatus
	}
	if !isNil(o.FlowTriggerUserCrn) {
		toSerialize["flowTriggerUserCrn"] = o.FlowTriggerUserCrn
	}
	if !isNil(o.EndTime) {
		toSerialize["endTime"] = o.EndTime
	}
	return toSerialize, nil
}

type NullableFlowLogResponse struct {
	value *FlowLogResponse
	isSet bool
}

func (v NullableFlowLogResponse) Get() *FlowLogResponse {
	return v.value
}

func (v *NullableFlowLogResponse) Set(val *FlowLogResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableFlowLogResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableFlowLogResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableFlowLogResponse(val *FlowLogResponse) *NullableFlowLogResponse {
	return &NullableFlowLogResponse{value: val, isSet: true}
}

func (v NullableFlowLogResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableFlowLogResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
