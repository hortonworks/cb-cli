/*
Redbeams API

API for working with databases and database servers

API version: 2.66.0-b41-1-ge11bb40
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package model

import (
	"encoding/json"
)

// checks if the DatabaseServerStatusV4Response type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DatabaseServerStatusV4Response{}

// DatabaseServerStatusV4Response Response containing status information about a database server
type DatabaseServerStatusV4Response struct {
	// CRN of the environment of the database server
	EnvironmentCrn string `json:"environmentCrn"`
	// Name of the database server
	Name string `json:"name"`
	// CRN of the database server
	ResourceCrn string `json:"resourceCrn"`
	// Status of the database server stack
	Status string `json:"status"`
	// Additional status information about the database server stack
	StatusReason string `json:"statusReason"`
}

// NewDatabaseServerStatusV4Response instantiates a new DatabaseServerStatusV4Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDatabaseServerStatusV4Response(environmentCrn string, name string, resourceCrn string, status string, statusReason string) *DatabaseServerStatusV4Response {
	this := DatabaseServerStatusV4Response{}
	this.EnvironmentCrn = environmentCrn
	this.Name = name
	this.ResourceCrn = resourceCrn
	this.Status = status
	this.StatusReason = statusReason
	return &this
}

// NewDatabaseServerStatusV4ResponseWithDefaults instantiates a new DatabaseServerStatusV4Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDatabaseServerStatusV4ResponseWithDefaults() *DatabaseServerStatusV4Response {
	this := DatabaseServerStatusV4Response{}
	return &this
}

// GetEnvironmentCrn returns the EnvironmentCrn field value
func (o *DatabaseServerStatusV4Response) GetEnvironmentCrn() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.EnvironmentCrn
}

// GetEnvironmentCrnOk returns a tuple with the EnvironmentCrn field value
// and a boolean to check if the value has been set.
func (o *DatabaseServerStatusV4Response) GetEnvironmentCrnOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.EnvironmentCrn, true
}

// SetEnvironmentCrn sets field value
func (o *DatabaseServerStatusV4Response) SetEnvironmentCrn(v string) {
	o.EnvironmentCrn = v
}

// GetName returns the Name field value
func (o *DatabaseServerStatusV4Response) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *DatabaseServerStatusV4Response) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *DatabaseServerStatusV4Response) SetName(v string) {
	o.Name = v
}

// GetResourceCrn returns the ResourceCrn field value
func (o *DatabaseServerStatusV4Response) GetResourceCrn() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ResourceCrn
}

// GetResourceCrnOk returns a tuple with the ResourceCrn field value
// and a boolean to check if the value has been set.
func (o *DatabaseServerStatusV4Response) GetResourceCrnOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ResourceCrn, true
}

// SetResourceCrn sets field value
func (o *DatabaseServerStatusV4Response) SetResourceCrn(v string) {
	o.ResourceCrn = v
}

// GetStatus returns the Status field value
func (o *DatabaseServerStatusV4Response) GetStatus() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Status
}

// GetStatusOk returns a tuple with the Status field value
// and a boolean to check if the value has been set.
func (o *DatabaseServerStatusV4Response) GetStatusOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Status, true
}

// SetStatus sets field value
func (o *DatabaseServerStatusV4Response) SetStatus(v string) {
	o.Status = v
}

// GetStatusReason returns the StatusReason field value
func (o *DatabaseServerStatusV4Response) GetStatusReason() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.StatusReason
}

// GetStatusReasonOk returns a tuple with the StatusReason field value
// and a boolean to check if the value has been set.
func (o *DatabaseServerStatusV4Response) GetStatusReasonOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.StatusReason, true
}

// SetStatusReason sets field value
func (o *DatabaseServerStatusV4Response) SetStatusReason(v string) {
	o.StatusReason = v
}

func (o DatabaseServerStatusV4Response) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DatabaseServerStatusV4Response) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["environmentCrn"] = o.EnvironmentCrn
	toSerialize["name"] = o.Name
	toSerialize["resourceCrn"] = o.ResourceCrn
	toSerialize["status"] = o.Status
	toSerialize["statusReason"] = o.StatusReason
	return toSerialize, nil
}

type NullableDatabaseServerStatusV4Response struct {
	value *DatabaseServerStatusV4Response
	isSet bool
}

func (v NullableDatabaseServerStatusV4Response) Get() *DatabaseServerStatusV4Response {
	return v.value
}

func (v *NullableDatabaseServerStatusV4Response) Set(val *DatabaseServerStatusV4Response) {
	v.value = val
	v.isSet = true
}

func (v NullableDatabaseServerStatusV4Response) IsSet() bool {
	return v.isSet
}

func (v *NullableDatabaseServerStatusV4Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDatabaseServerStatusV4Response(val *DatabaseServerStatusV4Response) *NullableDatabaseServerStatusV4Response {
	return &NullableDatabaseServerStatusV4Response{value: val, isSet: true}
}

func (v NullableDatabaseServerStatusV4Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDatabaseServerStatusV4Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
