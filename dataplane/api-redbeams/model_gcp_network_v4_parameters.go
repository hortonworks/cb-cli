/*
Redbeams API

API for working with databases and database servers

API version: 2.66.0-b41-1-ge11bb40
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package model

import (
	"encoding/json"
)

// checks if the GcpNetworkV4Parameters type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GcpNetworkV4Parameters{}

// GcpNetworkV4Parameters GCP-specific parameters for the network
type GcpNetworkV4Parameters struct {
	NetworkId       *string `json:"networkId,omitempty"`
	SubnetId        *string `json:"subnetId,omitempty"`
	SharedProjectId *string `json:"sharedProjectId,omitempty"`
	NoPublicIp      *bool   `json:"noPublicIp,omitempty"`
	NoFirewallRules *bool   `json:"noFirewallRules,omitempty"`
}

// NewGcpNetworkV4Parameters instantiates a new GcpNetworkV4Parameters object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGcpNetworkV4Parameters() *GcpNetworkV4Parameters {
	this := GcpNetworkV4Parameters{}
	return &this
}

// NewGcpNetworkV4ParametersWithDefaults instantiates a new GcpNetworkV4Parameters object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGcpNetworkV4ParametersWithDefaults() *GcpNetworkV4Parameters {
	this := GcpNetworkV4Parameters{}
	return &this
}

// GetNetworkId returns the NetworkId field value if set, zero value otherwise.
func (o *GcpNetworkV4Parameters) GetNetworkId() string {
	if o == nil || isNil(o.NetworkId) {
		var ret string
		return ret
	}
	return *o.NetworkId
}

// GetNetworkIdOk returns a tuple with the NetworkId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GcpNetworkV4Parameters) GetNetworkIdOk() (*string, bool) {
	if o == nil || isNil(o.NetworkId) {
		return nil, false
	}
	return o.NetworkId, true
}

// HasNetworkId returns a boolean if a field has been set.
func (o *GcpNetworkV4Parameters) HasNetworkId() bool {
	if o != nil && !isNil(o.NetworkId) {
		return true
	}

	return false
}

// SetNetworkId gets a reference to the given string and assigns it to the NetworkId field.
func (o *GcpNetworkV4Parameters) SetNetworkId(v string) {
	o.NetworkId = &v
}

// GetSubnetId returns the SubnetId field value if set, zero value otherwise.
func (o *GcpNetworkV4Parameters) GetSubnetId() string {
	if o == nil || isNil(o.SubnetId) {
		var ret string
		return ret
	}
	return *o.SubnetId
}

// GetSubnetIdOk returns a tuple with the SubnetId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GcpNetworkV4Parameters) GetSubnetIdOk() (*string, bool) {
	if o == nil || isNil(o.SubnetId) {
		return nil, false
	}
	return o.SubnetId, true
}

// HasSubnetId returns a boolean if a field has been set.
func (o *GcpNetworkV4Parameters) HasSubnetId() bool {
	if o != nil && !isNil(o.SubnetId) {
		return true
	}

	return false
}

// SetSubnetId gets a reference to the given string and assigns it to the SubnetId field.
func (o *GcpNetworkV4Parameters) SetSubnetId(v string) {
	o.SubnetId = &v
}

// GetSharedProjectId returns the SharedProjectId field value if set, zero value otherwise.
func (o *GcpNetworkV4Parameters) GetSharedProjectId() string {
	if o == nil || isNil(o.SharedProjectId) {
		var ret string
		return ret
	}
	return *o.SharedProjectId
}

// GetSharedProjectIdOk returns a tuple with the SharedProjectId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GcpNetworkV4Parameters) GetSharedProjectIdOk() (*string, bool) {
	if o == nil || isNil(o.SharedProjectId) {
		return nil, false
	}
	return o.SharedProjectId, true
}

// HasSharedProjectId returns a boolean if a field has been set.
func (o *GcpNetworkV4Parameters) HasSharedProjectId() bool {
	if o != nil && !isNil(o.SharedProjectId) {
		return true
	}

	return false
}

// SetSharedProjectId gets a reference to the given string and assigns it to the SharedProjectId field.
func (o *GcpNetworkV4Parameters) SetSharedProjectId(v string) {
	o.SharedProjectId = &v
}

// GetNoPublicIp returns the NoPublicIp field value if set, zero value otherwise.
func (o *GcpNetworkV4Parameters) GetNoPublicIp() bool {
	if o == nil || isNil(o.NoPublicIp) {
		var ret bool
		return ret
	}
	return *o.NoPublicIp
}

// GetNoPublicIpOk returns a tuple with the NoPublicIp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GcpNetworkV4Parameters) GetNoPublicIpOk() (*bool, bool) {
	if o == nil || isNil(o.NoPublicIp) {
		return nil, false
	}
	return o.NoPublicIp, true
}

// HasNoPublicIp returns a boolean if a field has been set.
func (o *GcpNetworkV4Parameters) HasNoPublicIp() bool {
	if o != nil && !isNil(o.NoPublicIp) {
		return true
	}

	return false
}

// SetNoPublicIp gets a reference to the given bool and assigns it to the NoPublicIp field.
func (o *GcpNetworkV4Parameters) SetNoPublicIp(v bool) {
	o.NoPublicIp = &v
}

// GetNoFirewallRules returns the NoFirewallRules field value if set, zero value otherwise.
func (o *GcpNetworkV4Parameters) GetNoFirewallRules() bool {
	if o == nil || isNil(o.NoFirewallRules) {
		var ret bool
		return ret
	}
	return *o.NoFirewallRules
}

// GetNoFirewallRulesOk returns a tuple with the NoFirewallRules field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GcpNetworkV4Parameters) GetNoFirewallRulesOk() (*bool, bool) {
	if o == nil || isNil(o.NoFirewallRules) {
		return nil, false
	}
	return o.NoFirewallRules, true
}

// HasNoFirewallRules returns a boolean if a field has been set.
func (o *GcpNetworkV4Parameters) HasNoFirewallRules() bool {
	if o != nil && !isNil(o.NoFirewallRules) {
		return true
	}

	return false
}

// SetNoFirewallRules gets a reference to the given bool and assigns it to the NoFirewallRules field.
func (o *GcpNetworkV4Parameters) SetNoFirewallRules(v bool) {
	o.NoFirewallRules = &v
}

func (o GcpNetworkV4Parameters) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GcpNetworkV4Parameters) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.NetworkId) {
		toSerialize["networkId"] = o.NetworkId
	}
	if !isNil(o.SubnetId) {
		toSerialize["subnetId"] = o.SubnetId
	}
	if !isNil(o.SharedProjectId) {
		toSerialize["sharedProjectId"] = o.SharedProjectId
	}
	if !isNil(o.NoPublicIp) {
		toSerialize["noPublicIp"] = o.NoPublicIp
	}
	if !isNil(o.NoFirewallRules) {
		toSerialize["noFirewallRules"] = o.NoFirewallRules
	}
	return toSerialize, nil
}

type NullableGcpNetworkV4Parameters struct {
	value *GcpNetworkV4Parameters
	isSet bool
}

func (v NullableGcpNetworkV4Parameters) Get() *GcpNetworkV4Parameters {
	return v.value
}

func (v *NullableGcpNetworkV4Parameters) Set(val *GcpNetworkV4Parameters) {
	v.value = val
	v.isSet = true
}

func (v NullableGcpNetworkV4Parameters) IsSet() bool {
	return v.isSet
}

func (v *NullableGcpNetworkV4Parameters) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGcpNetworkV4Parameters(val *GcpNetworkV4Parameters) *NullableGcpNetworkV4Parameters {
	return &NullableGcpNetworkV4Parameters{value: val, isSet: true}
}

func (v NullableGcpNetworkV4Parameters) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGcpNetworkV4Parameters) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
