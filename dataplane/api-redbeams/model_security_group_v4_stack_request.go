/*
Redbeams API

API for working with databases and database servers

API version: 2.66.0-b41-1-ge11bb40
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the SecurityGroupV4StackRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SecurityGroupV4StackRequest{}

// SecurityGroupV4StackRequest Security group of the database server
type SecurityGroupV4StackRequest struct {
	// Exisiting security group ID(s) for the database server
	SecurityGroupIds []string `json:"securityGroupIds,omitempty"`
}

// NewSecurityGroupV4StackRequest instantiates a new SecurityGroupV4StackRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSecurityGroupV4StackRequest() *SecurityGroupV4StackRequest {
	this := SecurityGroupV4StackRequest{}
	return &this
}

// NewSecurityGroupV4StackRequestWithDefaults instantiates a new SecurityGroupV4StackRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSecurityGroupV4StackRequestWithDefaults() *SecurityGroupV4StackRequest {
	this := SecurityGroupV4StackRequest{}
	return &this
}

// GetSecurityGroupIds returns the SecurityGroupIds field value if set, zero value otherwise.
func (o *SecurityGroupV4StackRequest) GetSecurityGroupIds() []string {
	if o == nil || isNil(o.SecurityGroupIds) {
		var ret []string
		return ret
	}
	return o.SecurityGroupIds
}

// GetSecurityGroupIdsOk returns a tuple with the SecurityGroupIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SecurityGroupV4StackRequest) GetSecurityGroupIdsOk() ([]string, bool) {
	if o == nil || isNil(o.SecurityGroupIds) {
		return nil, false
	}
	return o.SecurityGroupIds, true
}

// HasSecurityGroupIds returns a boolean if a field has been set.
func (o *SecurityGroupV4StackRequest) HasSecurityGroupIds() bool {
	if o != nil && !isNil(o.SecurityGroupIds) {
		return true
	}

	return false
}

// SetSecurityGroupIds gets a reference to the given []string and assigns it to the SecurityGroupIds field.
func (o *SecurityGroupV4StackRequest) SetSecurityGroupIds(v []string) {
	o.SecurityGroupIds = v
}

func (o SecurityGroupV4StackRequest) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SecurityGroupV4StackRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.SecurityGroupIds) {
		toSerialize["securityGroupIds"] = o.SecurityGroupIds
	}
	return toSerialize, nil
}

type NullableSecurityGroupV4StackRequest struct {
	value *SecurityGroupV4StackRequest
	isSet bool
}

func (v NullableSecurityGroupV4StackRequest) Get() *SecurityGroupV4StackRequest {
	return v.value
}

func (v *NullableSecurityGroupV4StackRequest) Set(val *SecurityGroupV4StackRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableSecurityGroupV4StackRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableSecurityGroupV4StackRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSecurityGroupV4StackRequest(val *SecurityGroupV4StackRequest) *NullableSecurityGroupV4StackRequest {
	return &NullableSecurityGroupV4StackRequest{value: val, isSet: true}
}

func (v NullableSecurityGroupV4StackRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSecurityGroupV4StackRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
