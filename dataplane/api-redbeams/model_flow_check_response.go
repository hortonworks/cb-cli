/*
Redbeams API

API for working with databases and database servers

API version: 2.66.0-b41-1-ge11bb40
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the FlowCheckResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &FlowCheckResponse{}

// FlowCheckResponse struct for FlowCheckResponse
type FlowCheckResponse struct {
	FlowId                       *string `json:"flowId,omitempty"`
	FlowChainId                  *string `json:"flowChainId,omitempty"`
	HasActiveFlow                *bool   `json:"hasActiveFlow,omitempty"`
	LatestFlowFinalizedAndFailed *bool   `json:"latestFlowFinalizedAndFailed,omitempty"`
	EndTime                      *int64  `json:"endTime,omitempty"`
}

// NewFlowCheckResponse instantiates a new FlowCheckResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewFlowCheckResponse() *FlowCheckResponse {
	this := FlowCheckResponse{}
	return &this
}

// NewFlowCheckResponseWithDefaults instantiates a new FlowCheckResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewFlowCheckResponseWithDefaults() *FlowCheckResponse {
	this := FlowCheckResponse{}
	return &this
}

// GetFlowId returns the FlowId field value if set, zero value otherwise.
func (o *FlowCheckResponse) GetFlowId() string {
	if o == nil || isNil(o.FlowId) {
		var ret string
		return ret
	}
	return *o.FlowId
}

// GetFlowIdOk returns a tuple with the FlowId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FlowCheckResponse) GetFlowIdOk() (*string, bool) {
	if o == nil || isNil(o.FlowId) {
		return nil, false
	}
	return o.FlowId, true
}

// HasFlowId returns a boolean if a field has been set.
func (o *FlowCheckResponse) HasFlowId() bool {
	if o != nil && !isNil(o.FlowId) {
		return true
	}

	return false
}

// SetFlowId gets a reference to the given string and assigns it to the FlowId field.
func (o *FlowCheckResponse) SetFlowId(v string) {
	o.FlowId = &v
}

// GetFlowChainId returns the FlowChainId field value if set, zero value otherwise.
func (o *FlowCheckResponse) GetFlowChainId() string {
	if o == nil || isNil(o.FlowChainId) {
		var ret string
		return ret
	}
	return *o.FlowChainId
}

// GetFlowChainIdOk returns a tuple with the FlowChainId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FlowCheckResponse) GetFlowChainIdOk() (*string, bool) {
	if o == nil || isNil(o.FlowChainId) {
		return nil, false
	}
	return o.FlowChainId, true
}

// HasFlowChainId returns a boolean if a field has been set.
func (o *FlowCheckResponse) HasFlowChainId() bool {
	if o != nil && !isNil(o.FlowChainId) {
		return true
	}

	return false
}

// SetFlowChainId gets a reference to the given string and assigns it to the FlowChainId field.
func (o *FlowCheckResponse) SetFlowChainId(v string) {
	o.FlowChainId = &v
}

// GetHasActiveFlow returns the HasActiveFlow field value if set, zero value otherwise.
func (o *FlowCheckResponse) GetHasActiveFlow() bool {
	if o == nil || isNil(o.HasActiveFlow) {
		var ret bool
		return ret
	}
	return *o.HasActiveFlow
}

// GetHasActiveFlowOk returns a tuple with the HasActiveFlow field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FlowCheckResponse) GetHasActiveFlowOk() (*bool, bool) {
	if o == nil || isNil(o.HasActiveFlow) {
		return nil, false
	}
	return o.HasActiveFlow, true
}

// HasHasActiveFlow returns a boolean if a field has been set.
func (o *FlowCheckResponse) HasHasActiveFlow() bool {
	if o != nil && !isNil(o.HasActiveFlow) {
		return true
	}

	return false
}

// SetHasActiveFlow gets a reference to the given bool and assigns it to the HasActiveFlow field.
func (o *FlowCheckResponse) SetHasActiveFlow(v bool) {
	o.HasActiveFlow = &v
}

// GetLatestFlowFinalizedAndFailed returns the LatestFlowFinalizedAndFailed field value if set, zero value otherwise.
func (o *FlowCheckResponse) GetLatestFlowFinalizedAndFailed() bool {
	if o == nil || isNil(o.LatestFlowFinalizedAndFailed) {
		var ret bool
		return ret
	}
	return *o.LatestFlowFinalizedAndFailed
}

// GetLatestFlowFinalizedAndFailedOk returns a tuple with the LatestFlowFinalizedAndFailed field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FlowCheckResponse) GetLatestFlowFinalizedAndFailedOk() (*bool, bool) {
	if o == nil || isNil(o.LatestFlowFinalizedAndFailed) {
		return nil, false
	}
	return o.LatestFlowFinalizedAndFailed, true
}

// HasLatestFlowFinalizedAndFailed returns a boolean if a field has been set.
func (o *FlowCheckResponse) HasLatestFlowFinalizedAndFailed() bool {
	if o != nil && !isNil(o.LatestFlowFinalizedAndFailed) {
		return true
	}

	return false
}

// SetLatestFlowFinalizedAndFailed gets a reference to the given bool and assigns it to the LatestFlowFinalizedAndFailed field.
func (o *FlowCheckResponse) SetLatestFlowFinalizedAndFailed(v bool) {
	o.LatestFlowFinalizedAndFailed = &v
}

// GetEndTime returns the EndTime field value if set, zero value otherwise.
func (o *FlowCheckResponse) GetEndTime() int64 {
	if o == nil || isNil(o.EndTime) {
		var ret int64
		return ret
	}
	return *o.EndTime
}

// GetEndTimeOk returns a tuple with the EndTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FlowCheckResponse) GetEndTimeOk() (*int64, bool) {
	if o == nil || isNil(o.EndTime) {
		return nil, false
	}
	return o.EndTime, true
}

// HasEndTime returns a boolean if a field has been set.
func (o *FlowCheckResponse) HasEndTime() bool {
	if o != nil && !isNil(o.EndTime) {
		return true
	}

	return false
}

// SetEndTime gets a reference to the given int64 and assigns it to the EndTime field.
func (o *FlowCheckResponse) SetEndTime(v int64) {
	o.EndTime = &v
}

func (o FlowCheckResponse) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o FlowCheckResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.FlowId) {
		toSerialize["flowId"] = o.FlowId
	}
	if !isNil(o.FlowChainId) {
		toSerialize["flowChainId"] = o.FlowChainId
	}
	if !isNil(o.HasActiveFlow) {
		toSerialize["hasActiveFlow"] = o.HasActiveFlow
	}
	if !isNil(o.LatestFlowFinalizedAndFailed) {
		toSerialize["latestFlowFinalizedAndFailed"] = o.LatestFlowFinalizedAndFailed
	}
	if !isNil(o.EndTime) {
		toSerialize["endTime"] = o.EndTime
	}
	return toSerialize, nil
}

type NullableFlowCheckResponse struct {
	value *FlowCheckResponse
	isSet bool
}

func (v NullableFlowCheckResponse) Get() *FlowCheckResponse {
	return v.value
}

func (v *NullableFlowCheckResponse) Set(val *FlowCheckResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableFlowCheckResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableFlowCheckResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableFlowCheckResponse(val *FlowCheckResponse) *NullableFlowCheckResponse {
	return &NullableFlowCheckResponse{value: val, isSet: true}
}

func (v NullableFlowCheckResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableFlowCheckResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
