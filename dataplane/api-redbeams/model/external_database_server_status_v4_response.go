// Code generated by go-swagger; DO NOT EDIT.

package model

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// ExternalDatabaseServerStatusV4Response external database server status v4 response
// swagger:model ExternalDatabaseServerStatusV4Response
type ExternalDatabaseServerStatusV4Response struct {

	// Crn of the environment of the resource
	// Required: true
	EnvironmentCrn *string `json:"environmentCrn"`

	// Name of the external database server
	// Required: true
	Name *string `json:"name"`

	// CRN of the resource
	// Required: true
	ResourceCrn *string `json:"resourceCrn"`

	// Status of the database stack
	// Required: true
	// Enum: [REQUESTED CREATE_IN_PROGRESS AVAILABLE UPDATE_IN_PROGRESS UPDATE_REQUESTED UPDATE_FAILED CREATE_FAILED ENABLE_SECURITY_FAILED DELETE_REQUESTED PRE_DELETE_IN_PROGRESS DELETE_IN_PROGRESS DELETE_FAILED DELETE_COMPLETED STOPPED STOP_REQUESTED START_REQUESTED STOP_IN_PROGRESS START_IN_PROGRESS START_FAILED STOP_FAILED WAIT_FOR_SYNC MAINTENANCE_MODE_ENABLED]
	Status *string `json:"status"`

	// Status message of the database stack
	// Required: true
	StatusReason *string `json:"statusReason"`
}

// Validate validates this external database server status v4 response
func (m *ExternalDatabaseServerStatusV4Response) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateEnvironmentCrn(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateName(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateResourceCrn(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateStatus(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateStatusReason(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *ExternalDatabaseServerStatusV4Response) validateEnvironmentCrn(formats strfmt.Registry) error {

	if err := validate.Required("environmentCrn", "body", m.EnvironmentCrn); err != nil {
		return err
	}

	return nil
}

func (m *ExternalDatabaseServerStatusV4Response) validateName(formats strfmt.Registry) error {

	if err := validate.Required("name", "body", m.Name); err != nil {
		return err
	}

	return nil
}

func (m *ExternalDatabaseServerStatusV4Response) validateResourceCrn(formats strfmt.Registry) error {

	if err := validate.Required("resourceCrn", "body", m.ResourceCrn); err != nil {
		return err
	}

	return nil
}

var externalDatabaseServerStatusV4ResponseTypeStatusPropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["REQUESTED","CREATE_IN_PROGRESS","AVAILABLE","UPDATE_IN_PROGRESS","UPDATE_REQUESTED","UPDATE_FAILED","CREATE_FAILED","ENABLE_SECURITY_FAILED","DELETE_REQUESTED","PRE_DELETE_IN_PROGRESS","DELETE_IN_PROGRESS","DELETE_FAILED","DELETE_COMPLETED","STOPPED","STOP_REQUESTED","START_REQUESTED","STOP_IN_PROGRESS","START_IN_PROGRESS","START_FAILED","STOP_FAILED","WAIT_FOR_SYNC","MAINTENANCE_MODE_ENABLED"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		externalDatabaseServerStatusV4ResponseTypeStatusPropEnum = append(externalDatabaseServerStatusV4ResponseTypeStatusPropEnum, v)
	}
}

const (

	// ExternalDatabaseServerStatusV4ResponseStatusREQUESTED captures enum value "REQUESTED"
	ExternalDatabaseServerStatusV4ResponseStatusREQUESTED string = "REQUESTED"

	// ExternalDatabaseServerStatusV4ResponseStatusCREATEINPROGRESS captures enum value "CREATE_IN_PROGRESS"
	ExternalDatabaseServerStatusV4ResponseStatusCREATEINPROGRESS string = "CREATE_IN_PROGRESS"

	// ExternalDatabaseServerStatusV4ResponseStatusAVAILABLE captures enum value "AVAILABLE"
	ExternalDatabaseServerStatusV4ResponseStatusAVAILABLE string = "AVAILABLE"

	// ExternalDatabaseServerStatusV4ResponseStatusUPDATEINPROGRESS captures enum value "UPDATE_IN_PROGRESS"
	ExternalDatabaseServerStatusV4ResponseStatusUPDATEINPROGRESS string = "UPDATE_IN_PROGRESS"

	// ExternalDatabaseServerStatusV4ResponseStatusUPDATEREQUESTED captures enum value "UPDATE_REQUESTED"
	ExternalDatabaseServerStatusV4ResponseStatusUPDATEREQUESTED string = "UPDATE_REQUESTED"

	// ExternalDatabaseServerStatusV4ResponseStatusUPDATEFAILED captures enum value "UPDATE_FAILED"
	ExternalDatabaseServerStatusV4ResponseStatusUPDATEFAILED string = "UPDATE_FAILED"

	// ExternalDatabaseServerStatusV4ResponseStatusCREATEFAILED captures enum value "CREATE_FAILED"
	ExternalDatabaseServerStatusV4ResponseStatusCREATEFAILED string = "CREATE_FAILED"

	// ExternalDatabaseServerStatusV4ResponseStatusENABLESECURITYFAILED captures enum value "ENABLE_SECURITY_FAILED"
	ExternalDatabaseServerStatusV4ResponseStatusENABLESECURITYFAILED string = "ENABLE_SECURITY_FAILED"

	// ExternalDatabaseServerStatusV4ResponseStatusDELETEREQUESTED captures enum value "DELETE_REQUESTED"
	ExternalDatabaseServerStatusV4ResponseStatusDELETEREQUESTED string = "DELETE_REQUESTED"

	// ExternalDatabaseServerStatusV4ResponseStatusPREDELETEINPROGRESS captures enum value "PRE_DELETE_IN_PROGRESS"
	ExternalDatabaseServerStatusV4ResponseStatusPREDELETEINPROGRESS string = "PRE_DELETE_IN_PROGRESS"

	// ExternalDatabaseServerStatusV4ResponseStatusDELETEINPROGRESS captures enum value "DELETE_IN_PROGRESS"
	ExternalDatabaseServerStatusV4ResponseStatusDELETEINPROGRESS string = "DELETE_IN_PROGRESS"

	// ExternalDatabaseServerStatusV4ResponseStatusDELETEFAILED captures enum value "DELETE_FAILED"
	ExternalDatabaseServerStatusV4ResponseStatusDELETEFAILED string = "DELETE_FAILED"

	// ExternalDatabaseServerStatusV4ResponseStatusDELETECOMPLETED captures enum value "DELETE_COMPLETED"
	ExternalDatabaseServerStatusV4ResponseStatusDELETECOMPLETED string = "DELETE_COMPLETED"

	// ExternalDatabaseServerStatusV4ResponseStatusSTOPPED captures enum value "STOPPED"
	ExternalDatabaseServerStatusV4ResponseStatusSTOPPED string = "STOPPED"

	// ExternalDatabaseServerStatusV4ResponseStatusSTOPREQUESTED captures enum value "STOP_REQUESTED"
	ExternalDatabaseServerStatusV4ResponseStatusSTOPREQUESTED string = "STOP_REQUESTED"

	// ExternalDatabaseServerStatusV4ResponseStatusSTARTREQUESTED captures enum value "START_REQUESTED"
	ExternalDatabaseServerStatusV4ResponseStatusSTARTREQUESTED string = "START_REQUESTED"

	// ExternalDatabaseServerStatusV4ResponseStatusSTOPINPROGRESS captures enum value "STOP_IN_PROGRESS"
	ExternalDatabaseServerStatusV4ResponseStatusSTOPINPROGRESS string = "STOP_IN_PROGRESS"

	// ExternalDatabaseServerStatusV4ResponseStatusSTARTINPROGRESS captures enum value "START_IN_PROGRESS"
	ExternalDatabaseServerStatusV4ResponseStatusSTARTINPROGRESS string = "START_IN_PROGRESS"

	// ExternalDatabaseServerStatusV4ResponseStatusSTARTFAILED captures enum value "START_FAILED"
	ExternalDatabaseServerStatusV4ResponseStatusSTARTFAILED string = "START_FAILED"

	// ExternalDatabaseServerStatusV4ResponseStatusSTOPFAILED captures enum value "STOP_FAILED"
	ExternalDatabaseServerStatusV4ResponseStatusSTOPFAILED string = "STOP_FAILED"

	// ExternalDatabaseServerStatusV4ResponseStatusWAITFORSYNC captures enum value "WAIT_FOR_SYNC"
	ExternalDatabaseServerStatusV4ResponseStatusWAITFORSYNC string = "WAIT_FOR_SYNC"

	// ExternalDatabaseServerStatusV4ResponseStatusMAINTENANCEMODEENABLED captures enum value "MAINTENANCE_MODE_ENABLED"
	ExternalDatabaseServerStatusV4ResponseStatusMAINTENANCEMODEENABLED string = "MAINTENANCE_MODE_ENABLED"
)

// prop value enum
func (m *ExternalDatabaseServerStatusV4Response) validateStatusEnum(path, location string, value string) error {
	if err := validate.Enum(path, location, value, externalDatabaseServerStatusV4ResponseTypeStatusPropEnum); err != nil {
		return err
	}
	return nil
}

func (m *ExternalDatabaseServerStatusV4Response) validateStatus(formats strfmt.Registry) error {

	if err := validate.Required("status", "body", m.Status); err != nil {
		return err
	}

	// value enum
	if err := m.validateStatusEnum("status", "body", *m.Status); err != nil {
		return err
	}

	return nil
}

func (m *ExternalDatabaseServerStatusV4Response) validateStatusReason(formats strfmt.Registry) error {

	if err := validate.Required("statusReason", "body", m.StatusReason); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *ExternalDatabaseServerStatusV4Response) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *ExternalDatabaseServerStatusV4Response) UnmarshalBinary(b []byte) error {
	var res ExternalDatabaseServerStatusV4Response
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
