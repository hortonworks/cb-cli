// Code generated by go-swagger; DO NOT EDIT.

package model

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// GcpDatabaseServerV4Parameters gcp database server v4 parameters
// swagger:model GcpDatabaseServerV4Parameters
type GcpDatabaseServerV4Parameters struct {

	// Time to retain backups, in days
	// Minimum: 7
	BackupRetentionDays int32 `json:"backupRetentionDays,omitempty"`

	// The version of the database software to use
	// Pattern: \d+(?:\.\d)?
	EngineVersion string `json:"engineVersion,omitempty"`
}

// Validate validates this gcp database server v4 parameters
func (m *GcpDatabaseServerV4Parameters) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateBackupRetentionDays(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateEngineVersion(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *GcpDatabaseServerV4Parameters) validateBackupRetentionDays(formats strfmt.Registry) error {

	if swag.IsZero(m.BackupRetentionDays) { // not required
		return nil
	}

	if err := validate.MinimumInt("backupRetentionDays", "body", int64(m.BackupRetentionDays), 7, false); err != nil {
		return err
	}

	return nil
}

func (m *GcpDatabaseServerV4Parameters) validateEngineVersion(formats strfmt.Registry) error {

	if swag.IsZero(m.EngineVersion) { // not required
		return nil
	}

	if err := validate.Pattern("engineVersion", "body", string(m.EngineVersion), `\d+(?:\.\d)?`); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *GcpDatabaseServerV4Parameters) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *GcpDatabaseServerV4Parameters) UnmarshalBinary(b []byte) error {
	var res GcpDatabaseServerV4Parameters
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
