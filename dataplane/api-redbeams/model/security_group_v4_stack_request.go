// Code generated by go-swagger; DO NOT EDIT.

package model

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// SecurityGroupV4StackRequest security group v4 stack request
// swagger:model SecurityGroupV4StackRequest
type SecurityGroupV4StackRequest struct {

	// Exisiting security group ID(s) for the database server
	// Unique: true
	SecurityGroupIds []string `json:"securityGroupIds"`
}

// Validate validates this security group v4 stack request
func (m *SecurityGroupV4StackRequest) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateSecurityGroupIds(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *SecurityGroupV4StackRequest) validateSecurityGroupIds(formats strfmt.Registry) error {

	if swag.IsZero(m.SecurityGroupIds) { // not required
		return nil
	}

	if err := validate.UniqueItems("securityGroupIds", "body", m.SecurityGroupIds); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *SecurityGroupV4StackRequest) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *SecurityGroupV4StackRequest) UnmarshalBinary(b []byte) error {
	var res SecurityGroupV4StackRequest
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
