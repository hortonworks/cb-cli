/*
Redbeams API

API for working with databases and database servers

API version: 2.66.0-b41-1-ge11bb40
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package model

import (
	"encoding/json"
)

// checks if the ApiAuthorizationInfo type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ApiAuthorizationInfo{}

// ApiAuthorizationInfo struct for ApiAuthorizationInfo
type ApiAuthorizationInfo struct {
	Path             *string               `json:"path,omitempty"`
	HttpMethod       *string               `json:"httpMethod,omitempty"`
	NewAuthorization *NewAuthorizationInfo `json:"newAuthorization,omitempty"`
	Message          *string               `json:"message,omitempty"`
}

// NewApiAuthorizationInfo instantiates a new ApiAuthorizationInfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewApiAuthorizationInfo() *ApiAuthorizationInfo {
	this := ApiAuthorizationInfo{}
	return &this
}

// NewApiAuthorizationInfoWithDefaults instantiates a new ApiAuthorizationInfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewApiAuthorizationInfoWithDefaults() *ApiAuthorizationInfo {
	this := ApiAuthorizationInfo{}
	return &this
}

// GetPath returns the Path field value if set, zero value otherwise.
func (o *ApiAuthorizationInfo) GetPath() string {
	if o == nil || isNil(o.Path) {
		var ret string
		return ret
	}
	return *o.Path
}

// GetPathOk returns a tuple with the Path field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiAuthorizationInfo) GetPathOk() (*string, bool) {
	if o == nil || isNil(o.Path) {
		return nil, false
	}
	return o.Path, true
}

// HasPath returns a boolean if a field has been set.
func (o *ApiAuthorizationInfo) HasPath() bool {
	if o != nil && !isNil(o.Path) {
		return true
	}

	return false
}

// SetPath gets a reference to the given string and assigns it to the Path field.
func (o *ApiAuthorizationInfo) SetPath(v string) {
	o.Path = &v
}

// GetHttpMethod returns the HttpMethod field value if set, zero value otherwise.
func (o *ApiAuthorizationInfo) GetHttpMethod() string {
	if o == nil || isNil(o.HttpMethod) {
		var ret string
		return ret
	}
	return *o.HttpMethod
}

// GetHttpMethodOk returns a tuple with the HttpMethod field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiAuthorizationInfo) GetHttpMethodOk() (*string, bool) {
	if o == nil || isNil(o.HttpMethod) {
		return nil, false
	}
	return o.HttpMethod, true
}

// HasHttpMethod returns a boolean if a field has been set.
func (o *ApiAuthorizationInfo) HasHttpMethod() bool {
	if o != nil && !isNil(o.HttpMethod) {
		return true
	}

	return false
}

// SetHttpMethod gets a reference to the given string and assigns it to the HttpMethod field.
func (o *ApiAuthorizationInfo) SetHttpMethod(v string) {
	o.HttpMethod = &v
}

// GetNewAuthorization returns the NewAuthorization field value if set, zero value otherwise.
func (o *ApiAuthorizationInfo) GetNewAuthorization() NewAuthorizationInfo {
	if o == nil || isNil(o.NewAuthorization) {
		var ret NewAuthorizationInfo
		return ret
	}
	return *o.NewAuthorization
}

// GetNewAuthorizationOk returns a tuple with the NewAuthorization field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiAuthorizationInfo) GetNewAuthorizationOk() (*NewAuthorizationInfo, bool) {
	if o == nil || isNil(o.NewAuthorization) {
		return nil, false
	}
	return o.NewAuthorization, true
}

// HasNewAuthorization returns a boolean if a field has been set.
func (o *ApiAuthorizationInfo) HasNewAuthorization() bool {
	if o != nil && !isNil(o.NewAuthorization) {
		return true
	}

	return false
}

// SetNewAuthorization gets a reference to the given NewAuthorizationInfo and assigns it to the NewAuthorization field.
func (o *ApiAuthorizationInfo) SetNewAuthorization(v NewAuthorizationInfo) {
	o.NewAuthorization = &v
}

// GetMessage returns the Message field value if set, zero value otherwise.
func (o *ApiAuthorizationInfo) GetMessage() string {
	if o == nil || isNil(o.Message) {
		var ret string
		return ret
	}
	return *o.Message
}

// GetMessageOk returns a tuple with the Message field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiAuthorizationInfo) GetMessageOk() (*string, bool) {
	if o == nil || isNil(o.Message) {
		return nil, false
	}
	return o.Message, true
}

// HasMessage returns a boolean if a field has been set.
func (o *ApiAuthorizationInfo) HasMessage() bool {
	if o != nil && !isNil(o.Message) {
		return true
	}

	return false
}

// SetMessage gets a reference to the given string and assigns it to the Message field.
func (o *ApiAuthorizationInfo) SetMessage(v string) {
	o.Message = &v
}

func (o ApiAuthorizationInfo) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ApiAuthorizationInfo) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Path) {
		toSerialize["path"] = o.Path
	}
	if !isNil(o.HttpMethod) {
		toSerialize["httpMethod"] = o.HttpMethod
	}
	if !isNil(o.NewAuthorization) {
		toSerialize["newAuthorization"] = o.NewAuthorization
	}
	if !isNil(o.Message) {
		toSerialize["message"] = o.Message
	}
	return toSerialize, nil
}

type NullableApiAuthorizationInfo struct {
	value *ApiAuthorizationInfo
	isSet bool
}

func (v NullableApiAuthorizationInfo) Get() *ApiAuthorizationInfo {
	return v.value
}

func (v *NullableApiAuthorizationInfo) Set(val *ApiAuthorizationInfo) {
	v.value = val
	v.isSet = true
}

func (v NullableApiAuthorizationInfo) IsSet() bool {
	return v.isSet
}

func (v *NullableApiAuthorizationInfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableApiAuthorizationInfo(val *ApiAuthorizationInfo) *NullableApiAuthorizationInfo {
	return &NullableApiAuthorizationInfo{value: val, isSet: true}
}

func (v NullableApiAuthorizationInfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableApiAuthorizationInfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
