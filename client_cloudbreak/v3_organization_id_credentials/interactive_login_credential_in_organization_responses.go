// Code generated by go-swagger; DO NOT EDIT.

package v3_organization_id_credentials

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/swag"

	strfmt "github.com/go-openapi/strfmt"
)

// InteractiveLoginCredentialInOrganizationReader is a Reader for the InteractiveLoginCredentialInOrganization structure.
type InteractiveLoginCredentialInOrganizationReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *InteractiveLoginCredentialInOrganizationReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewInteractiveLoginCredentialInOrganizationOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewInteractiveLoginCredentialInOrganizationOK creates a InteractiveLoginCredentialInOrganizationOK with default headers values
func NewInteractiveLoginCredentialInOrganizationOK() *InteractiveLoginCredentialInOrganizationOK {
	return &InteractiveLoginCredentialInOrganizationOK{}
}

/*InteractiveLoginCredentialInOrganizationOK handles this case with default header values.

successful operation
*/
type InteractiveLoginCredentialInOrganizationOK struct {
	Payload InteractiveLoginCredentialInOrganizationOKBody
}

func (o *InteractiveLoginCredentialInOrganizationOK) Error() string {
	return fmt.Sprintf("[POST /v3/{organizationId}/credentials/interactivelogin][%d] interactiveLoginCredentialInOrganizationOK  %+v", 200, o.Payload)
}

func (o *InteractiveLoginCredentialInOrganizationOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

/*InteractiveLoginCredentialInOrganizationOKBody interactive login credential in organization o k body
swagger:model InteractiveLoginCredentialInOrganizationOKBody
*/

type InteractiveLoginCredentialInOrganizationOKBody map[string]string

// Validate validates this interactive login credential in organization o k body
func (o InteractiveLoginCredentialInOrganizationOKBody) Validate(formats strfmt.Registry) error {
	var res []error

	if swag.IsZero(o) { // not required
		return nil
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
