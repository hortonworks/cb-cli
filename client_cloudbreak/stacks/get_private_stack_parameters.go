package stacks

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"github.com/go-swagger/go-swagger/client"
	"github.com/go-swagger/go-swagger/errors"
	"github.com/go-swagger/go-swagger/swag"

	strfmt "github.com/go-swagger/go-swagger/strfmt"
)

// NewGetPrivateStackParams creates a new GetPrivateStackParams object
// with the default values initialized.
func NewGetPrivateStackParams() *GetPrivateStackParams {
	var ()
	return &GetPrivateStackParams{}
}

/*GetPrivateStackParams contains all the parameters to send to the API endpoint
for the get private stack operation typically these are written to a http.Request
*/
type GetPrivateStackParams struct {

	/*Entry*/
	Entry []string
	/*Name*/
	Name string
}

// WithEntry adds the entry to the get private stack params
func (o *GetPrivateStackParams) WithEntry(entry []string) *GetPrivateStackParams {
	o.Entry = entry
	return o
}

// WithName adds the name to the get private stack params
func (o *GetPrivateStackParams) WithName(name string) *GetPrivateStackParams {
	o.Name = name
	return o
}

// WriteToRequest writes these params to a swagger request
func (o *GetPrivateStackParams) WriteToRequest(r client.Request, reg strfmt.Registry) error {

	var res []error

	valuesEntry := o.Entry

	joinedEntry := swag.JoinByFormat(valuesEntry, "multi")
	// query array param entry
	if err := r.SetQueryParam("entry", joinedEntry...); err != nil {
		return err
	}

	// path param name
	if err := r.SetPathParam("name", o.Name); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
