package stacks

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"github.com/go-swagger/go-swagger/client"
	"github.com/go-swagger/go-swagger/errors"
	"github.com/go-swagger/go-swagger/swag"

	strfmt "github.com/go-swagger/go-swagger/strfmt"
)

// NewDeleteInstanceParams creates a new DeleteInstanceParams object
// with the default values initialized.
func NewDeleteInstanceParams() *DeleteInstanceParams {
	var ()
	return &DeleteInstanceParams{}
}

/*DeleteInstanceParams contains all the parameters to send to the API endpoint
for the delete instance operation typically these are written to a http.Request
*/
type DeleteInstanceParams struct {

	/*InstanceID*/
	InstanceID string
	/*StackID*/
	StackID int64
}

// WithInstanceID adds the instanceId to the delete instance params
func (o *DeleteInstanceParams) WithInstanceID(instanceId string) *DeleteInstanceParams {
	o.InstanceID = instanceId
	return o
}

// WithStackID adds the stackId to the delete instance params
func (o *DeleteInstanceParams) WithStackID(stackId int64) *DeleteInstanceParams {
	o.StackID = stackId
	return o
}

// WriteToRequest writes these params to a swagger request
func (o *DeleteInstanceParams) WriteToRequest(r client.Request, reg strfmt.Registry) error {

	var res []error

	// path param instanceId
	if err := r.SetPathParam("instanceId", o.InstanceID); err != nil {
		return err
	}

	// path param stackId
	if err := r.SetPathParam("stackId", swag.FormatInt64(o.StackID)); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
