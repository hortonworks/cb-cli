package stacks

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"github.com/go-swagger/go-swagger/client"

	strfmt "github.com/go-swagger/go-swagger/strfmt"
)

// New creates a new stacks API client.
func New(transport client.Transport, formats strfmt.Registry) *Client {
	return &Client{transport: transport, formats: formats}
}

/*
Client for stacks API
*/
type Client struct {
	transport client.Transport
	formats   strfmt.Registry
}

/*
DeleteStacksAccountName deletes public owned or private stack by name

Stacks are template instances - a running cloud infrastructure created based on a template. Stacks are always launched on behalf of a cloud user account. Stacks support a wide range of resources, allowing you to build a highly available, reliable, and scalable infrastructure for your application needs.
*/
func (a *Client) DeleteStacksAccountName(params *DeleteStacksAccountNameParams) error {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewDeleteStacksAccountNameParams()
	}

	_, err := a.transport.Submit(&client.Operation{
		ID:                 "DeleteStacksAccountName",
		Method:             "DELETE",
		PathPattern:        "/stacks/account/{name}",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"http", "https"},
		Params:             params,
		Reader:             &DeleteStacksAccountNameReader{formats: a.formats},
	})
	if err != nil {
		return err
	}
	return nil
}

/*
DeleteStacksID deletes stack by id

Stacks are template instances - a running cloud infrastructure created based on a template. Stacks are always launched on behalf of a cloud user account. Stacks support a wide range of resources, allowing you to build a highly available, reliable, and scalable infrastructure for your application needs.
*/
func (a *Client) DeleteStacksID(params *DeleteStacksIDParams) error {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewDeleteStacksIDParams()
	}

	_, err := a.transport.Submit(&client.Operation{
		ID:                 "DeleteStacksID",
		Method:             "DELETE",
		PathPattern:        "/stacks/{id}",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"http", "https"},
		Params:             params,
		Reader:             &DeleteStacksIDReader{formats: a.formats},
	})
	if err != nil {
		return err
	}
	return nil
}

/*
DeleteStacksUserName deletes private stack by name

Stacks are template instances - a running cloud infrastructure created based on a template. Stacks are always launched on behalf of a cloud user account. Stacks support a wide range of resources, allowing you to build a highly available, reliable, and scalable infrastructure for your application needs.
*/
func (a *Client) DeleteStacksUserName(params *DeleteStacksUserNameParams) error {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewDeleteStacksUserNameParams()
	}

	_, err := a.transport.Submit(&client.Operation{
		ID:                 "DeleteStacksUserName",
		Method:             "DELETE",
		PathPattern:        "/stacks/user/{name}",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"http", "https"},
		Params:             params,
		Reader:             &DeleteStacksUserNameReader{formats: a.formats},
	})
	if err != nil {
		return err
	}
	return nil
}

/*
GetStacksAccount retrieves public and private owned stacks

Stacks are template instances - a running cloud infrastructure created based on a template. Stacks are always launched on behalf of a cloud user account. Stacks support a wide range of resources, allowing you to build a highly available, reliable, and scalable infrastructure for your application needs.
*/
func (a *Client) GetStacksAccount(params *GetStacksAccountParams) (*GetStacksAccountOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewGetStacksAccountParams()
	}

	result, err := a.transport.Submit(&client.Operation{
		ID:                 "GetStacksAccount",
		Method:             "GET",
		PathPattern:        "/stacks/account",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"http", "https"},
		Params:             params,
		Reader:             &GetStacksAccountReader{formats: a.formats},
	})
	if err != nil {
		return nil, err
	}
	return result.(*GetStacksAccountOK), nil
}

/*
GetStacksAccountName retrieves a public or private owned stack by name

Stacks are template instances - a running cloud infrastructure created based on a template. Stacks are always launched on behalf of a cloud user account. Stacks support a wide range of resources, allowing you to build a highly available, reliable, and scalable infrastructure for your application needs.
*/
func (a *Client) GetStacksAccountName(params *GetStacksAccountNameParams) (*GetStacksAccountNameOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewGetStacksAccountNameParams()
	}

	result, err := a.transport.Submit(&client.Operation{
		ID:                 "GetStacksAccountName",
		Method:             "GET",
		PathPattern:        "/stacks/account/{name}",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"http", "https"},
		Params:             params,
		Reader:             &GetStacksAccountNameReader{formats: a.formats},
	})
	if err != nil {
		return nil, err
	}
	return result.(*GetStacksAccountNameOK), nil
}

/*
GetStacksID retrieves stack by id

Stacks are template instances - a running cloud infrastructure created based on a template. Stacks are always launched on behalf of a cloud user account. Stacks support a wide range of resources, allowing you to build a highly available, reliable, and scalable infrastructure for your application needs.
*/
func (a *Client) GetStacksID(params *GetStacksIDParams) (*GetStacksIDOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewGetStacksIDParams()
	}

	result, err := a.transport.Submit(&client.Operation{
		ID:                 "GetStacksID",
		Method:             "GET",
		PathPattern:        "/stacks/{id}",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"http", "https"},
		Params:             params,
		Reader:             &GetStacksIDReader{formats: a.formats},
	})
	if err != nil {
		return nil, err
	}
	return result.(*GetStacksIDOK), nil
}

/*
GetStacksUser retrieves private stack

Stacks are template instances - a running cloud infrastructure created based on a template. Stacks are always launched on behalf of a cloud user account. Stacks support a wide range of resources, allowing you to build a highly available, reliable, and scalable infrastructure for your application needs.
*/
func (a *Client) GetStacksUser(params *GetStacksUserParams) (*GetStacksUserOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewGetStacksUserParams()
	}

	result, err := a.transport.Submit(&client.Operation{
		ID:                 "GetStacksUser",
		Method:             "GET",
		PathPattern:        "/stacks/user",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"http", "https"},
		Params:             params,
		Reader:             &GetStacksUserReader{formats: a.formats},
	})
	if err != nil {
		return nil, err
	}
	return result.(*GetStacksUserOK), nil
}

/*
GetStacksUserName retrieves a private stack by name

Stacks are template instances - a running cloud infrastructure created based on a template. Stacks are always launched on behalf of a cloud user account. Stacks support a wide range of resources, allowing you to build a highly available, reliable, and scalable infrastructure for your application needs.
*/
func (a *Client) GetStacksUserName(params *GetStacksUserNameParams) (*GetStacksUserNameOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewGetStacksUserNameParams()
	}

	result, err := a.transport.Submit(&client.Operation{
		ID:                 "GetStacksUserName",
		Method:             "GET",
		PathPattern:        "/stacks/user/{name}",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"http", "https"},
		Params:             params,
		Reader:             &GetStacksUserNameReader{formats: a.formats},
	})
	if err != nil {
		return nil, err
	}
	return result.(*GetStacksUserNameOK), nil
}

/*
PostStacksAccount creates stack as public resource

Stacks are template instances - a running cloud infrastructure created based on a template. Stacks are always launched on behalf of a cloud user account. Stacks support a wide range of resources, allowing you to build a highly available, reliable, and scalable infrastructure for your application needs.
*/
func (a *Client) PostStacksAccount(params *PostStacksAccountParams) (*PostStacksAccountOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewPostStacksAccountParams()
	}

	result, err := a.transport.Submit(&client.Operation{
		ID:                 "PostStacksAccount",
		Method:             "POST",
		PathPattern:        "/stacks/account",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"http", "https"},
		Params:             params,
		Reader:             &PostStacksAccountReader{formats: a.formats},
	})
	if err != nil {
		return nil, err
	}
	return result.(*PostStacksAccountOK), nil
}

/*
PostStacksUser creates stack as private resource

Stacks are template instances - a running cloud infrastructure created based on a template. Stacks are always launched on behalf of a cloud user account. Stacks support a wide range of resources, allowing you to build a highly available, reliable, and scalable infrastructure for your application needs.
*/
func (a *Client) PostStacksUser(params *PostStacksUserParams) (*PostStacksUserOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewPostStacksUserParams()
	}

	result, err := a.transport.Submit(&client.Operation{
		ID:                 "PostStacksUser",
		Method:             "POST",
		PathPattern:        "/stacks/user",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"http", "https"},
		Params:             params,
		Reader:             &PostStacksUserReader{formats: a.formats},
	})
	if err != nil {
		return nil, err
	}
	return result.(*PostStacksUserOK), nil
}

/*
PostStacksValidate validates stack

Stacks are template instances - a running cloud infrastructure created based on a template. Stacks are always launched on behalf of a cloud user account. Stacks support a wide range of resources, allowing you to build a highly available, reliable, and scalable infrastructure for your application needs.
*/
func (a *Client) PostStacksValidate(params *PostStacksValidateParams) error {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewPostStacksValidateParams()
	}

	_, err := a.transport.Submit(&client.Operation{
		ID:                 "PostStacksValidate",
		Method:             "POST",
		PathPattern:        "/stacks/validate",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"http", "https"},
		Params:             params,
		Reader:             &PostStacksValidateReader{formats: a.formats},
	})
	if err != nil {
		return err
	}
	return nil
}

/*
PutStacksID updates stack by id

Stacks are template instances - a running cloud infrastructure created based on a template. Stacks are always launched on behalf of a cloud user account. Stacks support a wide range of resources, allowing you to build a highly available, reliable, and scalable infrastructure for your application needs.
*/
func (a *Client) PutStacksID(params *PutStacksIDParams) error {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewPutStacksIDParams()
	}

	_, err := a.transport.Submit(&client.Operation{
		ID:                 "PutStacksID",
		Method:             "PUT",
		PathPattern:        "/stacks/{id}",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"http", "https"},
		Params:             params,
		Reader:             &PutStacksIDReader{formats: a.formats},
	})
	if err != nil {
		return err
	}
	return nil
}

/*
DeleteInstance deletes instance resource from stack

Stacks are template instances - a running cloud infrastructure created based on a template. Stacks are always launched on behalf of a cloud user account. Stacks support a wide range of resources, allowing you to build a highly available, reliable, and scalable infrastructure for your application needs.
*/
func (a *Client) DeleteInstance(params *DeleteInstanceParams) error {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewDeleteInstanceParams()
	}

	_, err := a.transport.Submit(&client.Operation{
		ID:                 "deleteInstance",
		Method:             "DELETE",
		PathPattern:        "/stacks/{stackId}/{instanceId}",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"http", "https"},
		Params:             params,
		Reader:             &DeleteInstanceReader{formats: a.formats},
	})
	if err != nil {
		return err
	}
	return nil
}

/*
GetAll retrieves all stacks

Stacks are template instances - a running cloud infrastructure created based on a template. Stacks are always launched on behalf of a cloud user account. Stacks support a wide range of resources, allowing you to build a highly available, reliable, and scalable infrastructure for your application needs.
*/
func (a *Client) GetAll(params *GetAllParams) (*GetAllOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewGetAllParams()
	}

	result, err := a.transport.Submit(&client.Operation{
		ID:                 "getAll",
		Method:             "GET",
		PathPattern:        "/stacks/all",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"http", "https"},
		Params:             params,
		Reader:             &GetAllReader{formats: a.formats},
	})
	if err != nil {
		return nil, err
	}
	return result.(*GetAllOK), nil
}

/*
GetCertificate retrieves the TLS certificate used by the gateway

Stacks are template instances - a running cloud infrastructure created based on a template. Stacks are always launched on behalf of a cloud user account. Stacks support a wide range of resources, allowing you to build a highly available, reliable, and scalable infrastructure for your application needs.
*/
func (a *Client) GetCertificate(params *GetCertificateParams) (*GetCertificateOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewGetCertificateParams()
	}

	result, err := a.transport.Submit(&client.Operation{
		ID:                 "getCertificate",
		Method:             "GET",
		PathPattern:        "/stacks/{id}/certificate",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"http", "https"},
		Params:             params,
		Reader:             &GetCertificateReader{formats: a.formats},
	})
	if err != nil {
		return nil, err
	}
	return result.(*GetCertificateOK), nil
}

/*
GetStackForAmbari retrieves stack by ambari address

Stacks are template instances - a running cloud infrastructure created based on a template. Stacks are always launched on behalf of a cloud user account. Stacks support a wide range of resources, allowing you to build a highly available, reliable, and scalable infrastructure for your application needs.
*/
func (a *Client) GetStackForAmbari(params *GetStackForAmbariParams) (*GetStackForAmbariOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewGetStackForAmbariParams()
	}

	result, err := a.transport.Submit(&client.Operation{
		ID:                 "getStackForAmbari",
		Method:             "POST",
		PathPattern:        "/stacks/ambari",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"http", "https"},
		Params:             params,
		Reader:             &GetStackForAmbariReader{formats: a.formats},
	})
	if err != nil {
		return nil, err
	}
	return result.(*GetStackForAmbariOK), nil
}

/*
Status retrieves stack status by stack id

Stacks are template instances - a running cloud infrastructure created based on a template. Stacks are always launched on behalf of a cloud user account. Stacks support a wide range of resources, allowing you to build a highly available, reliable, and scalable infrastructure for your application needs.
*/
func (a *Client) Status(params *StatusParams) (*StatusOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewStatusParams()
	}

	result, err := a.transport.Submit(&client.Operation{
		ID:                 "status",
		Method:             "GET",
		PathPattern:        "/stacks/{id}/status",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"http", "https"},
		Params:             params,
		Reader:             &StatusReader{formats: a.formats},
	})
	if err != nil {
		return nil, err
	}
	return result.(*StatusOK), nil
}

/*
Variants retrieves available platform variants

Stacks are template instances - a running cloud infrastructure created based on a template. Stacks are always launched on behalf of a cloud user account. Stacks support a wide range of resources, allowing you to build a highly available, reliable, and scalable infrastructure for your application needs.
*/
func (a *Client) Variants(params *VariantsParams) (*VariantsOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewVariantsParams()
	}

	result, err := a.transport.Submit(&client.Operation{
		ID:                 "variants",
		Method:             "GET",
		PathPattern:        "/stacks/platformVariants",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"http", "https"},
		Params:             params,
		Reader:             &VariantsReader{formats: a.formats},
	})
	if err != nil {
		return nil, err
	}
	return result.(*VariantsOK), nil
}

// SetTransport changes the transport on the client
func (a *Client) SetTransport(transport client.Transport) {
	a.transport = transport
}
