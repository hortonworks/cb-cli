// Code generated by go-swagger; DO NOT EDIT.

package v1imagecatalogs

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"
	"time"

	"golang.org/x/net/context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"

	strfmt "github.com/go-openapi/strfmt"
)

// NewGetImagesByStackNameAndCustomImageCatalogParams creates a new GetImagesByStackNameAndCustomImageCatalogParams object
// with the default values initialized.
func NewGetImagesByStackNameAndCustomImageCatalogParams() *GetImagesByStackNameAndCustomImageCatalogParams {
	var ()
	return &GetImagesByStackNameAndCustomImageCatalogParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewGetImagesByStackNameAndCustomImageCatalogParamsWithTimeout creates a new GetImagesByStackNameAndCustomImageCatalogParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewGetImagesByStackNameAndCustomImageCatalogParamsWithTimeout(timeout time.Duration) *GetImagesByStackNameAndCustomImageCatalogParams {
	var ()
	return &GetImagesByStackNameAndCustomImageCatalogParams{

		timeout: timeout,
	}
}

// NewGetImagesByStackNameAndCustomImageCatalogParamsWithContext creates a new GetImagesByStackNameAndCustomImageCatalogParams object
// with the default values initialized, and the ability to set a context for a request
func NewGetImagesByStackNameAndCustomImageCatalogParamsWithContext(ctx context.Context) *GetImagesByStackNameAndCustomImageCatalogParams {
	var ()
	return &GetImagesByStackNameAndCustomImageCatalogParams{

		Context: ctx,
	}
}

// NewGetImagesByStackNameAndCustomImageCatalogParamsWithHTTPClient creates a new GetImagesByStackNameAndCustomImageCatalogParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewGetImagesByStackNameAndCustomImageCatalogParamsWithHTTPClient(client *http.Client) *GetImagesByStackNameAndCustomImageCatalogParams {
	var ()
	return &GetImagesByStackNameAndCustomImageCatalogParams{
		HTTPClient: client,
	}
}

/*GetImagesByStackNameAndCustomImageCatalogParams contains all the parameters to send to the API endpoint
for the get images by stack name and custom image catalog operation typically these are written to a http.Request
*/
type GetImagesByStackNameAndCustomImageCatalogParams struct {

	/*Name*/
	Name string
	/*StackName*/
	StackName string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the get images by stack name and custom image catalog params
func (o *GetImagesByStackNameAndCustomImageCatalogParams) WithTimeout(timeout time.Duration) *GetImagesByStackNameAndCustomImageCatalogParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the get images by stack name and custom image catalog params
func (o *GetImagesByStackNameAndCustomImageCatalogParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the get images by stack name and custom image catalog params
func (o *GetImagesByStackNameAndCustomImageCatalogParams) WithContext(ctx context.Context) *GetImagesByStackNameAndCustomImageCatalogParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the get images by stack name and custom image catalog params
func (o *GetImagesByStackNameAndCustomImageCatalogParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the get images by stack name and custom image catalog params
func (o *GetImagesByStackNameAndCustomImageCatalogParams) WithHTTPClient(client *http.Client) *GetImagesByStackNameAndCustomImageCatalogParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the get images by stack name and custom image catalog params
func (o *GetImagesByStackNameAndCustomImageCatalogParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithName adds the name to the get images by stack name and custom image catalog params
func (o *GetImagesByStackNameAndCustomImageCatalogParams) WithName(name string) *GetImagesByStackNameAndCustomImageCatalogParams {
	o.SetName(name)
	return o
}

// SetName adds the name to the get images by stack name and custom image catalog params
func (o *GetImagesByStackNameAndCustomImageCatalogParams) SetName(name string) {
	o.Name = name
}

// WithStackName adds the stackName to the get images by stack name and custom image catalog params
func (o *GetImagesByStackNameAndCustomImageCatalogParams) WithStackName(stackName string) *GetImagesByStackNameAndCustomImageCatalogParams {
	o.SetStackName(stackName)
	return o
}

// SetStackName adds the stackName to the get images by stack name and custom image catalog params
func (o *GetImagesByStackNameAndCustomImageCatalogParams) SetStackName(stackName string) {
	o.StackName = stackName
}

// WriteToRequest writes these params to a swagger request
func (o *GetImagesByStackNameAndCustomImageCatalogParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// path param name
	if err := r.SetPathParam("name", o.Name); err != nil {
		return err
	}

	// path param stackName
	if err := r.SetPathParam("stackName", o.StackName); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
