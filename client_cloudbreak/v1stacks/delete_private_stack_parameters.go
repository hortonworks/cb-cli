// Code generated by go-swagger; DO NOT EDIT.

package v1stacks

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"
	"time"

	"golang.org/x/net/context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/swag"

	strfmt "github.com/go-openapi/strfmt"
)

// NewDeletePrivateStackParams creates a new DeletePrivateStackParams object
// with the default values initialized.
func NewDeletePrivateStackParams() *DeletePrivateStackParams {
	var (
		deleteDependenciesDefault = bool(false)
		forcedDefault             = bool(false)
	)
	return &DeletePrivateStackParams{
		DeleteDependencies: &deleteDependenciesDefault,
		Forced:             &forcedDefault,

		timeout: cr.DefaultTimeout,
	}
}

// NewDeletePrivateStackParamsWithTimeout creates a new DeletePrivateStackParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewDeletePrivateStackParamsWithTimeout(timeout time.Duration) *DeletePrivateStackParams {
	var (
		deleteDependenciesDefault = bool(false)
		forcedDefault             = bool(false)
	)
	return &DeletePrivateStackParams{
		DeleteDependencies: &deleteDependenciesDefault,
		Forced:             &forcedDefault,

		timeout: timeout,
	}
}

// NewDeletePrivateStackParamsWithContext creates a new DeletePrivateStackParams object
// with the default values initialized, and the ability to set a context for a request
func NewDeletePrivateStackParamsWithContext(ctx context.Context) *DeletePrivateStackParams {
	var (
		deleteDependenciesDefault = bool(false)
		forcedDefault             = bool(false)
	)
	return &DeletePrivateStackParams{
		DeleteDependencies: &deleteDependenciesDefault,
		Forced:             &forcedDefault,

		Context: ctx,
	}
}

// NewDeletePrivateStackParamsWithHTTPClient creates a new DeletePrivateStackParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewDeletePrivateStackParamsWithHTTPClient(client *http.Client) *DeletePrivateStackParams {
	var (
		deleteDependenciesDefault = bool(false)
		forcedDefault             = bool(false)
	)
	return &DeletePrivateStackParams{
		DeleteDependencies: &deleteDependenciesDefault,
		Forced:             &forcedDefault,
		HTTPClient:         client,
	}
}

/*DeletePrivateStackParams contains all the parameters to send to the API endpoint
for the delete private stack operation typically these are written to a http.Request
*/
type DeletePrivateStackParams struct {

	/*DeleteDependencies*/
	DeleteDependencies *bool
	/*Forced*/
	Forced *bool
	/*Name*/
	Name string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the delete private stack params
func (o *DeletePrivateStackParams) WithTimeout(timeout time.Duration) *DeletePrivateStackParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the delete private stack params
func (o *DeletePrivateStackParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the delete private stack params
func (o *DeletePrivateStackParams) WithContext(ctx context.Context) *DeletePrivateStackParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the delete private stack params
func (o *DeletePrivateStackParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the delete private stack params
func (o *DeletePrivateStackParams) WithHTTPClient(client *http.Client) *DeletePrivateStackParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the delete private stack params
func (o *DeletePrivateStackParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithDeleteDependencies adds the deleteDependencies to the delete private stack params
func (o *DeletePrivateStackParams) WithDeleteDependencies(deleteDependencies *bool) *DeletePrivateStackParams {
	o.SetDeleteDependencies(deleteDependencies)
	return o
}

// SetDeleteDependencies adds the deleteDependencies to the delete private stack params
func (o *DeletePrivateStackParams) SetDeleteDependencies(deleteDependencies *bool) {
	o.DeleteDependencies = deleteDependencies
}

// WithForced adds the forced to the delete private stack params
func (o *DeletePrivateStackParams) WithForced(forced *bool) *DeletePrivateStackParams {
	o.SetForced(forced)
	return o
}

// SetForced adds the forced to the delete private stack params
func (o *DeletePrivateStackParams) SetForced(forced *bool) {
	o.Forced = forced
}

// WithName adds the name to the delete private stack params
func (o *DeletePrivateStackParams) WithName(name string) *DeletePrivateStackParams {
	o.SetName(name)
	return o
}

// SetName adds the name to the delete private stack params
func (o *DeletePrivateStackParams) SetName(name string) {
	o.Name = name
}

// WriteToRequest writes these params to a swagger request
func (o *DeletePrivateStackParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.DeleteDependencies != nil {

		// query param deleteDependencies
		var qrDeleteDependencies bool
		if o.DeleteDependencies != nil {
			qrDeleteDependencies = *o.DeleteDependencies
		}
		qDeleteDependencies := swag.FormatBool(qrDeleteDependencies)
		if qDeleteDependencies != "" {
			if err := r.SetQueryParam("deleteDependencies", qDeleteDependencies); err != nil {
				return err
			}
		}

	}

	if o.Forced != nil {

		// query param forced
		var qrForced bool
		if o.Forced != nil {
			qrForced = *o.Forced
		}
		qForced := swag.FormatBool(qrForced)
		if qForced != "" {
			if err := r.SetQueryParam("forced", qForced); err != nil {
				return err
			}
		}

	}

	// path param name
	if err := r.SetPathParam("name", o.Name); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
