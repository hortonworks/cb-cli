// Code generated by go-swagger; DO NOT EDIT.

package v3_workspace_id_imagecatalogs

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"
	"time"

	"golang.org/x/net/context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/swag"

	strfmt "github.com/go-openapi/strfmt"
)

// NewGetImagesByStackNameAndDefaultImageCatalogInWorkspaceParams creates a new GetImagesByStackNameAndDefaultImageCatalogInWorkspaceParams object
// with the default values initialized.
func NewGetImagesByStackNameAndDefaultImageCatalogInWorkspaceParams() *GetImagesByStackNameAndDefaultImageCatalogInWorkspaceParams {
	var ()
	return &GetImagesByStackNameAndDefaultImageCatalogInWorkspaceParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewGetImagesByStackNameAndDefaultImageCatalogInWorkspaceParamsWithTimeout creates a new GetImagesByStackNameAndDefaultImageCatalogInWorkspaceParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewGetImagesByStackNameAndDefaultImageCatalogInWorkspaceParamsWithTimeout(timeout time.Duration) *GetImagesByStackNameAndDefaultImageCatalogInWorkspaceParams {
	var ()
	return &GetImagesByStackNameAndDefaultImageCatalogInWorkspaceParams{

		timeout: timeout,
	}
}

// NewGetImagesByStackNameAndDefaultImageCatalogInWorkspaceParamsWithContext creates a new GetImagesByStackNameAndDefaultImageCatalogInWorkspaceParams object
// with the default values initialized, and the ability to set a context for a request
func NewGetImagesByStackNameAndDefaultImageCatalogInWorkspaceParamsWithContext(ctx context.Context) *GetImagesByStackNameAndDefaultImageCatalogInWorkspaceParams {
	var ()
	return &GetImagesByStackNameAndDefaultImageCatalogInWorkspaceParams{

		Context: ctx,
	}
}

// NewGetImagesByStackNameAndDefaultImageCatalogInWorkspaceParamsWithHTTPClient creates a new GetImagesByStackNameAndDefaultImageCatalogInWorkspaceParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewGetImagesByStackNameAndDefaultImageCatalogInWorkspaceParamsWithHTTPClient(client *http.Client) *GetImagesByStackNameAndDefaultImageCatalogInWorkspaceParams {
	var ()
	return &GetImagesByStackNameAndDefaultImageCatalogInWorkspaceParams{
		HTTPClient: client,
	}
}

/*GetImagesByStackNameAndDefaultImageCatalogInWorkspaceParams contains all the parameters to send to the API endpoint
for the get images by stack name and default image catalog in workspace operation typically these are written to a http.Request
*/
type GetImagesByStackNameAndDefaultImageCatalogInWorkspaceParams struct {

	/*StackName*/
	StackName string
	/*WorkspaceID*/
	WorkspaceID int64

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the get images by stack name and default image catalog in workspace params
func (o *GetImagesByStackNameAndDefaultImageCatalogInWorkspaceParams) WithTimeout(timeout time.Duration) *GetImagesByStackNameAndDefaultImageCatalogInWorkspaceParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the get images by stack name and default image catalog in workspace params
func (o *GetImagesByStackNameAndDefaultImageCatalogInWorkspaceParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the get images by stack name and default image catalog in workspace params
func (o *GetImagesByStackNameAndDefaultImageCatalogInWorkspaceParams) WithContext(ctx context.Context) *GetImagesByStackNameAndDefaultImageCatalogInWorkspaceParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the get images by stack name and default image catalog in workspace params
func (o *GetImagesByStackNameAndDefaultImageCatalogInWorkspaceParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the get images by stack name and default image catalog in workspace params
func (o *GetImagesByStackNameAndDefaultImageCatalogInWorkspaceParams) WithHTTPClient(client *http.Client) *GetImagesByStackNameAndDefaultImageCatalogInWorkspaceParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the get images by stack name and default image catalog in workspace params
func (o *GetImagesByStackNameAndDefaultImageCatalogInWorkspaceParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithStackName adds the stackName to the get images by stack name and default image catalog in workspace params
func (o *GetImagesByStackNameAndDefaultImageCatalogInWorkspaceParams) WithStackName(stackName string) *GetImagesByStackNameAndDefaultImageCatalogInWorkspaceParams {
	o.SetStackName(stackName)
	return o
}

// SetStackName adds the stackName to the get images by stack name and default image catalog in workspace params
func (o *GetImagesByStackNameAndDefaultImageCatalogInWorkspaceParams) SetStackName(stackName string) {
	o.StackName = stackName
}

// WithWorkspaceID adds the workspaceID to the get images by stack name and default image catalog in workspace params
func (o *GetImagesByStackNameAndDefaultImageCatalogInWorkspaceParams) WithWorkspaceID(workspaceID int64) *GetImagesByStackNameAndDefaultImageCatalogInWorkspaceParams {
	o.SetWorkspaceID(workspaceID)
	return o
}

// SetWorkspaceID adds the workspaceId to the get images by stack name and default image catalog in workspace params
func (o *GetImagesByStackNameAndDefaultImageCatalogInWorkspaceParams) SetWorkspaceID(workspaceID int64) {
	o.WorkspaceID = workspaceID
}

// WriteToRequest writes these params to a swagger request
func (o *GetImagesByStackNameAndDefaultImageCatalogInWorkspaceParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// path param stackName
	if err := r.SetPathParam("stackName", o.StackName); err != nil {
		return err
	}

	// path param workspaceId
	if err := r.SetPathParam("workspaceId", swag.FormatInt64(o.WorkspaceID)); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
