// Code generated by go-swagger; DO NOT EDIT.

package v3_organization_id_mpacks

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"
)

// New creates a new v3 organization id mpacks API client.
func New(transport runtime.ClientTransport, formats strfmt.Registry) *Client {
	return &Client{transport: transport, formats: formats}
}

/*
Client for v3 organization id mpacks API
*/
type Client struct {
	transport runtime.ClientTransport
	formats   strfmt.Registry
}

/*
CreateManagementPackInOrganization creates management pack in organization

An Apache Ambari Management Pack (Mpack) can bundle multiple service definitions, stack definitions, stack add-on service definitions, view definitions services so that releasing these artifacts don’t enforce an Apache Ambari release.
*/
func (a *Client) CreateManagementPackInOrganization(params *CreateManagementPackInOrganizationParams) (*CreateManagementPackInOrganizationOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewCreateManagementPackInOrganizationParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "createManagementPackInOrganization",
		Method:             "POST",
		PathPattern:        "/v3/{organizationId}/mpacks",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"http", "https"},
		Params:             params,
		Reader:             &CreateManagementPackInOrganizationReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	return result.(*CreateManagementPackInOrganizationOK), nil

}

/*
DeleteManagementPackInOrganization deletes management pack by name in organization

An Apache Ambari Management Pack (Mpack) can bundle multiple service definitions, stack definitions, stack add-on service definitions, view definitions services so that releasing these artifacts don’t enforce an Apache Ambari release.
*/
func (a *Client) DeleteManagementPackInOrganization(params *DeleteManagementPackInOrganizationParams) (*DeleteManagementPackInOrganizationOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewDeleteManagementPackInOrganizationParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "deleteManagementPackInOrganization",
		Method:             "DELETE",
		PathPattern:        "/v3/{organizationId}/mpacks/{name}",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"http", "https"},
		Params:             params,
		Reader:             &DeleteManagementPackInOrganizationReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	return result.(*DeleteManagementPackInOrganizationOK), nil

}

/*
GetManagementPackInOrganization gets management pack by name in organization

An Apache Ambari Management Pack (Mpack) can bundle multiple service definitions, stack definitions, stack add-on service definitions, view definitions services so that releasing these artifacts don’t enforce an Apache Ambari release.
*/
func (a *Client) GetManagementPackInOrganization(params *GetManagementPackInOrganizationParams) (*GetManagementPackInOrganizationOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewGetManagementPackInOrganizationParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "getManagementPackInOrganization",
		Method:             "GET",
		PathPattern:        "/v3/{organizationId}/mpacks/{name}",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"http", "https"},
		Params:             params,
		Reader:             &GetManagementPackInOrganizationReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	return result.(*GetManagementPackInOrganizationOK), nil

}

/*
ListManagementPacksByOrganization lists management packs for the given organization

An Apache Ambari Management Pack (Mpack) can bundle multiple service definitions, stack definitions, stack add-on service definitions, view definitions services so that releasing these artifacts don’t enforce an Apache Ambari release.
*/
func (a *Client) ListManagementPacksByOrganization(params *ListManagementPacksByOrganizationParams) (*ListManagementPacksByOrganizationOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewListManagementPacksByOrganizationParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "listManagementPacksByOrganization",
		Method:             "GET",
		PathPattern:        "/v3/{organizationId}/mpacks",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"http", "https"},
		Params:             params,
		Reader:             &ListManagementPacksByOrganizationReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	return result.(*ListManagementPacksByOrganizationOK), nil

}

// SetTransport changes the transport on the client
func (a *Client) SetTransport(transport runtime.ClientTransport) {
	a.transport = transport
}
