package util

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"github.com/go-swagger/go-swagger/client"

	strfmt "github.com/go-swagger/go-swagger/strfmt"
)

// New creates a new util API client.
func New(transport client.Transport, formats strfmt.Registry) *Client {
	return &Client{transport: transport, formats: formats}
}

/*
Client for util API
*/
type Client struct {
	transport client.Transport
	formats   strfmt.Registry
}

/*
TestAmbariDatabase tests a database connection parameters
*/
func (a *Client) TestAmbariDatabase(params *TestAmbariDatabaseParams) (*TestAmbariDatabaseOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewTestAmbariDatabaseParams()
	}

	result, err := a.transport.Submit(&client.Operation{
		ID:                 "testAmbariDatabase",
		Method:             "POST",
		PathPattern:        "/util/ambari-database",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"http", "https"},
		Params:             params,
		Reader:             &TestAmbariDatabaseReader{formats: a.formats},
	})
	if err != nil {
		return nil, err
	}
	return result.(*TestAmbariDatabaseOK), nil
}

/*
TestRdsConnection tests a r d s connection
*/
func (a *Client) TestRdsConnection(params *TestRdsConnectionParams) (*TestRdsConnectionOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewTestRdsConnectionParams()
	}

	result, err := a.transport.Submit(&client.Operation{
		ID:                 "testRdsConnection",
		Method:             "POST",
		PathPattern:        "/util/rds",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"http", "https"},
		Params:             params,
		Reader:             &TestRdsConnectionReader{formats: a.formats},
	})
	if err != nil {
		return nil, err
	}
	return result.(*TestRdsConnectionOK), nil
}

// SetTransport changes the transport on the client
func (a *Client) SetTransport(transport client.Transport) {
	a.transport = transport
}
