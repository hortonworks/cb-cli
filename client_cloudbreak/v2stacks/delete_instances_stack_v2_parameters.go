// Code generated by go-swagger; DO NOT EDIT.

package v2stacks

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"
	"time"

	"golang.org/x/net/context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/swag"

	strfmt "github.com/go-openapi/strfmt"
)

// NewDeleteInstancesStackV2Params creates a new DeleteInstancesStackV2Params object
// with the default values initialized.
func NewDeleteInstancesStackV2Params() *DeleteInstancesStackV2Params {
	var ()
	return &DeleteInstancesStackV2Params{

		timeout: cr.DefaultTimeout,
	}
}

// NewDeleteInstancesStackV2ParamsWithTimeout creates a new DeleteInstancesStackV2Params object
// with the default values initialized, and the ability to set a timeout on a request
func NewDeleteInstancesStackV2ParamsWithTimeout(timeout time.Duration) *DeleteInstancesStackV2Params {
	var ()
	return &DeleteInstancesStackV2Params{

		timeout: timeout,
	}
}

// NewDeleteInstancesStackV2ParamsWithContext creates a new DeleteInstancesStackV2Params object
// with the default values initialized, and the ability to set a context for a request
func NewDeleteInstancesStackV2ParamsWithContext(ctx context.Context) *DeleteInstancesStackV2Params {
	var ()
	return &DeleteInstancesStackV2Params{

		Context: ctx,
	}
}

// NewDeleteInstancesStackV2ParamsWithHTTPClient creates a new DeleteInstancesStackV2Params object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewDeleteInstancesStackV2ParamsWithHTTPClient(client *http.Client) *DeleteInstancesStackV2Params {
	var ()
	return &DeleteInstancesStackV2Params{
		HTTPClient: client,
	}
}

/*DeleteInstancesStackV2Params contains all the parameters to send to the API endpoint
for the delete instances stack v2 operation typically these are written to a http.Request
*/
type DeleteInstancesStackV2Params struct {

	/*InstanceIds*/
	InstanceIds []string
	/*StackID*/
	StackID int64

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the delete instances stack v2 params
func (o *DeleteInstancesStackV2Params) WithTimeout(timeout time.Duration) *DeleteInstancesStackV2Params {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the delete instances stack v2 params
func (o *DeleteInstancesStackV2Params) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the delete instances stack v2 params
func (o *DeleteInstancesStackV2Params) WithContext(ctx context.Context) *DeleteInstancesStackV2Params {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the delete instances stack v2 params
func (o *DeleteInstancesStackV2Params) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the delete instances stack v2 params
func (o *DeleteInstancesStackV2Params) WithHTTPClient(client *http.Client) *DeleteInstancesStackV2Params {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the delete instances stack v2 params
func (o *DeleteInstancesStackV2Params) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithInstanceIds adds the instanceIds to the delete instances stack v2 params
func (o *DeleteInstancesStackV2Params) WithInstanceIds(instanceIds []string) *DeleteInstancesStackV2Params {
	o.SetInstanceIds(instanceIds)
	return o
}

// SetInstanceIds adds the instanceIds to the delete instances stack v2 params
func (o *DeleteInstancesStackV2Params) SetInstanceIds(instanceIds []string) {
	o.InstanceIds = instanceIds
}

// WithStackID adds the stackID to the delete instances stack v2 params
func (o *DeleteInstancesStackV2Params) WithStackID(stackID int64) *DeleteInstancesStackV2Params {
	o.SetStackID(stackID)
	return o
}

// SetStackID adds the stackId to the delete instances stack v2 params
func (o *DeleteInstancesStackV2Params) SetStackID(stackID int64) {
	o.StackID = stackID
}

// WriteToRequest writes these params to a swagger request
func (o *DeleteInstancesStackV2Params) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	valuesInstanceIds := o.InstanceIds

	joinedInstanceIds := swag.JoinByFormat(valuesInstanceIds, "multi")
	// query array param instanceIds
	if err := r.SetQueryParam("instanceIds", joinedInstanceIds...); err != nil {
		return err
	}

	// path param stackId
	if err := r.SetPathParam("stackId", swag.FormatInt64(o.StackID)); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
