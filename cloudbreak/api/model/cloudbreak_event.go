// Code generated by go-swagger; DO NOT EDIT.

package model

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// CloudbreakEvent cloudbreak event
// swagger:model CloudbreakEvent

type CloudbreakEvent struct {

	// account id of the resource owner that is provided by OAuth provider
	Account string `json:"account,omitempty"`

	// availability zone of the stack
	AvailabilityZone string `json:"availabilityZone,omitempty"`

	// blueprint id for the cluster
	BlueprintID int64 `json:"blueprintId,omitempty"`

	// gathered from blueprintName field from the blueprint JSON
	BlueprintName string `json:"blueprintName,omitempty"`

	// type of cloud provider
	Cloud string `json:"cloud,omitempty"`

	// id of the cluster
	ClusterID int64 `json:"clusterId,omitempty"`

	// name of the cluster
	ClusterName string `json:"clusterName,omitempty"`

	// status of the cluster
	ClusterStatus string `json:"clusterStatus,omitempty"`

	// message of the event
	EventMessage string `json:"eventMessage,omitempty"`

	// timestamp of the event
	EventTimestamp int64 `json:"eventTimestamp,omitempty"`

	// type of the event
	EventType string `json:"eventType,omitempty"`

	// name of the instance group
	InstanceGroup string `json:"instanceGroup,omitempty"`

	// number of nodes
	NodeCount int32 `json:"nodeCount,omitempty"`

	// id of the resource owner that is provided by OAuth provider
	Owner string `json:"owner,omitempty"`

	// region of the stack
	Region string `json:"region,omitempty"`

	// id of the stack
	StackID int64 `json:"stackId,omitempty"`

	// name of the stack
	StackName string `json:"stackName,omitempty"`

	// status of the stack
	StackStatus string `json:"stackStatus,omitempty"`

	// User ID in the new authorization model
	UserIDV3 string `json:"userIdV3,omitempty"`

	// Workspace ID of the resource
	WorkspaceID int64 `json:"workspaceId,omitempty"`
}

/* polymorph CloudbreakEvent account false */

/* polymorph CloudbreakEvent availabilityZone false */

/* polymorph CloudbreakEvent blueprintId false */

/* polymorph CloudbreakEvent blueprintName false */

/* polymorph CloudbreakEvent cloud false */

/* polymorph CloudbreakEvent clusterId false */

/* polymorph CloudbreakEvent clusterName false */

/* polymorph CloudbreakEvent clusterStatus false */

/* polymorph CloudbreakEvent eventMessage false */

/* polymorph CloudbreakEvent eventTimestamp false */

/* polymorph CloudbreakEvent eventType false */

/* polymorph CloudbreakEvent instanceGroup false */

/* polymorph CloudbreakEvent nodeCount false */

/* polymorph CloudbreakEvent owner false */

/* polymorph CloudbreakEvent region false */

/* polymorph CloudbreakEvent stackId false */

/* polymorph CloudbreakEvent stackName false */

/* polymorph CloudbreakEvent stackStatus false */

/* polymorph CloudbreakEvent userIdV3 false */

/* polymorph CloudbreakEvent workspaceId false */

// Validate validates this cloudbreak event
func (m *CloudbreakEvent) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateClusterStatus(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := m.validateStackStatus(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

var cloudbreakEventTypeClusterStatusPropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["REQUESTED","CREATE_IN_PROGRESS","AVAILABLE","UPDATE_IN_PROGRESS","UPDATE_REQUESTED","UPDATE_FAILED","CREATE_FAILED","ENABLE_SECURITY_FAILED","PRE_DELETE_IN_PROGRESS","DELETE_IN_PROGRESS","DELETE_FAILED","DELETE_COMPLETED","STOPPED","STOP_REQUESTED","START_REQUESTED","STOP_IN_PROGRESS","START_IN_PROGRESS","START_FAILED","STOP_FAILED","WAIT_FOR_SYNC","MAINTENANCE_MODE_ENABLED"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		cloudbreakEventTypeClusterStatusPropEnum = append(cloudbreakEventTypeClusterStatusPropEnum, v)
	}
}

const (
	// CloudbreakEventClusterStatusREQUESTED captures enum value "REQUESTED"
	CloudbreakEventClusterStatusREQUESTED string = "REQUESTED"
	// CloudbreakEventClusterStatusCREATEINPROGRESS captures enum value "CREATE_IN_PROGRESS"
	CloudbreakEventClusterStatusCREATEINPROGRESS string = "CREATE_IN_PROGRESS"
	// CloudbreakEventClusterStatusAVAILABLE captures enum value "AVAILABLE"
	CloudbreakEventClusterStatusAVAILABLE string = "AVAILABLE"
	// CloudbreakEventClusterStatusUPDATEINPROGRESS captures enum value "UPDATE_IN_PROGRESS"
	CloudbreakEventClusterStatusUPDATEINPROGRESS string = "UPDATE_IN_PROGRESS"
	// CloudbreakEventClusterStatusUPDATEREQUESTED captures enum value "UPDATE_REQUESTED"
	CloudbreakEventClusterStatusUPDATEREQUESTED string = "UPDATE_REQUESTED"
	// CloudbreakEventClusterStatusUPDATEFAILED captures enum value "UPDATE_FAILED"
	CloudbreakEventClusterStatusUPDATEFAILED string = "UPDATE_FAILED"
	// CloudbreakEventClusterStatusCREATEFAILED captures enum value "CREATE_FAILED"
	CloudbreakEventClusterStatusCREATEFAILED string = "CREATE_FAILED"
	// CloudbreakEventClusterStatusENABLESECURITYFAILED captures enum value "ENABLE_SECURITY_FAILED"
	CloudbreakEventClusterStatusENABLESECURITYFAILED string = "ENABLE_SECURITY_FAILED"
	// CloudbreakEventClusterStatusPREDELETEINPROGRESS captures enum value "PRE_DELETE_IN_PROGRESS"
	CloudbreakEventClusterStatusPREDELETEINPROGRESS string = "PRE_DELETE_IN_PROGRESS"
	// CloudbreakEventClusterStatusDELETEINPROGRESS captures enum value "DELETE_IN_PROGRESS"
	CloudbreakEventClusterStatusDELETEINPROGRESS string = "DELETE_IN_PROGRESS"
	// CloudbreakEventClusterStatusDELETEFAILED captures enum value "DELETE_FAILED"
	CloudbreakEventClusterStatusDELETEFAILED string = "DELETE_FAILED"
	// CloudbreakEventClusterStatusDELETECOMPLETED captures enum value "DELETE_COMPLETED"
	CloudbreakEventClusterStatusDELETECOMPLETED string = "DELETE_COMPLETED"
	// CloudbreakEventClusterStatusSTOPPED captures enum value "STOPPED"
	CloudbreakEventClusterStatusSTOPPED string = "STOPPED"
	// CloudbreakEventClusterStatusSTOPREQUESTED captures enum value "STOP_REQUESTED"
	CloudbreakEventClusterStatusSTOPREQUESTED string = "STOP_REQUESTED"
	// CloudbreakEventClusterStatusSTARTREQUESTED captures enum value "START_REQUESTED"
	CloudbreakEventClusterStatusSTARTREQUESTED string = "START_REQUESTED"
	// CloudbreakEventClusterStatusSTOPINPROGRESS captures enum value "STOP_IN_PROGRESS"
	CloudbreakEventClusterStatusSTOPINPROGRESS string = "STOP_IN_PROGRESS"
	// CloudbreakEventClusterStatusSTARTINPROGRESS captures enum value "START_IN_PROGRESS"
	CloudbreakEventClusterStatusSTARTINPROGRESS string = "START_IN_PROGRESS"
	// CloudbreakEventClusterStatusSTARTFAILED captures enum value "START_FAILED"
	CloudbreakEventClusterStatusSTARTFAILED string = "START_FAILED"
	// CloudbreakEventClusterStatusSTOPFAILED captures enum value "STOP_FAILED"
	CloudbreakEventClusterStatusSTOPFAILED string = "STOP_FAILED"
	// CloudbreakEventClusterStatusWAITFORSYNC captures enum value "WAIT_FOR_SYNC"
	CloudbreakEventClusterStatusWAITFORSYNC string = "WAIT_FOR_SYNC"
	// CloudbreakEventClusterStatusMAINTENANCEMODEENABLED captures enum value "MAINTENANCE_MODE_ENABLED"
	CloudbreakEventClusterStatusMAINTENANCEMODEENABLED string = "MAINTENANCE_MODE_ENABLED"
)

// prop value enum
func (m *CloudbreakEvent) validateClusterStatusEnum(path, location string, value string) error {
	if err := validate.Enum(path, location, value, cloudbreakEventTypeClusterStatusPropEnum); err != nil {
		return err
	}
	return nil
}

func (m *CloudbreakEvent) validateClusterStatus(formats strfmt.Registry) error {

	if swag.IsZero(m.ClusterStatus) { // not required
		return nil
	}

	// value enum
	if err := m.validateClusterStatusEnum("clusterStatus", "body", m.ClusterStatus); err != nil {
		return err
	}

	return nil
}

var cloudbreakEventTypeStackStatusPropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["REQUESTED","CREATE_IN_PROGRESS","AVAILABLE","UPDATE_IN_PROGRESS","UPDATE_REQUESTED","UPDATE_FAILED","CREATE_FAILED","ENABLE_SECURITY_FAILED","PRE_DELETE_IN_PROGRESS","DELETE_IN_PROGRESS","DELETE_FAILED","DELETE_COMPLETED","STOPPED","STOP_REQUESTED","START_REQUESTED","STOP_IN_PROGRESS","START_IN_PROGRESS","START_FAILED","STOP_FAILED","WAIT_FOR_SYNC","MAINTENANCE_MODE_ENABLED"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		cloudbreakEventTypeStackStatusPropEnum = append(cloudbreakEventTypeStackStatusPropEnum, v)
	}
}

const (
	// CloudbreakEventStackStatusREQUESTED captures enum value "REQUESTED"
	CloudbreakEventStackStatusREQUESTED string = "REQUESTED"
	// CloudbreakEventStackStatusCREATEINPROGRESS captures enum value "CREATE_IN_PROGRESS"
	CloudbreakEventStackStatusCREATEINPROGRESS string = "CREATE_IN_PROGRESS"
	// CloudbreakEventStackStatusAVAILABLE captures enum value "AVAILABLE"
	CloudbreakEventStackStatusAVAILABLE string = "AVAILABLE"
	// CloudbreakEventStackStatusUPDATEINPROGRESS captures enum value "UPDATE_IN_PROGRESS"
	CloudbreakEventStackStatusUPDATEINPROGRESS string = "UPDATE_IN_PROGRESS"
	// CloudbreakEventStackStatusUPDATEREQUESTED captures enum value "UPDATE_REQUESTED"
	CloudbreakEventStackStatusUPDATEREQUESTED string = "UPDATE_REQUESTED"
	// CloudbreakEventStackStatusUPDATEFAILED captures enum value "UPDATE_FAILED"
	CloudbreakEventStackStatusUPDATEFAILED string = "UPDATE_FAILED"
	// CloudbreakEventStackStatusCREATEFAILED captures enum value "CREATE_FAILED"
	CloudbreakEventStackStatusCREATEFAILED string = "CREATE_FAILED"
	// CloudbreakEventStackStatusENABLESECURITYFAILED captures enum value "ENABLE_SECURITY_FAILED"
	CloudbreakEventStackStatusENABLESECURITYFAILED string = "ENABLE_SECURITY_FAILED"
	// CloudbreakEventStackStatusPREDELETEINPROGRESS captures enum value "PRE_DELETE_IN_PROGRESS"
	CloudbreakEventStackStatusPREDELETEINPROGRESS string = "PRE_DELETE_IN_PROGRESS"
	// CloudbreakEventStackStatusDELETEINPROGRESS captures enum value "DELETE_IN_PROGRESS"
	CloudbreakEventStackStatusDELETEINPROGRESS string = "DELETE_IN_PROGRESS"
	// CloudbreakEventStackStatusDELETEFAILED captures enum value "DELETE_FAILED"
	CloudbreakEventStackStatusDELETEFAILED string = "DELETE_FAILED"
	// CloudbreakEventStackStatusDELETECOMPLETED captures enum value "DELETE_COMPLETED"
	CloudbreakEventStackStatusDELETECOMPLETED string = "DELETE_COMPLETED"
	// CloudbreakEventStackStatusSTOPPED captures enum value "STOPPED"
	CloudbreakEventStackStatusSTOPPED string = "STOPPED"
	// CloudbreakEventStackStatusSTOPREQUESTED captures enum value "STOP_REQUESTED"
	CloudbreakEventStackStatusSTOPREQUESTED string = "STOP_REQUESTED"
	// CloudbreakEventStackStatusSTARTREQUESTED captures enum value "START_REQUESTED"
	CloudbreakEventStackStatusSTARTREQUESTED string = "START_REQUESTED"
	// CloudbreakEventStackStatusSTOPINPROGRESS captures enum value "STOP_IN_PROGRESS"
	CloudbreakEventStackStatusSTOPINPROGRESS string = "STOP_IN_PROGRESS"
	// CloudbreakEventStackStatusSTARTINPROGRESS captures enum value "START_IN_PROGRESS"
	CloudbreakEventStackStatusSTARTINPROGRESS string = "START_IN_PROGRESS"
	// CloudbreakEventStackStatusSTARTFAILED captures enum value "START_FAILED"
	CloudbreakEventStackStatusSTARTFAILED string = "START_FAILED"
	// CloudbreakEventStackStatusSTOPFAILED captures enum value "STOP_FAILED"
	CloudbreakEventStackStatusSTOPFAILED string = "STOP_FAILED"
	// CloudbreakEventStackStatusWAITFORSYNC captures enum value "WAIT_FOR_SYNC"
	CloudbreakEventStackStatusWAITFORSYNC string = "WAIT_FOR_SYNC"
	// CloudbreakEventStackStatusMAINTENANCEMODEENABLED captures enum value "MAINTENANCE_MODE_ENABLED"
	CloudbreakEventStackStatusMAINTENANCEMODEENABLED string = "MAINTENANCE_MODE_ENABLED"
)

// prop value enum
func (m *CloudbreakEvent) validateStackStatusEnum(path, location string, value string) error {
	if err := validate.Enum(path, location, value, cloudbreakEventTypeStackStatusPropEnum); err != nil {
		return err
	}
	return nil
}

func (m *CloudbreakEvent) validateStackStatus(formats strfmt.Registry) error {

	if swag.IsZero(m.StackStatus) { // not required
		return nil
	}

	// value enum
	if err := m.validateStackStatusEnum("stackStatus", "body", m.StackStatus); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *CloudbreakEvent) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *CloudbreakEvent) UnmarshalBinary(b []byte) error {
	var res CloudbreakEvent
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
