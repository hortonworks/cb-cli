// Code generated by go-swagger; DO NOT EDIT.

package model

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// KerberosResponse kerberos response
// swagger:model KerberosResponse

type KerberosResponse struct {

	// kerberos admin user
	// Max Length: 15
	// Min Length: 5
	Admin string `json:"admin,omitempty"`

	// kerberos admin server URL
	AdminURL string `json:"adminUrl,omitempty"`

	// container dn
	ContainerDn string `json:"containerDn,omitempty"`

	// descriptor
	Descriptor string `json:"descriptor,omitempty"`

	// krb5 conf
	Krb5Conf string `json:"krb5Conf,omitempty"`

	// ldap Url
	LdapURL string `json:"ldapUrl,omitempty"`

	// realm
	Realm string `json:"realm,omitempty"`

	// tcp allowed
	TCPAllowed *bool `json:"tcpAllowed,omitempty"`

	// type
	// Required: true
	Type *string `json:"type"`

	// kerberos KDC server URL
	URL string `json:"url,omitempty"`
}

/* polymorph KerberosResponse admin false */

/* polymorph KerberosResponse adminUrl false */

/* polymorph KerberosResponse containerDn false */

/* polymorph KerberosResponse descriptor false */

/* polymorph KerberosResponse krb5Conf false */

/* polymorph KerberosResponse ldapUrl false */

/* polymorph KerberosResponse realm false */

/* polymorph KerberosResponse tcpAllowed false */

/* polymorph KerberosResponse type false */

/* polymorph KerberosResponse url false */

// Validate validates this kerberos response
func (m *KerberosResponse) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateAdmin(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := m.validateType(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *KerberosResponse) validateAdmin(formats strfmt.Registry) error {

	if swag.IsZero(m.Admin) { // not required
		return nil
	}

	if err := validate.MinLength("admin", "body", string(m.Admin), 5); err != nil {
		return err
	}

	if err := validate.MaxLength("admin", "body", string(m.Admin), 15); err != nil {
		return err
	}

	return nil
}

var kerberosResponseTypeTypePropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["CB_MANAGED","EXISTING_AD","EXISTING_MIT","CUSTOM"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		kerberosResponseTypeTypePropEnum = append(kerberosResponseTypeTypePropEnum, v)
	}
}

const (
	// KerberosResponseTypeCBMANAGED captures enum value "CB_MANAGED"
	KerberosResponseTypeCBMANAGED string = "CB_MANAGED"
	// KerberosResponseTypeEXISTINGAD captures enum value "EXISTING_AD"
	KerberosResponseTypeEXISTINGAD string = "EXISTING_AD"
	// KerberosResponseTypeEXISTINGMIT captures enum value "EXISTING_MIT"
	KerberosResponseTypeEXISTINGMIT string = "EXISTING_MIT"
	// KerberosResponseTypeCUSTOM captures enum value "CUSTOM"
	KerberosResponseTypeCUSTOM string = "CUSTOM"
)

// prop value enum
func (m *KerberosResponse) validateTypeEnum(path, location string, value string) error {
	if err := validate.Enum(path, location, value, kerberosResponseTypeTypePropEnum); err != nil {
		return err
	}
	return nil
}

func (m *KerberosResponse) validateType(formats strfmt.Registry) error {

	if err := validate.Required("type", "body", m.Type); err != nil {
		return err
	}

	// value enum
	if err := m.validateTypeEnum("type", "body", *m.Type); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *KerberosResponse) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *KerberosResponse) UnmarshalBinary(b []byte) error {
	var res KerberosResponse
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
