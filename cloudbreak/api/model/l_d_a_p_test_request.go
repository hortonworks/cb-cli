// Code generated by go-swagger; DO NOT EDIT.

package model

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
)

// LDAPTestRequest l d a p test request
// swagger:model LDAPTestRequest

type LDAPTestRequest struct {

	// name of the resource
	Name string `json:"name,omitempty"`

	// Request that contains the minimal set of fields to test LDAP connectivity
	ValidationRequest *LdapValidationRequest `json:"validationRequest,omitempty"`
}

/* polymorph LDAPTestRequest name false */

/* polymorph LDAPTestRequest validationRequest false */

// Validate validates this l d a p test request
func (m *LDAPTestRequest) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateValidationRequest(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *LDAPTestRequest) validateValidationRequest(formats strfmt.Registry) error {

	if swag.IsZero(m.ValidationRequest) { // not required
		return nil
	}

	if m.ValidationRequest != nil {

		if err := m.ValidationRequest.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("validationRequest")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (m *LDAPTestRequest) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *LDAPTestRequest) UnmarshalBinary(b []byte) error {
	var res LDAPTestRequest
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
