// Code generated by go-swagger; DO NOT EDIT.

package v3_workspace_id_proxyconfigs

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"
	"time"

	"golang.org/x/net/context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/swag"

	strfmt "github.com/go-openapi/strfmt"
)

// NewListProxyconfigsByWorkspaceParams creates a new ListProxyconfigsByWorkspaceParams object
// with the default values initialized.
func NewListProxyconfigsByWorkspaceParams() *ListProxyconfigsByWorkspaceParams {
	var ()
	return &ListProxyconfigsByWorkspaceParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewListProxyconfigsByWorkspaceParamsWithTimeout creates a new ListProxyconfigsByWorkspaceParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewListProxyconfigsByWorkspaceParamsWithTimeout(timeout time.Duration) *ListProxyconfigsByWorkspaceParams {
	var ()
	return &ListProxyconfigsByWorkspaceParams{

		timeout: timeout,
	}
}

// NewListProxyconfigsByWorkspaceParamsWithContext creates a new ListProxyconfigsByWorkspaceParams object
// with the default values initialized, and the ability to set a context for a request
func NewListProxyconfigsByWorkspaceParamsWithContext(ctx context.Context) *ListProxyconfigsByWorkspaceParams {
	var ()
	return &ListProxyconfigsByWorkspaceParams{

		Context: ctx,
	}
}

// NewListProxyconfigsByWorkspaceParamsWithHTTPClient creates a new ListProxyconfigsByWorkspaceParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewListProxyconfigsByWorkspaceParamsWithHTTPClient(client *http.Client) *ListProxyconfigsByWorkspaceParams {
	var ()
	return &ListProxyconfigsByWorkspaceParams{
		HTTPClient: client,
	}
}

/*ListProxyconfigsByWorkspaceParams contains all the parameters to send to the API endpoint
for the list proxyconfigs by workspace operation typically these are written to a http.Request
*/
type ListProxyconfigsByWorkspaceParams struct {

	/*AttachGlobal*/
	AttachGlobal *bool
	/*Environment*/
	Environment *string
	/*WorkspaceID*/
	WorkspaceID int64

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the list proxyconfigs by workspace params
func (o *ListProxyconfigsByWorkspaceParams) WithTimeout(timeout time.Duration) *ListProxyconfigsByWorkspaceParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the list proxyconfigs by workspace params
func (o *ListProxyconfigsByWorkspaceParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the list proxyconfigs by workspace params
func (o *ListProxyconfigsByWorkspaceParams) WithContext(ctx context.Context) *ListProxyconfigsByWorkspaceParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the list proxyconfigs by workspace params
func (o *ListProxyconfigsByWorkspaceParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the list proxyconfigs by workspace params
func (o *ListProxyconfigsByWorkspaceParams) WithHTTPClient(client *http.Client) *ListProxyconfigsByWorkspaceParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the list proxyconfigs by workspace params
func (o *ListProxyconfigsByWorkspaceParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithAttachGlobal adds the attachGlobal to the list proxyconfigs by workspace params
func (o *ListProxyconfigsByWorkspaceParams) WithAttachGlobal(attachGlobal *bool) *ListProxyconfigsByWorkspaceParams {
	o.SetAttachGlobal(attachGlobal)
	return o
}

// SetAttachGlobal adds the attachGlobal to the list proxyconfigs by workspace params
func (o *ListProxyconfigsByWorkspaceParams) SetAttachGlobal(attachGlobal *bool) {
	o.AttachGlobal = attachGlobal
}

// WithEnvironment adds the environment to the list proxyconfigs by workspace params
func (o *ListProxyconfigsByWorkspaceParams) WithEnvironment(environment *string) *ListProxyconfigsByWorkspaceParams {
	o.SetEnvironment(environment)
	return o
}

// SetEnvironment adds the environment to the list proxyconfigs by workspace params
func (o *ListProxyconfigsByWorkspaceParams) SetEnvironment(environment *string) {
	o.Environment = environment
}

// WithWorkspaceID adds the workspaceID to the list proxyconfigs by workspace params
func (o *ListProxyconfigsByWorkspaceParams) WithWorkspaceID(workspaceID int64) *ListProxyconfigsByWorkspaceParams {
	o.SetWorkspaceID(workspaceID)
	return o
}

// SetWorkspaceID adds the workspaceId to the list proxyconfigs by workspace params
func (o *ListProxyconfigsByWorkspaceParams) SetWorkspaceID(workspaceID int64) {
	o.WorkspaceID = workspaceID
}

// WriteToRequest writes these params to a swagger request
func (o *ListProxyconfigsByWorkspaceParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.AttachGlobal != nil {

		// query param attachGlobal
		var qrAttachGlobal bool
		if o.AttachGlobal != nil {
			qrAttachGlobal = *o.AttachGlobal
		}
		qAttachGlobal := swag.FormatBool(qrAttachGlobal)
		if qAttachGlobal != "" {
			if err := r.SetQueryParam("attachGlobal", qAttachGlobal); err != nil {
				return err
			}
		}

	}

	if o.Environment != nil {

		// query param environment
		var qrEnvironment string
		if o.Environment != nil {
			qrEnvironment = *o.Environment
		}
		qEnvironment := qrEnvironment
		if qEnvironment != "" {
			if err := r.SetQueryParam("environment", qEnvironment); err != nil {
				return err
			}
		}

	}

	// path param workspaceId
	if err := r.SetPathParam("workspaceId", swag.FormatInt64(o.WorkspaceID)); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
