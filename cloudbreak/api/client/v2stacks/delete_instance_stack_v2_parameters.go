// Code generated by go-swagger; DO NOT EDIT.

package v2stacks

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"
	"time"

	"golang.org/x/net/context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/swag"

	strfmt "github.com/go-openapi/strfmt"
)

// NewDeleteInstanceStackV2Params creates a new DeleteInstanceStackV2Params object
// with the default values initialized.
func NewDeleteInstanceStackV2Params() *DeleteInstanceStackV2Params {
	var (
		forcedDefault = bool(false)
	)
	return &DeleteInstanceStackV2Params{
		Forced: &forcedDefault,

		timeout: cr.DefaultTimeout,
	}
}

// NewDeleteInstanceStackV2ParamsWithTimeout creates a new DeleteInstanceStackV2Params object
// with the default values initialized, and the ability to set a timeout on a request
func NewDeleteInstanceStackV2ParamsWithTimeout(timeout time.Duration) *DeleteInstanceStackV2Params {
	var (
		forcedDefault = bool(false)
	)
	return &DeleteInstanceStackV2Params{
		Forced: &forcedDefault,

		timeout: timeout,
	}
}

// NewDeleteInstanceStackV2ParamsWithContext creates a new DeleteInstanceStackV2Params object
// with the default values initialized, and the ability to set a context for a request
func NewDeleteInstanceStackV2ParamsWithContext(ctx context.Context) *DeleteInstanceStackV2Params {
	var (
		forcedDefault = bool(false)
	)
	return &DeleteInstanceStackV2Params{
		Forced: &forcedDefault,

		Context: ctx,
	}
}

// NewDeleteInstanceStackV2ParamsWithHTTPClient creates a new DeleteInstanceStackV2Params object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewDeleteInstanceStackV2ParamsWithHTTPClient(client *http.Client) *DeleteInstanceStackV2Params {
	var (
		forcedDefault = bool(false)
	)
	return &DeleteInstanceStackV2Params{
		Forced:     &forcedDefault,
		HTTPClient: client,
	}
}

/*DeleteInstanceStackV2Params contains all the parameters to send to the API endpoint
for the delete instance stack v2 operation typically these are written to a http.Request
*/
type DeleteInstanceStackV2Params struct {

	/*Forced*/
	Forced *bool
	/*InstanceID*/
	InstanceID string
	/*StackID*/
	StackID int64

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the delete instance stack v2 params
func (o *DeleteInstanceStackV2Params) WithTimeout(timeout time.Duration) *DeleteInstanceStackV2Params {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the delete instance stack v2 params
func (o *DeleteInstanceStackV2Params) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the delete instance stack v2 params
func (o *DeleteInstanceStackV2Params) WithContext(ctx context.Context) *DeleteInstanceStackV2Params {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the delete instance stack v2 params
func (o *DeleteInstanceStackV2Params) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the delete instance stack v2 params
func (o *DeleteInstanceStackV2Params) WithHTTPClient(client *http.Client) *DeleteInstanceStackV2Params {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the delete instance stack v2 params
func (o *DeleteInstanceStackV2Params) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithForced adds the forced to the delete instance stack v2 params
func (o *DeleteInstanceStackV2Params) WithForced(forced *bool) *DeleteInstanceStackV2Params {
	o.SetForced(forced)
	return o
}

// SetForced adds the forced to the delete instance stack v2 params
func (o *DeleteInstanceStackV2Params) SetForced(forced *bool) {
	o.Forced = forced
}

// WithInstanceID adds the instanceID to the delete instance stack v2 params
func (o *DeleteInstanceStackV2Params) WithInstanceID(instanceID string) *DeleteInstanceStackV2Params {
	o.SetInstanceID(instanceID)
	return o
}

// SetInstanceID adds the instanceId to the delete instance stack v2 params
func (o *DeleteInstanceStackV2Params) SetInstanceID(instanceID string) {
	o.InstanceID = instanceID
}

// WithStackID adds the stackID to the delete instance stack v2 params
func (o *DeleteInstanceStackV2Params) WithStackID(stackID int64) *DeleteInstanceStackV2Params {
	o.SetStackID(stackID)
	return o
}

// SetStackID adds the stackId to the delete instance stack v2 params
func (o *DeleteInstanceStackV2Params) SetStackID(stackID int64) {
	o.StackID = stackID
}

// WriteToRequest writes these params to a swagger request
func (o *DeleteInstanceStackV2Params) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.Forced != nil {

		// query param forced
		var qrForced bool
		if o.Forced != nil {
			qrForced = *o.Forced
		}
		qForced := swag.FormatBool(qrForced)
		if qForced != "" {
			if err := r.SetQueryParam("forced", qForced); err != nil {
				return err
			}
		}

	}

	// path param instanceId
	if err := r.SetPathParam("instanceId", o.InstanceID); err != nil {
		return err
	}

	// path param stackId
	if err := r.SetPathParam("stackId", swag.FormatInt64(o.StackID)); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
